{"id":"9970851da2dbcb7733e44321b0bf892d","_format":"hh-sol-build-info-1","solcVersion":"0.8.10","solcLongVersion":"0.8.10+commit.fc410830","input":{"language":"Solidity","sources":{"contracts/dependancies/Context.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"},"contracts/dependancies/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(\r\n        bytes4 interfaceId\r\n    ) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"},"contracts/dependancies/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\nimport \"./Context.sol\";\r\nimport \"./ERC165.sol\";\r\nimport \"./IERC721.sol\";\r\nimport \"./IERC721Metadata.sol\";\r\nimport \"./IERC721Receiver.sol\";\r\nimport \"./librairies/Address.sol\";\r\nimport \"./librairies/Strings.sol\";\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\r\n\r\n/**\r\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\r\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\r\n * {ERC721Enumerable}.\r\n */\r\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\r\n    using Address for address;\r\n    using Strings for uint256;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to owner address\r\n    mapping(uint256 => address) private _owners;\r\n\r\n    // Mapping owner address to token count\r\n    mapping(address => uint256) private _balances;\r\n\r\n    // Mapping from token ID to approved address\r\n    mapping(uint256 => address) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(\r\n        bytes4 interfaceId\r\n    ) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return\r\n            interfaceId == type(IERC721).interfaceId ||\r\n            interfaceId == type(IERC721Metadata).interfaceId ||\r\n            super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-balanceOf}.\r\n     */\r\n    function balanceOf(\r\n        address owner\r\n    ) public view virtual override returns (uint256) {\r\n        require(\r\n            owner != address(0),\r\n            \"ERC721: balance query for the zero address\"\r\n        );\r\n        return _balances[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-ownerOf}.\r\n     */\r\n    function ownerOf(\r\n        uint256 tokenId\r\n    ) public view virtual override returns (address) {\r\n        address owner = _owners[tokenId];\r\n        require(\r\n            owner != address(0),\r\n            \"ERC721: owner query for nonexistent token\"\r\n        );\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-name}.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-symbol}.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(\r\n        uint256 tokenId\r\n    ) public view virtual override returns (string memory) {\r\n        require(\r\n            _exists(tokenId),\r\n            \"ERC721Metadata: URI query for nonexistent token\"\r\n        );\r\n\r\n        string memory baseURI = _baseURI();\r\n        return\r\n            bytes(baseURI).length > 0\r\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\r\n                : \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-approve}.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual override {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        require(to != owner, \"ERC721: approval to current owner\");\r\n\r\n        require(\r\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\r\n            \"ERC721: approve caller is not owner nor approved for all\"\r\n        );\r\n\r\n        _approve(to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-getApproved}.\r\n     */\r\n    function getApproved(\r\n        uint256 tokenId\r\n    ) public view virtual override returns (address) {\r\n        require(\r\n            _exists(tokenId),\r\n            \"ERC721: approved query for nonexistent token\"\r\n        );\r\n\r\n        return _tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-setApprovalForAll}.\r\n     */\r\n    function setApprovalForAll(\r\n        address operator,\r\n        bool approved\r\n    ) public virtual override {\r\n        _setApprovalForAll(_msgSender(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-isApprovedForAll}.\r\n     */\r\n    function isApprovedForAll(\r\n        address owner,\r\n        address operator\r\n    ) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC721-transferFrom}.\r\n     */\r\n    // function transferFrom(\r\n    //     address from,\r\n    //     address to,\r\n    //     uint256 tokenId\r\n    // ) public virtual override {\r\n    //     //solhint-disable-next-line max-line-length\r\n    //     require(\r\n    //         _isApprovedOrOwner(_msgSender(), tokenId),\r\n    //         \"ERC721: transfer caller is not owner nor approved\"\r\n    //     );\r\n\r\n    //     _transfer(from, to, tokenId);\r\n    // }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    // function safeTransferFrom(\r\n    //     address from,\r\n    //     address to,\r\n    //     uint256 tokenId\r\n    // ) public virtual override {\r\n    //     safeTransferFrom(from, to, tokenId, \"\");\r\n    // }\r\n\r\n    /**\r\n     * @dev See {IERC721-safeTransferFrom}.\r\n     */\r\n    // function safeTransferFrom(\r\n    //     address from,\r\n    //     address to,\r\n    //     uint256 tokenId,\r\n    //     bytes memory _data\r\n    // ) public virtual override {\r\n    //     require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\r\n    //     _safeTransfer(from, to, tokenId, _data);\r\n    // }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    // function _safeTransfer(\r\n    //     address from,\r\n    //     address to,\r\n    //     uint256 tokenId,\r\n    //     bytes memory _data\r\n    // ) internal virtual {\r\n    //     _transfer(from, to, tokenId);\r\n    //     require(\r\n    //         _checkOnERC721Received(from, to, tokenId, _data),\r\n    //         \"ERC721: transfer to non ERC721Receiver implementer\"\r\n    //     );\r\n    // }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted (`_mint`),\r\n     * and stop existing when they are burned (`_burn`).\r\n     */\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        return _owners[tokenId] != address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function _isApprovedOrOwner(\r\n        address spender,\r\n        uint256 tokenId\r\n    ) internal view virtual returns (bool) {\r\n        require(\r\n            _exists(tokenId),\r\n            \"ERC721: operator query for nonexistent token\"\r\n        );\r\n        address owner = ERC721.ownerOf(tokenId);\r\n        return (spender == owner ||\r\n            isApprovedForAll(owner, spender) ||\r\n            getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal virtual {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) internal virtual {\r\n        _mint(to, tokenId);\r\n        require(\r\n            _checkOnERC721Received(address(0), to, tokenId, _data),\r\n            \"ERC721: transfer to non ERC721Receiver implementer\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal virtual {\r\n        require(to != address(0), \"ERC721: mint to the zero address\");\r\n        require(!_exists(tokenId), \"ERC721: token already minted\");\r\n\r\n        _beforeTokenTransfer(address(0), to, tokenId);\r\n\r\n        _balances[to] += 1;\r\n        _owners[tokenId] = to;\r\n\r\n        emit Transfer(address(0), to, tokenId);\r\n\r\n        _afterTokenTransfer(address(0), to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        address owner = ERC721.ownerOf(tokenId);\r\n\r\n        _beforeTokenTransfer(owner, address(0), tokenId);\r\n\r\n        // Clear approvals\r\n        _approve(address(0), tokenId);\r\n\r\n        _balances[owner] -= 1;\r\n        delete _owners[tokenId];\r\n\r\n        emit Transfer(owner, address(0), tokenId);\r\n\r\n        _afterTokenTransfer(owner, address(0), tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    // function _transfer(\r\n    //     address from,\r\n    //     address to,\r\n    //     uint256 tokenId\r\n    // ) internal virtual {\r\n    //     require(\r\n    //         ERC721.ownerOf(tokenId) == from,\r\n    //         \"ERC721: transfer from incorrect owner\"\r\n    //     );\r\n    //     require(to != address(0), \"ERC721: transfer to the zero address\");\r\n\r\n    //     _beforeTokenTransfer(from, to, tokenId);\r\n\r\n    //     // Clear approvals from the previous owner\r\n    //     _approve(address(0), tokenId);\r\n\r\n    //     _balances[from] -= 1;\r\n    //     _balances[to] += 1;\r\n    //     _owners[tokenId] = to;\r\n\r\n    //     emit Transfer(from, to, tokenId);\r\n\r\n    //     _afterTokenTransfer(from, to, tokenId);\r\n    // }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * Emits a {Approval} event.\r\n     */\r\n    function _approve(address to, uint256 tokenId) internal virtual {\r\n        _tokenApprovals[tokenId] = to;\r\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Emits a {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal virtual {\r\n        require(owner != operator, \"ERC721: approve to caller\");\r\n        _operatorApprovals[owner][operator] = approved;\r\n        emit ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\r\n     * The call is not executed if the target address is not a contract.\r\n     *\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param to target address that will receive the tokens\r\n     * @param tokenId uint256 ID of the token to be transferred\r\n     * @param _data bytes optional data to send along with the call\r\n     * @return bool whether the call correctly returned the expected magic value\r\n     */\r\n    function _checkOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        if (to.isContract()) {\r\n            try\r\n                IERC721Receiver(to).onERC721Received(\r\n                    _msgSender(),\r\n                    from,\r\n                    tokenId,\r\n                    _data\r\n                )\r\n            returns (bytes4 retval) {\r\n                return retval == IERC721Receiver.onERC721Received.selector;\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    revert(\r\n                        \"ERC721: transfer to non ERC721Receiver implementer\"\r\n                    );\r\n                } else {\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any token transfer. This includes minting\r\n     * and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) internal virtual {}\r\n}\r\n"},"contracts/dependancies/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\nimport \"./ERC721.sol\";\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721URIStorage.sol)\r\n\r\n/**\r\n * @dev ERC721 token with storage based token URI management.\r\n */\r\nabstract contract ERC721URIStorage is ERC721 {\r\n    using Strings for uint256;\r\n\r\n    // Optional mapping for token URIs\r\n    mapping(uint256 => string) private _tokenURIs;\r\n\r\n    /**\r\n     * @dev See {IERC721Metadata-tokenURI}.\r\n     */\r\n    function tokenURI(\r\n        uint256 tokenId\r\n    ) public view virtual override returns (string memory) {\r\n        require(\r\n            _exists(tokenId),\r\n            \"ERC721URIStorage: URI query for nonexistent token\"\r\n        );\r\n\r\n        string memory _tokenURI = _tokenURIs[tokenId];\r\n        string memory base = _baseURI();\r\n\r\n        // If there is no base URI, return the token URI.\r\n        if (bytes(base).length == 0) {\r\n            return _tokenURI;\r\n        }\r\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\r\n        if (bytes(_tokenURI).length > 0) {\r\n            return string(abi.encodePacked(base, _tokenURI));\r\n        }\r\n\r\n        return super.tokenURI(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function _setTokenURI(\r\n        uint256 tokenId,\r\n        string memory _tokenURI\r\n    ) internal virtual {\r\n        require(\r\n            _exists(tokenId),\r\n            \"ERC721URIStorage: URI set of nonexistent token\"\r\n        );\r\n        _tokenURIs[tokenId] = _tokenURI;\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual override {\r\n        super._burn(tokenId);\r\n\r\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\r\n            delete _tokenURIs[tokenId];\r\n        }\r\n    }\r\n}\r\n"},"contracts/dependancies/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"},"contracts/dependancies/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\r\n\r\n/**\r\n * @dev Required interface of an ERC721 compliant contract.\r\n */\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 indexed tokenId\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed approved,\r\n        uint256 indexed tokenId\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(\r\n        address indexed owner,\r\n        address indexed operator,\r\n        bool approved\r\n    );\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    // function safeTransferFrom(\r\n    //     address from,\r\n    //     address to,\r\n    //     uint256 tokenId,\r\n    //     bytes calldata data\r\n    // ) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    // function safeTransferFrom(\r\n    //     address from,\r\n    //     address to,\r\n    //     uint256 tokenId\r\n    // ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    // function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(\r\n        uint256 tokenId\r\n    ) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(\r\n        address owner,\r\n        address operator\r\n    ) external view returns (bool);\r\n}\r\n"},"contracts/dependancies/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\nimport \"./IERC721.sol\";\r\n\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}\r\n"},"contracts/dependancies/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"},"contracts/dependancies/librairies/Address.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(\r\n            address(this).balance >= amount,\r\n            \"Address: insufficient balance\"\r\n        );\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(\r\n            success,\r\n            \"Address: unable to send value, recipient may have reverted\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data\r\n    ) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return\r\n            functionCallWithValue(\r\n                target,\r\n                data,\r\n                value,\r\n                \"Address: low-level call with value failed\"\r\n            );\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(\r\n            address(this).balance >= value,\r\n            \"Address: insufficient balance for call\"\r\n        );\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(\r\n            data\r\n        );\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data\r\n    ) internal view returns (bytes memory) {\r\n        return\r\n            functionStaticCall(\r\n                target,\r\n                data,\r\n                \"Address: low-level static call failed\"\r\n            );\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data\r\n    ) internal returns (bytes memory) {\r\n        return\r\n            functionDelegateCall(\r\n                target,\r\n                data,\r\n                \"Address: low-level delegate call failed\"\r\n            );\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"},"contracts/dependancies/librairies/Base64.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\r\n\r\n/**\r\n * @dev Provides a set of functions to operate with Base64 strings.\r\n */\r\nlibrary Base64 {\r\n    /**\r\n     * @dev Base64 Encoding/Decoding Table\r\n     */\r\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n    /**\r\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\r\n     */\r\n    function encode(bytes memory data) internal pure returns (string memory) {\r\n        /**\r\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\r\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\r\n         */\r\n        if (data.length == 0) return \"\";\r\n\r\n        // Loads the table into memory\r\n        string memory table = _TABLE;\r\n\r\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\r\n        // and split into 4 numbers of 6 bits.\r\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\r\n        // - `data.length + 2`  -> Round up\r\n        // - `/ 3`              -> Number of 3-bytes chunks\r\n        // - `4 *`              -> 4 characters for each chunk\r\n        string memory result = new string(4 * ((data.length + 2) / 3));\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            // Prepare the lookup table (skip the first \"length\" byte)\r\n            let tablePtr := add(table, 1)\r\n\r\n            // Prepare result pointer, jump over length\r\n            let resultPtr := add(result, 32)\r\n\r\n            // Run over the input, 3 bytes at a time\r\n            for {\r\n                let dataPtr := data\r\n                let endPtr := add(data, mload(data))\r\n            } lt(dataPtr, endPtr) {\r\n\r\n            } {\r\n                // Advance 3 bytes\r\n                dataPtr := add(dataPtr, 3)\r\n                let input := mload(dataPtr)\r\n\r\n                // To write each character, shift the 3 bytes (18 bits) chunk\r\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\r\n                // and apply logical AND with 0x3F which is the number of\r\n                // the previous character in the ASCII table prior to the Base64 Table\r\n                // The result is then added to the table to get the character to write,\r\n                // and finally write it in the result pointer but with a left shift\r\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\r\n\r\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\r\n                resultPtr := add(resultPtr, 1) // Advance\r\n\r\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\r\n                resultPtr := add(resultPtr, 1) // Advance\r\n\r\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\r\n                resultPtr := add(resultPtr, 1) // Advance\r\n\r\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\r\n                resultPtr := add(resultPtr, 1) // Advance\r\n            }\r\n\r\n            // When data `bytes` is not exactly 3 bytes long\r\n            // it is padded with `=` characters at the end\r\n            switch mod(mload(data), 3)\r\n            case 1 {\r\n                mstore8(sub(resultPtr, 1), 0x3d)\r\n                mstore8(sub(resultPtr, 2), 0x3d)\r\n            }\r\n            case 2 {\r\n                mstore8(sub(resultPtr, 1), 0x3d)\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"},"contracts/dependancies/librairies/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n */\r\nlibrary Counters {\r\n    struct Counter {\r\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\r\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\r\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\r\n        uint256 _value; // default: 0\r\n    }\r\n\r\n    function current(Counter storage counter) internal view returns (uint256) {\r\n        return counter._value;\r\n    }\r\n\r\n    function increment(Counter storage counter) internal {\r\n        unchecked {\r\n            counter._value += 1;\r\n        }\r\n    }\r\n\r\n    function decrement(Counter storage counter) internal {\r\n        uint256 value = counter._value;\r\n        require(value > 0, \"Counter: decrement overflow\");\r\n        unchecked {\r\n            counter._value = value - 1;\r\n        }\r\n    }\r\n\r\n    function reset(Counter storage counter) internal {\r\n        counter._value = 0;\r\n    }\r\n}\r\n"},"contracts/dependancies/librairies/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        // Inspired by OraclizeAPI's implementation - MIT licence\r\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\r\n\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        while (value != 0) {\r\n            digits -= 1;\r\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\r\n            value /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        if (value == 0) {\r\n            return \"0x00\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 length = 0;\r\n        while (temp != 0) {\r\n            length++;\r\n            temp >>= 8;\r\n        }\r\n        return toHexString(value, length);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(\r\n        uint256 value,\r\n        uint256 length\r\n    ) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n}\r\n"},"contracts/UniversityDegree.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\nimport \"./dependancies/ERC721URIStorage.sol\";\r\nimport \"./dependancies/librairies/Counters.sol\";\r\nimport \"./dependancies/librairies/Base64.sol\";\r\n\r\nerror UniversityDegree__NotOwner();\r\nerror UniversityDegree__YourDegreeNotIssued();\r\nerror UniversityDegree__ScoreTooHigh();\r\n\r\n/**\r\n * @title UniversityDegree\r\n * @author Ghaieth BEN MOUSSA\r\n * @notice Non-transferable Soul Bound Token (NFT) smart contract for university degrees and diplomas\r\n * @dev This contract is used to award degrees to students who graduated in two steps:\r\n * 1. Only the owner of the contract can issue degrees with the function `issueDegree(address to, uint256 score)`\r\n * 2. Then, the student can claim the degree with the function `claimDegree()`\r\n * This type of token is called a Soul Bound Token because once the token \r\n * has been claimed by the student, it can not be transfered to anyone else.\r\n */\r\ncontract UniversityDegree is ERC721URIStorage {\r\n    using Strings for uint256;\r\n    // ERC721 Variables:\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _tokenIds;\r\n\r\n    // Degree Variables:\r\n    address private immutable i_owner; // Issuer of the degrees (the university)\r\n    uint256 internal s_degreeMaxScore; // Maximum score of the degree (usualy /20)\r\n    string internal s_degreeImage; // Image of the degree hosted on IPFS\r\n    string internal s_degreeMajor; // Major of the degree\r\n    string internal s_degreeType; // Type of the degree (bachelor, masters, etc)\r\n    mapping(address => bool) internal s_issuedDegrees;\r\n    mapping(address => uint256) internal s_studentToScore;\r\n    mapping(address => string) internal s_studentToDegree;\r\n\r\n    // Events:\r\n    event degreeIssued(address student);\r\n    event degreeClaimed(address student, uint256 tokenId);\r\n\r\n    // Modifiers:\r\n    modifier onlyOwner() {\r\n        if (msg.sender != i_owner) {\r\n            revert UniversityDegree__NotOwner();\r\n        }\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        uint256 degreeMaxScore,\r\n        string memory degreeImage,\r\n        string memory degreeMajor,\r\n        string memory degreeType\r\n    ) ERC721(\"UniversityDegreeSoulBoundToken\", \"UDSBT\") {\r\n        i_owner = msg.sender;\r\n        s_degreeMaxScore = degreeMaxScore;\r\n        s_degreeImage = degreeImage;\r\n        s_degreeMajor = degreeMajor;\r\n        s_degreeType = degreeType;\r\n    }\r\n\r\n    function issueDegree(address student, uint256 score) external onlyOwner {\r\n        if (score > s_degreeMaxScore) {\r\n            revert UniversityDegree__ScoreTooHigh();\r\n        }\r\n        s_issuedDegrees[student] = true;\r\n        s_studentToScore[student] = score;\r\n\r\n        emit degreeIssued(student);\r\n    }\r\n\r\n    function claimDegree() public returns (uint256) {\r\n        if (!s_issuedDegrees[msg.sender]) {\r\n            revert UniversityDegree__YourDegreeNotIssued();\r\n        }\r\n\r\n        _tokenIds.increment();\r\n        uint256 newItemId = _tokenIds.current();\r\n        _mint(msg.sender, newItemId);\r\n\r\n        string memory tokenURI = generateTokenURI(\r\n            newItemId,\r\n            s_studentToScore[msg.sender]\r\n        );\r\n        _setTokenURI(newItemId, tokenURI);\r\n\r\n        s_issuedDegrees[msg.sender] = false;\r\n        s_studentToDegree[msg.sender] = tokenURI;\r\n\r\n        emit degreeClaimed(msg.sender, newItemId);\r\n\r\n        return newItemId;\r\n    }\r\n\r\n    function generateTokenURI(\r\n        uint256 tokenId,\r\n        uint256 score\r\n    ) private view returns (string memory) {\r\n        bytes memory dataURI = abi.encodePacked(\r\n            '{',\r\n                '\"name\": \"', s_degreeMajor, ' Degree #', tokenId.toString(), '\",',\r\n                '\"image\": \"', s_degreeImage, '\",',\r\n                '\"description\": \"An award conferred by a college or university signifying that the recipient has satisfactorily completed a course of study\",',\r\n                '\"attributes\": [',\r\n                    '{',\r\n                        '\"trait type\": \"Score\",',\r\n                        '\"value\": ', score.toString(), ',',\r\n                        '\"max_value\": ', s_degreeMaxScore.toString(),\r\n                    '},',\r\n                    '{',\r\n                        '\"trait type\": \"Major\",',\r\n                        '\"value\": \"', s_degreeMajor, '\"',\r\n                    '},',\r\n                    '{',\r\n                        '\"trait type\": \"Type of degree\",',\r\n                        '\"value\": \"', s_degreeType, '\"',\r\n                    '}',\r\n                ']',\r\n            '}'\r\n        );\r\n        return string(\r\n            abi.encodePacked(\r\n                \"data:application/json;base64,\",\r\n                Base64.encode(dataURI)\r\n            )\r\n        );\r\n    }\r\n\r\n    // Getters\r\n    function checkDegreeOfStudent(\r\n        address student\r\n    ) external view returns (string memory) {\r\n        return s_studentToDegree[student];\r\n    }\r\n\r\n    function checkScoreOfStudent(\r\n        address student\r\n    ) public view returns (uint256) {\r\n        return s_studentToScore[student];\r\n    }\r\n\r\n    function isStudentDegreeIssued(\r\n        address student\r\n    ) public view returns (bool) {\r\n        return s_issuedDegrees[student];\r\n    }\r\n\r\n    function getOwner() public view returns (address) {\r\n        return i_owner;\r\n    }\r\n\r\n    function getTokenCounter() public view returns (Counters.Counter memory) {\r\n        return _tokenIds;\r\n    }\r\n\r\n    function getDegreeMaxScore() public view returns (uint256) {\r\n        return s_degreeMaxScore;\r\n    }\r\n\r\n    function getDegreeImage() public view returns (string memory) {\r\n        return s_degreeImage;\r\n    }\r\n\r\n    function getDegreeMajor() public view returns (string memory) {\r\n        return s_degreeMajor;\r\n    }\r\n\r\n    function getDegreeType() public view returns (string memory) {\r\n        return s_degreeType;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"contracts/UniversityDegree.sol":{"ast":{"absolutePath":"contracts/UniversityDegree.sol","exportedSymbols":{"Address":[1658],"Base64":[1705],"Context":[384],"Counters":[1779],"ERC165":[408],"ERC721":[1094],"ERC721URIStorage":[1222],"IERC165":[1234],"IERC721":[1318],"IERC721Metadata":[1345],"IERC721Receiver":[1363],"Strings":[1982],"UniversityDegree":[362],"UniversityDegree__NotOwner":[6],"UniversityDegree__ScoreTooHigh":[10],"UniversityDegree__YourDegreeNotIssued":[8]},"id":363,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:0"},{"absolutePath":"contracts/dependancies/ERC721URIStorage.sol","file":"./dependancies/ERC721URIStorage.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1223,"src":"61:45:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/dependancies/librairies/Counters.sol","file":"./dependancies/librairies/Counters.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1780,"src":"108:48:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/dependancies/librairies/Base64.sol","file":"./dependancies/librairies/Base64.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":363,"sourceUnit":1706,"src":"158:46:0","symbolAliases":[],"unitAlias":""},{"id":6,"name":"UniversityDegree__NotOwner","nameLocation":"214:26:0","nodeType":"ErrorDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"240:2:0"},"src":"208:35:0"},{"id":8,"name":"UniversityDegree__YourDegreeNotIssued","nameLocation":"251:37:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"288:2:0"},"src":"245:46:0"},{"id":10,"name":"UniversityDegree__ScoreTooHigh","nameLocation":"299:30:0","nodeType":"ErrorDefinition","parameters":{"id":9,"nodeType":"ParameterList","parameters":[],"src":"329:2:0"},"src":"293:39:0"},{"abstract":false,"baseContracts":[{"baseName":{"id":12,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"974:16:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"974:16:0"}],"canonicalName":"UniversityDegree","contractDependencies":[],"contractKind":"contract","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"336:607:0","text":" @title UniversityDegree\n @author Ghaieth BEN MOUSSA\n @notice Non-transferable Soul Bound Token (NFT) smart contract for university degrees and diplomas\n @dev This contract is used to award degrees to students who graduated in two steps:\n 1. Only the owner of the contract can issue degrees with the function `issueDegree(address to, uint256 score)`\n 2. Then, the student can claim the degree with the function `claimDegree()`\n This type of token is called a Soul Bound Token because once the token \n has been claimed by the student, it can not be transfered to anyone else."},"fullyImplemented":true,"id":362,"linearizedBaseContracts":[362,1222,1094,1345,1318,408,1234,384],"name":"UniversityDegree","nameLocation":"954:16:0","nodeType":"ContractDefinition","nodes":[{"id":16,"libraryName":{"id":14,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"1004:7:0"},"nodeType":"UsingForDirective","src":"998:26:0","typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"1016:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":20,"libraryName":{"id":17,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":1779,"src":"1062:8:0"},"nodeType":"UsingForDirective","src":"1056:36:0","typeName":{"id":19,"nodeType":"UserDefinedTypeName","pathNode":{"id":18,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"1075:16:0"},"referencedDeclaration":1711,"src":"1075:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":23,"mutability":"mutable","name":"_tokenIds","nameLocation":"1123:9:0","nodeType":"VariableDeclaration","scope":362,"src":"1098:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage","typeString":"struct Counters.Counter"},"typeName":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"1098:16:0"},"referencedDeclaration":1711,"src":"1098:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"id":25,"mutability":"immutable","name":"i_owner","nameLocation":"1193:7:0","nodeType":"VariableDeclaration","scope":362,"src":"1167:33:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"1167:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":27,"mutability":"mutable","name":"s_degreeMaxScore","nameLocation":"1266:16:0","nodeType":"VariableDeclaration","scope":362,"src":"1249:33:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":26,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"s_degreeImage","nameLocation":"1349:13:0","nodeType":"VariableDeclaration","scope":362,"src":"1333:29:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":28,"name":"string","nodeType":"ElementaryTypeName","src":"1333:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"s_degreeMajor","nameLocation":"1423:13:0","nodeType":"VariableDeclaration","scope":362,"src":"1407:29:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":30,"name":"string","nodeType":"ElementaryTypeName","src":"1407:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"s_degreeType","nameLocation":"1482:12:0","nodeType":"VariableDeclaration","scope":362,"src":"1466:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":32,"name":"string","nodeType":"ElementaryTypeName","src":"1466:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"s_issuedDegrees","nameLocation":"1582:15:0","nodeType":"VariableDeclaration","scope":362,"src":"1548:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":36,"keyType":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1556:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1548:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":35,"name":"bool","nodeType":"ElementaryTypeName","src":"1567:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"s_studentToScore","nameLocation":"1641:16:0","nodeType":"VariableDeclaration","scope":362,"src":"1604:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":40,"keyType":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1612:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1604:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":39,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":45,"mutability":"mutable","name":"s_studentToDegree","nameLocation":"1700:17:0","nodeType":"VariableDeclaration","scope":362,"src":"1664:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string)"},"typeName":{"id":44,"keyType":{"id":42,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1664:26:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string)"},"valueType":{"id":43,"name":"string","nodeType":"ElementaryTypeName","src":"1683:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"internal"},{"anonymous":false,"id":49,"name":"degreeIssued","nameLocation":"1748:12:0","nodeType":"EventDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"indexed":false,"mutability":"mutable","name":"student","nameLocation":"1769:7:0","nodeType":"VariableDeclaration","scope":49,"src":"1761:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1761:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1760:17:0"},"src":"1742:36:0"},{"anonymous":false,"id":55,"name":"degreeClaimed","nameLocation":"1790:13:0","nodeType":"EventDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"indexed":false,"mutability":"mutable","name":"student","nameLocation":"1812:7:0","nodeType":"VariableDeclaration","scope":55,"src":"1804:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1804:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1829:7:0","nodeType":"VariableDeclaration","scope":55,"src":"1821:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"1821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1803:34:0"},"src":"1784:54:0"},{"body":{"id":67,"nodeType":"Block","src":"1886:119:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":57,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1901:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1901:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":59,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"1915:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1901:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":65,"nodeType":"IfStatement","src":"1897:89:0","trueBody":{"id":64,"nodeType":"Block","src":"1924:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"UniversityDegree__NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1946:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1946:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63,"nodeType":"RevertStatement","src":"1939:35:0"}]}},{"id":66,"nodeType":"PlaceholderStatement","src":"1996:1:0"}]},"id":68,"name":"onlyOwner","nameLocation":"1874:9:0","nodeType":"ModifierDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1883:2:0"},"src":"1865:140:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2222:195:0","statements":[{"expression":{"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":83,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2233:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":84,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2243:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2243:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2233:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":87,"nodeType":"ExpressionStatement","src":"2233:20:0"},{"expression":{"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":88,"name":"s_degreeMaxScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2264:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":89,"name":"degreeMaxScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"2283:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2264:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":91,"nodeType":"ExpressionStatement","src":"2264:33:0"},{"expression":{"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":92,"name":"s_degreeImage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2308:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":93,"name":"degreeImage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"2324:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2308:27:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":95,"nodeType":"ExpressionStatement","src":"2308:27:0"},{"expression":{"id":98,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":96,"name":"s_degreeMajor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"2346:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":97,"name":"degreeMajor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"2362:11:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2346:27:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":99,"nodeType":"ExpressionStatement","src":"2346:27:0"},{"expression":{"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":100,"name":"s_degreeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2384:12:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":101,"name":"degreeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"2399:10:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2384:25:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":103,"nodeType":"ExpressionStatement","src":"2384:25:0"}]},"id":105,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"556e6976657273697479446567726565536f756c426f756e64546f6b656e","id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2179:32:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_83248c6a0a81005bf06f526cc15ee53755f859c0d38cde0e2133b25b74756c62","typeString":"literal_string \"UniversityDegreeSoulBoundToken\""},"value":"UniversityDegreeSoulBoundToken"},{"hexValue":"5544534254","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2213:7:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_32acbc305fee6b08880885f088d1308cc416392b19008886bfec2f69e704c94f","typeString":"literal_string \"UDSBT\""},"value":"UDSBT"}],"id":81,"kind":"baseConstructorSpecifier","modifierName":{"id":78,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1094,"src":"2172:6:0"},"nodeType":"ModifierInvocation","src":"2172:49:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"degreeMaxScore","nameLocation":"2043:14:0","nodeType":"VariableDeclaration","scope":105,"src":"2035:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69,"name":"uint256","nodeType":"ElementaryTypeName","src":"2035:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"degreeImage","nameLocation":"2082:11:0","nodeType":"VariableDeclaration","scope":105,"src":"2068:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":71,"name":"string","nodeType":"ElementaryTypeName","src":"2068:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"degreeMajor","nameLocation":"2118:11:0","nodeType":"VariableDeclaration","scope":105,"src":"2104:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":73,"name":"string","nodeType":"ElementaryTypeName","src":"2104:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"degreeType","nameLocation":"2154:10:0","nodeType":"VariableDeclaration","scope":105,"src":"2140:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":75,"name":"string","nodeType":"ElementaryTypeName","src":"2140:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2024:147:0"},"returnParameters":{"id":82,"nodeType":"ParameterList","parameters":[],"src":"2222:0:0"},"scope":362,"src":"2013:404:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":138,"nodeType":"Block","src":"2497:239:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":114,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2512:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":115,"name":"s_degreeMaxScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2520:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":121,"nodeType":"IfStatement","src":"2508:96:0","trueBody":{"id":120,"nodeType":"Block","src":"2538:66:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":117,"name":"UniversityDegree__ScoreTooHigh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2560:30:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2560:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":119,"nodeType":"RevertStatement","src":"2553:39:0"}]}},{"expression":{"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":122,"name":"s_issuedDegrees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"2614:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":124,"indexExpression":{"id":123,"name":"student","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"2630:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2614:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2641:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2614:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":127,"nodeType":"ExpressionStatement","src":"2614:31:0"},{"expression":{"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":128,"name":"s_studentToScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2656:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":130,"indexExpression":{"id":129,"name":"student","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"2673:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2656:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":131,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2684:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2656:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":133,"nodeType":"ExpressionStatement","src":"2656:33:0"},{"eventCall":{"arguments":[{"id":135,"name":"student","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":107,"src":"2720:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":134,"name":"degreeIssued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"2707:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2707:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":137,"nodeType":"EmitStatement","src":"2702:26:0"}]},"functionSelector":"ee442ca7","id":139,"implemented":true,"kind":"function","modifiers":[{"id":112,"kind":"modifierInvocation","modifierName":{"id":111,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":68,"src":"2487:9:0"},"nodeType":"ModifierInvocation","src":"2487:9:0"}],"name":"issueDegree","nameLocation":"2434:11:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"student","nameLocation":"2454:7:0","nodeType":"VariableDeclaration","scope":139,"src":"2446:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"2446:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"score","nameLocation":"2471:5:0","nodeType":"VariableDeclaration","scope":139,"src":"2463:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2463:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2445:32:0"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[],"src":"2497:0:0"},"scope":362,"src":"2425:311:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":208,"nodeType":"Block","src":"2792:606:0","statements":[{"condition":{"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2807:28:0","subExpression":{"baseExpression":{"id":144,"name":"s_issuedDegrees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"2808:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":147,"indexExpression":{"expression":{"id":145,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2824:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2824:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2808:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":153,"nodeType":"IfStatement","src":"2803:107:0","trueBody":{"id":152,"nodeType":"Block","src":"2837:73:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":149,"name":"UniversityDegree__YourDegreeNotIssued","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2859:37:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2859:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"RevertStatement","src":"2852:46:0"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":154,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"2922:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage","typeString":"struct Counters.Counter storage ref"}},"id":156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1737,"src":"2922:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1711_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1711_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2922:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":158,"nodeType":"ExpressionStatement","src":"2922:21:0"},{"assignments":[160],"declarations":[{"constant":false,"id":160,"mutability":"mutable","name":"newItemId","nameLocation":"2962:9:0","nodeType":"VariableDeclaration","scope":208,"src":"2954:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2954:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":164,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":161,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"2974:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage","typeString":"struct Counters.Counter storage ref"}},"id":162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1723,"src":"2974:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1711_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1711_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2974:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2954:39:0"},{"expression":{"arguments":[{"expression":{"id":166,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3010:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3010:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":168,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"3022:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":165,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"3004:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3004:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":170,"nodeType":"ExpressionStatement","src":"3004:28:0"},{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"tokenURI","nameLocation":"3059:8:0","nodeType":"VariableDeclaration","scope":208,"src":"3045:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":171,"name":"string","nodeType":"ElementaryTypeName","src":"3045:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":180,"initialValue":{"arguments":[{"id":174,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"3101:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":175,"name":"s_studentToScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3125:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":178,"indexExpression":{"expression":{"id":176,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3142:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3142:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3125:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":173,"name":"generateTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3070:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) view returns (string memory)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3070:94:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3045:119:0"},{"expression":{"arguments":[{"id":182,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"3188:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":183,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3199:8:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":181,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"3175:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3175:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"3175:33:0"},{"expression":{"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":186,"name":"s_issuedDegrees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"3221:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":189,"indexExpression":{"expression":{"id":187,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3237:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3237:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3221:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3251:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3221:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":192,"nodeType":"ExpressionStatement","src":"3221:35:0"},{"expression":{"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":193,"name":"s_studentToDegree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"3267:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":196,"indexExpression":{"expression":{"id":194,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3285:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3285:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3267:29:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":197,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3299:8:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3267:40:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":199,"nodeType":"ExpressionStatement","src":"3267:40:0"},{"eventCall":{"arguments":[{"expression":{"id":201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3339:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3339:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":203,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"3351:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":200,"name":"degreeClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"3325:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3325:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":205,"nodeType":"EmitStatement","src":"3320:41:0"},{"expression":{"id":206,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"3381:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":143,"id":207,"nodeType":"Return","src":"3374:16:0"}]},"functionSelector":"723f5352","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"claimDegree","nameLocation":"2753:11:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"2764:2:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":209,"src":"2783:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2783:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2782:9:0"},"scope":362,"src":"2744:654:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":275,"nodeType":"Block","src":"3526:1201:0","statements":[{"assignments":[219],"declarations":[{"constant":false,"id":219,"mutability":"mutable","name":"dataURI","nameLocation":"3550:7:0","nodeType":"VariableDeclaration","scope":275,"src":"3537:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":218,"name":"bytes","nodeType":"ElementaryTypeName","src":"3537:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":262,"initialValue":{"arguments":[{"hexValue":"7b","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3591:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},"value":"{"},{"hexValue":"226e616d65223a2022","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3613:11:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37","typeString":"literal_string \"\"name\": \"\""},"value":"\"name\": \""},{"id":224,"name":"s_degreeMajor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"3626:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"204465677265652023","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3641:11:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f","typeString":"literal_string \" Degree #\""},"value":" Degree #"},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":226,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"3654:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1864,"src":"3654:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3654:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3674:4:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"22696d616765223a2022","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3697:12:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6","typeString":"literal_string \"\"image\": \"\""},"value":"\"image\": \""},{"id":231,"name":"s_degreeImage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3711:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"222c","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3726:4:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226465736372697074696f6e223a2022416e20617761726420636f6e666572726564206279206120636f6c6c656765206f7220756e6976657273697479207369676e696679696e6720746861742074686520726563697069656e7420686173207361746973666163746f72696c7920636f6d706c65746564206120636f75727365206f66207374756479222c","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3749:142:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428","typeString":"literal_string \"\"description\": \"An award conferred by a college or university signifying that the recipient has satisfactorily completed a course of study\",\""},"value":"\"description\": \"An award conferred by a college or university signifying that the recipient has satisfactorily completed a course of study\","},{"hexValue":"2261747472696275746573223a205b","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3910:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c","typeString":"literal_string \"\"attributes\": [\""},"value":"\"attributes\": ["},{"hexValue":"7b","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3950:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},"value":"{"},{"hexValue":"2274726169742074797065223a202253636f7265222c","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3980:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209","typeString":"literal_string \"\"trait type\": \"Score\",\""},"value":"\"trait type\": \"Score\","},{"hexValue":"2276616c7565223a20","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4031:11:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994","typeString":"literal_string \"\"value\": \""},"value":"\"value\": "},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":238,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"4044:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1864,"src":"4044:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4044:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2c","id":241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4062:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},"value":","},{"hexValue":"226d61785f76616c7565223a20","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4092:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0","typeString":"literal_string \"\"max_value\": \""},"value":"\"max_value\": "},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":243,"name":"s_degreeMaxScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"4109:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1864,"src":"4109:25:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4109:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"7d2c","id":246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4159:4:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145","typeString":"literal_string \"},\""},"value":"},"},{"hexValue":"7b","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4186:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},"value":"{"},{"hexValue":"2274726169742074797065223a20224d616a6f72222c","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4216:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965","typeString":"literal_string \"\"trait type\": \"Major\",\""},"value":"\"trait type\": \"Major\","},{"hexValue":"2276616c7565223a2022","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4267:12:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7","typeString":"literal_string \"\"value\": \"\""},"value":"\"value\": \""},{"id":250,"name":"s_degreeMajor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"4281:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"22","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4296:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},{"hexValue":"7d2c","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4322:4:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145","typeString":"literal_string \"},\""},"value":"},"},{"hexValue":"7b","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4349:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},"value":"{"},{"hexValue":"2274726169742074797065223a202254797065206f6620646567726565222c","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4379:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04","typeString":"literal_string \"\"trait type\": \"Type of degree\",\""},"value":"\"trait type\": \"Type of degree\","},{"hexValue":"2276616c7565223a2022","id":255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4439:12:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7","typeString":"literal_string \"\"value\": \"\""},"value":"\"value\": \""},{"id":256,"name":"s_degreeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"4453:12:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"22","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4467:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},{"hexValue":"7d","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4493:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},"value":"}"},{"hexValue":"5d","id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4515:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29","typeString":"literal_string \"]\""},"value":"]"},{"hexValue":"7d","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4533:3:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},"value":"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},{"typeIdentifier":"t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37","typeString":"literal_string \"\"name\": \"\""},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f","typeString":"literal_string \" Degree #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6","typeString":"literal_string \"\"image\": \"\""},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428","typeString":"literal_string \"\"description\": \"An award conferred by a college or university signifying that the recipient has satisfactorily completed a course of study\",\""},{"typeIdentifier":"t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c","typeString":"literal_string \"\"attributes\": [\""},{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},{"typeIdentifier":"t_stringliteral_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209","typeString":"literal_string \"\"trait type\": \"Score\",\""},{"typeIdentifier":"t_stringliteral_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994","typeString":"literal_string \"\"value\": \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","typeString":"literal_string \",\""},{"typeIdentifier":"t_stringliteral_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0","typeString":"literal_string \"\"max_value\": \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145","typeString":"literal_string \"},\""},{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},{"typeIdentifier":"t_stringliteral_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965","typeString":"literal_string \"\"trait type\": \"Major\",\""},{"typeIdentifier":"t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7","typeString":"literal_string \"\"value\": \"\""},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},{"typeIdentifier":"t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145","typeString":"literal_string \"},\""},{"typeIdentifier":"t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","typeString":"literal_string \"{\""},{"typeIdentifier":"t_stringliteral_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04","typeString":"literal_string \"\"trait type\": \"Type of degree\",\""},{"typeIdentifier":"t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7","typeString":"literal_string \"\"value\": \"\""},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},{"typeIdentifier":"t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29","typeString":"literal_string \"]\""},{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""}],"expression":{"id":220,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3560:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3560:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3560:987:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3537:1010:0"},{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4621:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"arguments":[{"id":270,"name":"dataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4685:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":268,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"4671:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$1705_$","typeString":"type(library Base64)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":1704,"src":"4671:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4671:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":265,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4586:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"4586:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4586:122:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4565:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":263,"name":"string","nodeType":"ElementaryTypeName","src":"4565:6:0","typeDescriptions":{}}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4565:154:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":217,"id":274,"nodeType":"Return","src":"4558:161:0"}]},"id":276,"implemented":true,"kind":"function","modifiers":[],"name":"generateTokenURI","nameLocation":"3415:16:0","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"tokenId","nameLocation":"3450:7:0","nodeType":"VariableDeclaration","scope":276,"src":"3442:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3442:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"score","nameLocation":"3476:5:0","nodeType":"VariableDeclaration","scope":276,"src":"3468:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"3468:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3431:57:0"},"returnParameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":276,"src":"3511:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":215,"name":"string","nodeType":"ElementaryTypeName","src":"3511:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3510:15:0"},"scope":362,"src":"3406:1321:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":287,"nodeType":"Block","src":"4852:52:0","statements":[{"expression":{"baseExpression":{"id":283,"name":"s_studentToDegree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"4870:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":285,"indexExpression":{"id":284,"name":"student","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"4888:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4870:26:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":282,"id":286,"nodeType":"Return","src":"4863:33:0"}]},"functionSelector":"246bb8e6","id":288,"implemented":true,"kind":"function","modifiers":[],"name":"checkDegreeOfStudent","nameLocation":"4760:20:0","nodeType":"FunctionDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"student","nameLocation":"4799:7:0","nodeType":"VariableDeclaration","scope":288,"src":"4791:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"4791:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4780:33:0"},"returnParameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":288,"src":"4837:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":280,"name":"string","nodeType":"ElementaryTypeName","src":"4837:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4836:15:0"},"scope":362,"src":"4751:153:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":299,"nodeType":"Block","src":"5004:51:0","statements":[{"expression":{"baseExpression":{"id":295,"name":"s_studentToScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"5022:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":297,"indexExpression":{"id":296,"name":"student","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"5039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5022:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":294,"id":298,"nodeType":"Return","src":"5015:32:0"}]},"functionSelector":"3548d7a3","id":300,"implemented":true,"kind":"function","modifiers":[],"name":"checkScoreOfStudent","nameLocation":"4921:19:0","nodeType":"FunctionDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"student","nameLocation":"4959:7:0","nodeType":"VariableDeclaration","scope":300,"src":"4951:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"4951:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4940:33:0"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":300,"src":"4995:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"4995:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4994:9:0"},"scope":362,"src":"4912:143:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":311,"nodeType":"Block","src":"5154:50:0","statements":[{"expression":{"baseExpression":{"id":307,"name":"s_issuedDegrees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"5172:15:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":309,"indexExpression":{"id":308,"name":"student","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"5188:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5172:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":306,"id":310,"nodeType":"Return","src":"5165:31:0"}]},"functionSelector":"a42f34ce","id":312,"implemented":true,"kind":"function","modifiers":[],"name":"isStudentDegreeIssued","nameLocation":"5072:21:0","nodeType":"FunctionDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"student","nameLocation":"5112:7:0","nodeType":"VariableDeclaration","scope":312,"src":"5104:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"5104:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5093:33:0"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"5148:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":304,"name":"bool","nodeType":"ElementaryTypeName","src":"5148:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5147:6:0"},"scope":362,"src":"5063:141:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":319,"nodeType":"Block","src":"5262:33:0","statements":[{"expression":{"id":317,"name":"i_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"5280:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":316,"id":318,"nodeType":"Return","src":"5273:14:0"}]},"functionSelector":"893d20e8","id":320,"implemented":true,"kind":"function","modifiers":[],"name":"getOwner","nameLocation":"5221:8:0","nodeType":"FunctionDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[],"src":"5229:2:0"},"returnParameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":320,"src":"5253:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5253:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5252:9:0"},"scope":362,"src":"5212:83:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":328,"nodeType":"Block","src":"5376:35:0","statements":[{"expression":{"id":326,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"5394:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage","typeString":"struct Counters.Counter storage ref"}},"functionReturnParameters":325,"id":327,"nodeType":"Return","src":"5387:16:0"}]},"functionSelector":"6e02007d","id":329,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"5312:15:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"5327:2:0"},"returnParameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":329,"src":"5351:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_memory_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":323,"nodeType":"UserDefinedTypeName","pathNode":{"id":322,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"5351:16:0"},"referencedDeclaration":1711,"src":"5351:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"5350:25:0"},"scope":362,"src":"5303:108:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":336,"nodeType":"Block","src":"5478:42:0","statements":[{"expression":{"id":334,"name":"s_degreeMaxScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5496:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":333,"id":335,"nodeType":"Return","src":"5489:23:0"}]},"functionSelector":"fef87a3b","id":337,"implemented":true,"kind":"function","modifiers":[],"name":"getDegreeMaxScore","nameLocation":"5428:17:0","nodeType":"FunctionDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[],"src":"5445:2:0"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":337,"src":"5469:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"5469:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5468:9:0"},"scope":362,"src":"5419:101:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":344,"nodeType":"Block","src":"5590:39:0","statements":[{"expression":{"id":342,"name":"s_degreeImage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"5608:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":341,"id":343,"nodeType":"Return","src":"5601:20:0"}]},"functionSelector":"c0888f87","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"getDegreeImage","nameLocation":"5537:14:0","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"5551:2:0"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"5575:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"5575:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5574:15:0"},"scope":362,"src":"5528:101:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":352,"nodeType":"Block","src":"5699:39:0","statements":[{"expression":{"id":350,"name":"s_degreeMajor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"5717:13:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":349,"id":351,"nodeType":"Return","src":"5710:20:0"}]},"functionSelector":"19097126","id":353,"implemented":true,"kind":"function","modifiers":[],"name":"getDegreeMajor","nameLocation":"5646:14:0","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[],"src":"5660:2:0"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"5684:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":347,"name":"string","nodeType":"ElementaryTypeName","src":"5684:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5683:15:0"},"scope":362,"src":"5637:101:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":360,"nodeType":"Block","src":"5807:38:0","statements":[{"expression":{"id":358,"name":"s_degreeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"5825:12:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":357,"id":359,"nodeType":"Return","src":"5818:19:0"}]},"functionSelector":"f2dbea34","id":361,"implemented":true,"kind":"function","modifiers":[],"name":"getDegreeType","nameLocation":"5755:13:0","nodeType":"FunctionDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[],"src":"5768:2:0"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":361,"src":"5792:13:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":355,"name":"string","nodeType":"ElementaryTypeName","src":"5792:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5791:15:0"},"scope":362,"src":"5746:99:0","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":363,"src":"945:4903:0","usedErrors":[6,8,10]}],"src":"33:5817:0"},"id":0},"contracts/dependancies/Context.sol":{"ast":{"absolutePath":"contracts/dependancies/Context.sol","exportedSymbols":{"Context":[384]},"id":385,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":364,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"117:505:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":384,"linearizedBaseContracts":[384],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":373,"nodeType":"Block","src":"719:36:1","statements":[{"expression":{"expression":{"id":370,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"737:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"737:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":369,"id":372,"nodeType":"Return","src":"730:17:1"}]},"id":374,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"666:10:1","nodeType":"FunctionDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"676:2:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":374,"src":"710:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"710:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"709:9:1"},"scope":384,"src":"657:98:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":382,"nodeType":"Block","src":"830:34:1","statements":[{"expression":{"expression":{"id":379,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"848:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"848:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":378,"id":381,"nodeType":"Return","src":"841:15:1"}]},"id":383,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"772:8:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[],"src":"780:2:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"814:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":376,"name":"bytes","nodeType":"ElementaryTypeName","src":"814:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"813:16:1"},"scope":384,"src":"763:101:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":385,"src":"624:243:1","usedErrors":[]}],"src":"33:836:1"},"id":1},"contracts/dependancies/ERC165.sol":{"ast":{"absolutePath":"contracts/dependancies/ERC165.sol","exportedSymbols":{"ERC165":[408],"IERC165":[1234]},"id":409,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":386,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:2"},{"absolutePath":"contracts/dependancies/IERC165.sol","file":"./IERC165.sol","id":387,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":409,"sourceUnit":1235,"src":"61:23:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":389,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1234,"src":"776:7:2"},"id":390,"nodeType":"InheritanceSpecifier","src":"776:7:2"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"157:589:2","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":408,"linearizedBaseContracts":[408,1234],"name":"ERC165","nameLocation":"766:6:2","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1233],"body":{"id":406,"nodeType":"Block","src":"962:66:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":399,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"980:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":401,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1000:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1234_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1234_$","typeString":"type(contract IERC165)"}],"id":400,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"995:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"995:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1234","typeString":"type(contract IERC165)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"995:25:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"980:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":398,"id":405,"nodeType":"Return","src":"973:47:2"}]},"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"791:58:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":407,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"864:17:2","nodeType":"FunctionDefinition","overrides":{"id":395,"nodeType":"OverrideSpecifier","overrides":[],"src":"938:8:2"},"parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"interfaceId","nameLocation":"899:11:2","nodeType":"VariableDeclaration","scope":407,"src":"892:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":392,"name":"bytes4","nodeType":"ElementaryTypeName","src":"892:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"881:36:2"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"956:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":396,"name":"bool","nodeType":"ElementaryTypeName","src":"956:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"955:6:2"},"scope":408,"src":"855:173:2","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":409,"src":"748:283:2","usedErrors":[]}],"src":"33:1000:2"},"id":2},"contracts/dependancies/ERC721.sol":{"ast":{"absolutePath":"contracts/dependancies/ERC721.sol","exportedSymbols":{"Address":[1658],"Context":[384],"ERC165":[408],"ERC721":[1094],"IERC165":[1234],"IERC721":[1318],"IERC721Metadata":[1345],"IERC721Receiver":[1363],"Strings":[1982]},"id":1095,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":410,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:3"},{"absolutePath":"contracts/dependancies/Context.sol","file":"./Context.sol","id":411,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1095,"sourceUnit":385,"src":"61:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/dependancies/ERC165.sol","file":"./ERC165.sol","id":412,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1095,"sourceUnit":409,"src":"86:22:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/dependancies/IERC721.sol","file":"./IERC721.sol","id":413,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1095,"sourceUnit":1319,"src":"110:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/dependancies/IERC721Metadata.sol","file":"./IERC721Metadata.sol","id":414,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1095,"sourceUnit":1346,"src":"135:31:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/dependancies/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":415,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1095,"sourceUnit":1364,"src":"168:31:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/dependancies/librairies/Address.sol","file":"./librairies/Address.sol","id":416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1095,"sourceUnit":1659,"src":"201:34:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/dependancies/librairies/Strings.sol","file":"./librairies/Strings.sol","id":417,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1095,"sourceUnit":1983,"src":"237:34:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":419,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":384,"src":"623:7:3"},"id":420,"nodeType":"InheritanceSpecifier","src":"623:7:3"},{"baseName":{"id":421,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":408,"src":"632:6:3"},"id":422,"nodeType":"InheritanceSpecifier","src":"632:6:3"},{"baseName":{"id":423,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"640:7:3"},"id":424,"nodeType":"InheritanceSpecifier","src":"640:7:3"},{"baseName":{"id":425,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":1345,"src":"649:15:3"},"id":426,"nodeType":"InheritanceSpecifier","src":"649:15:3"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"352:250:3","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1094,"linearizedBaseContracts":[1094,1345,1318,408,1234,384],"name":"ERC721","nameLocation":"613:6:3","nodeType":"ContractDefinition","nodes":[{"id":429,"libraryName":{"id":427,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1658,"src":"678:7:3"},"nodeType":"UsingForDirective","src":"672:26:3","typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"690:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":432,"libraryName":{"id":430,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"710:7:3"},"nodeType":"UsingForDirective","src":"704:26:3","typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"722:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":434,"mutability":"mutable","name":"_name","nameLocation":"772:5:3","nodeType":"VariableDeclaration","scope":1094,"src":"757:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":433,"name":"string","nodeType":"ElementaryTypeName","src":"757:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":436,"mutability":"mutable","name":"_symbol","nameLocation":"822:7:3","nodeType":"VariableDeclaration","scope":1094,"src":"807:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":435,"name":"string","nodeType":"ElementaryTypeName","src":"807:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":440,"mutability":"mutable","name":"_owners","nameLocation":"921:7:3","nodeType":"VariableDeclaration","scope":1094,"src":"885:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":439,"keyType":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"885:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"904:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":444,"mutability":"mutable","name":"_balances","nameLocation":"1018:9:3","nodeType":"VariableDeclaration","scope":1094,"src":"982:45:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":443,"keyType":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"982:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":448,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1122:15:3","nodeType":"VariableDeclaration","scope":1094,"src":"1086:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":447,"keyType":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1086:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":454,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1248:18:3","nodeType":"VariableDeclaration","scope":1094,"src":"1195:71:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":453,"keyType":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"1203:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1195:44:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":452,"keyType":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1214:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":451,"name":"bool","nodeType":"ElementaryTypeName","src":"1233:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":470,"nodeType":"Block","src":"1447:60:3","statements":[{"expression":{"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":462,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"1458:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":463,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"1466:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1458:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":465,"nodeType":"ExpressionStatement","src":"1458:13:3"},{"expression":{"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":466,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"1482:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":467,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"1492:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1482:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":469,"nodeType":"ExpressionStatement","src":"1482:17:3"}]},"documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"1275:110:3","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":471,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"name_","nameLocation":"1417:5:3","nodeType":"VariableDeclaration","scope":471,"src":"1403:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":456,"name":"string","nodeType":"ElementaryTypeName","src":"1403:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"symbol_","nameLocation":"1438:7:3","nodeType":"VariableDeclaration","scope":471,"src":"1424:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":458,"name":"string","nodeType":"ElementaryTypeName","src":"1424:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1402:44:3"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[],"src":"1447:0:3"},"scope":1094,"src":"1391:116:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[407,1233],"body":{"id":501,"nodeType":"Block","src":"1703:197:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":482,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"1734:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":484,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"1754:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1318_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1318_$","typeString":"type(contract IERC721)"}],"id":483,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1749:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1749:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1318","typeString":"type(contract IERC721)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1749:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1734:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":488,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"1791:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":490,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"1811:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1345_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1345_$","typeString":"type(contract IERC721Metadata)"}],"id":489,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1806:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1806:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1345","typeString":"type(contract IERC721Metadata)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1806:33:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1791:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1734:105:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":497,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"1880:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":495,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1856:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1094_$","typeString":"type(contract super ERC721)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":407,"src":"1856:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1856:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1734:158:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":481,"id":500,"nodeType":"Return","src":"1714:178:3"}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"1515:58:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":502,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1588:17:3","nodeType":"FunctionDefinition","overrides":{"id":478,"nodeType":"OverrideSpecifier","overrides":[{"id":476,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":408,"src":"1671:6:3"},{"id":477,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1234,"src":"1679:7:3"}],"src":"1662:25:3"},"parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"interfaceId","nameLocation":"1623:11:3","nodeType":"VariableDeclaration","scope":502,"src":"1616:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":473,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1616:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1605:36:3"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":502,"src":"1697:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":479,"name":"bool","nodeType":"ElementaryTypeName","src":"1697:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1696:6:3"},"scope":1094,"src":"1579:321:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1275],"body":{"id":525,"nodeType":"Block","src":"2061:164:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":512,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2094:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2111:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2103:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"2103:7:3","typeDescriptions":{}}},"id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2103:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2094:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2128:44:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""},"value":"ERC721: balance query for the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""}],"id":511,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2072:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:111:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"2072:111:3"},{"expression":{"baseExpression":{"id":521,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2201:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":523,"indexExpression":{"id":522,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"2211:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2201:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":510,"id":524,"nodeType":"Return","src":"2194:23:3"}]},"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"1908:50:3","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":526,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1973:9:3","nodeType":"FunctionDefinition","overrides":{"id":507,"nodeType":"OverrideSpecifier","overrides":[],"src":"2034:8:3"},"parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"owner","nameLocation":"2001:5:3","nodeType":"VariableDeclaration","scope":526,"src":"1993:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"1993:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1982:31:3"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":526,"src":"2052:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":508,"name":"uint256","nodeType":"ElementaryTypeName","src":"2052:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2051:9:3"},"scope":1094,"src":"1964:261:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":553,"nodeType":"Block","src":"2384:195:3","statements":[{"assignments":[536],"declarations":[{"constant":false,"id":536,"mutability":"mutable","name":"owner","nameLocation":"2403:5:3","nodeType":"VariableDeclaration","scope":553,"src":"2395:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":540,"initialValue":{"baseExpression":{"id":537,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2411:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":539,"indexExpression":{"id":538,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2419:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2411:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2395:32:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":542,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"2460:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2477:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2469:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:3","typeDescriptions":{}}},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2469:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2460:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","typeString":"literal_string \"ERC721: owner query for nonexistent token\""},"value":"ERC721: owner query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","typeString":"literal_string \"ERC721: owner query for nonexistent token\""}],"id":541,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2438:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2438:110:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"2438:110:3"},{"expression":{"id":551,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"2566:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":534,"id":552,"nodeType":"Return","src":"2559:12:3"}]},"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"2233:48:3","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":554,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2296:7:3","nodeType":"FunctionDefinition","overrides":{"id":531,"nodeType":"OverrideSpecifier","overrides":[],"src":"2357:8:3"},"parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"tokenId","nameLocation":"2322:7:3","nodeType":"VariableDeclaration","scope":554,"src":"2314:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"2314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2303:33:3"},"returnParameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":554,"src":"2375:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"2375:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2374:9:3"},"scope":1094,"src":"2287:292:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1330],"body":{"id":563,"nodeType":"Block","src":"2715:31:3","statements":[{"expression":{"id":561,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"2733:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":560,"id":562,"nodeType":"Return","src":"2726:12:3"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"2587:53:3","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":564,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2655:4:3","nodeType":"FunctionDefinition","overrides":{"id":557,"nodeType":"OverrideSpecifier","overrides":[],"src":"2682:8:3"},"parameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"2659:2:3"},"returnParameters":{"id":560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":564,"src":"2700:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":558,"name":"string","nodeType":"ElementaryTypeName","src":"2700:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2699:15:3"},"scope":1094,"src":"2646:100:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1336],"body":{"id":573,"nodeType":"Block","src":"2886:33:3","statements":[{"expression":{"id":571,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"2904:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":570,"id":572,"nodeType":"Return","src":"2897:14:3"}]},"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"2754:55:3","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":574,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2824:6:3","nodeType":"FunctionDefinition","overrides":{"id":567,"nodeType":"OverrideSpecifier","overrides":[],"src":"2853:8:3"},"parameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"2830:2:3"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":574,"src":"2871:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":568,"name":"string","nodeType":"ElementaryTypeName","src":"2871:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2870:15:3"},"scope":1094,"src":"2815:104:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1344],"body":{"id":615,"nodeType":"Block","src":"3094:330:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":585,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"3135:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"3127:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3127:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3158:49:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""},"value":"ERC721Metadata: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""}],"id":583,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3105:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3105:113:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":589,"nodeType":"ExpressionStatement","src":"3105:113:3"},{"assignments":[591],"declarations":[{"constant":false,"id":591,"mutability":"mutable","name":"baseURI","nameLocation":"3245:7:3","nodeType":"VariableDeclaration","scope":615,"src":"3231:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":590,"name":"string","nodeType":"ElementaryTypeName","src":"3231:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":594,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":592,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"3255:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3255:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3231:34:3"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":597,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"3302:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3296:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":595,"name":"bytes","nodeType":"ElementaryTypeName","src":"3296:5:3","typeDescriptions":{}}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3296:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3296:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3320:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3296:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3414:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3296:120:3","trueExpression":{"arguments":[{"arguments":[{"id":606,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"3365:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":607,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"3374:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1864,"src":"3374:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3374:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":604,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3348:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3348:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3348:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3341:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":602,"name":"string","nodeType":"ElementaryTypeName","src":"3341:6:3","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3341:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":582,"id":614,"nodeType":"Return","src":"3276:140:3"}]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"2927:57:3","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":616,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2999:8:3","nodeType":"FunctionDefinition","overrides":{"id":579,"nodeType":"OverrideSpecifier","overrides":[],"src":"3061:8:3"},"parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"tokenId","nameLocation":"3026:7:3","nodeType":"VariableDeclaration","scope":616,"src":"3018:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"3018:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3007:33:3"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":616,"src":"3079:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":580,"name":"string","nodeType":"ElementaryTypeName","src":"3079:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3078:15:3"},"scope":1094,"src":"2990:434:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":624,"nodeType":"Block","src":"3739:28:3","statements":[{"expression":{"hexValue":"","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3757:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":621,"id":623,"nodeType":"Return","src":"3750:9:3"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"3432:235:3","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":625,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3682:8:3","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"3690:2:3"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":625,"src":"3724:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":619,"name":"string","nodeType":"ElementaryTypeName","src":"3724:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3723:15:3"},"scope":1094,"src":"3673:94:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1291],"body":{"id":667,"nodeType":"Block","src":"3899:341:3","statements":[{"assignments":[635],"declarations":[{"constant":false,"id":635,"mutability":"mutable","name":"owner","nameLocation":"3918:5:3","nodeType":"VariableDeclaration","scope":667,"src":"3910:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"3910:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":640,"initialValue":{"arguments":[{"id":638,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"3941:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":636,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"3926:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1094_$","typeString":"type(contract ERC721)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":554,"src":"3926:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3926:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3910:39:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":642,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"3968:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":643,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"3974:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3968:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3981:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3960:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3960:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"3960:57:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":649,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4052:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4052:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":651,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4068:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4052:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":654,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4094:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":655,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4101:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4101:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"4077:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4077:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4052:62:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4129:58:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""},"value":"ERC721: approve caller is not owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""}],"id":648,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4030:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:168:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"4030:168:3"},{"expression":{"arguments":[{"id":663,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"4220:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":664,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"4224:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"4211:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4211:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":666,"nodeType":"ExpressionStatement","src":"4211:21:3"}]},"documentation":{"id":626,"nodeType":"StructuredDocumentation","src":"3775:48:3","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":668,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3838:7:3","nodeType":"FunctionDefinition","overrides":{"id":632,"nodeType":"OverrideSpecifier","overrides":[],"src":"3890:8:3"},"parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"to","nameLocation":"3854:2:3","nodeType":"VariableDeclaration","scope":668,"src":"3846:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"3846:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"tokenId","nameLocation":"3866:7:3","nodeType":"VariableDeclaration","scope":668,"src":"3858:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"3858:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3845:29:3"},"returnParameters":{"id":633,"nodeType":"ParameterList","parameters":[],"src":"3899:0:3"},"scope":1094,"src":"3829:411:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1307],"body":{"id":688,"nodeType":"Block","src":"4407:173:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":679,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"4448:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":678,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4440:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4440:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4471:46:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""},"value":"ERC721: approved query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""}],"id":677,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4418:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4418:110:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"ExpressionStatement","src":"4418:110:3"},{"expression":{"baseExpression":{"id":684,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"4548:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":686,"indexExpression":{"id":685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"4564:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4548:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":676,"id":687,"nodeType":"Return","src":"4541:31:3"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"4248:52:3","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":689,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4315:11:3","nodeType":"FunctionDefinition","overrides":{"id":673,"nodeType":"OverrideSpecifier","overrides":[],"src":"4380:8:3"},"parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"tokenId","nameLocation":"4345:7:3","nodeType":"VariableDeclaration","scope":689,"src":"4337:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"4337:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4326:33:3"},"returnParameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":689,"src":"4398:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"4398:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4397:9:3"},"scope":1094,"src":"4306:274:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1299],"body":{"id":705,"nodeType":"Block","src":"4761:71:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":699,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4791:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4791:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":701,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"4805:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":702,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"4815:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":698,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"4772:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4772:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":704,"nodeType":"ExpressionStatement","src":"4772:52:3"}]},"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"4588:58:3","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":706,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4661:17:3","nodeType":"FunctionDefinition","overrides":{"id":696,"nodeType":"OverrideSpecifier","overrides":[],"src":"4752:8:3"},"parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"operator","nameLocation":"4697:8:3","nodeType":"VariableDeclaration","scope":706,"src":"4689:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"4689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"approved","nameLocation":"4721:8:3","nodeType":"VariableDeclaration","scope":706,"src":"4716:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"4716:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4678:58:3"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[],"src":"4761:0:3"},"scope":1094,"src":"4652:180:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1317],"body":{"id":723,"nodeType":"Block","src":"5031:61:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":717,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"5049:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":719,"indexExpression":{"id":718,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"5068:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5049:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":721,"indexExpression":{"id":720,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"5075:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5049:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":716,"id":722,"nodeType":"Return","src":"5042:42:3"}]},"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"4840:57:3","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":724,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4912:16:3","nodeType":"FunctionDefinition","overrides":{"id":713,"nodeType":"OverrideSpecifier","overrides":[],"src":"5007:8:3"},"parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"owner","nameLocation":"4947:5:3","nodeType":"VariableDeclaration","scope":724,"src":"4939:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"4939:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"operator","nameLocation":"4971:8:3","nodeType":"VariableDeclaration","scope":724,"src":"4963:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"4963:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4928:58:3"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"5025:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":714,"name":"bool","nodeType":"ElementaryTypeName","src":"5025:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5024:6:3"},"scope":1094,"src":"4903:189:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":741,"nodeType":"Block","src":"7928:56:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":732,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"7946:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":734,"indexExpression":{"id":733,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"7954:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7946:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7974:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7966:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"7966:7:3","typeDescriptions":{}}},"id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7966:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7946:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":731,"id":740,"nodeType":"Return","src":"7939:37:3"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"7552:299:3","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":742,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7866:7:3","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"tokenId","nameLocation":"7882:7:3","nodeType":"VariableDeclaration","scope":742,"src":"7874:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"7874:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7873:17:3"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"7922:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":729,"name":"bool","nodeType":"ElementaryTypeName","src":"7922:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7921:6:3"},"scope":1094,"src":"7857:127:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"8275:312:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":754,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"8316:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"8308:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8308:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8339:46:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""},"value":"ERC721: operator query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""}],"id":752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8286:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8286:110:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"8286:110:3"},{"assignments":[760],"declarations":[{"constant":false,"id":760,"mutability":"mutable","name":"owner","nameLocation":"8415:5:3","nodeType":"VariableDeclaration","scope":782,"src":"8407:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"8407:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":765,"initialValue":{"arguments":[{"id":763,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"8438:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":761,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"8423:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1094_$","typeString":"type(contract ERC721)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":554,"src":"8423:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8407:39:3"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":766,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"8465:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":767,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8476:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8465:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":770,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8515:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":771,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"8522:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":769,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"8498:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8498:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8465:65:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":775,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"8559:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":774,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"8547:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8547:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":777,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"8571:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8547:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8465:113:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8464:115:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":751,"id":781,"nodeType":"Return","src":"8457:122:3"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"7992:153:3","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":783,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"8160:18:3","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"spender","nameLocation":"8197:7:3","nodeType":"VariableDeclaration","scope":783,"src":"8189:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"8189:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"tokenId","nameLocation":"8223:7:3","nodeType":"VariableDeclaration","scope":783,"src":"8215:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"8215:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8178:59:3"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"8269:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":749,"name":"bool","nodeType":"ElementaryTypeName","src":"8269:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8268:6:3"},"scope":1094,"src":"8151:436:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"8994:45:3","statements":[{"expression":{"arguments":[{"id":792,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"9015:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"9019:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9028:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":791,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[798,827],"referencedDeclaration":827,"src":"9005:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9005:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"ExpressionStatement","src":"9005:26:3"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"8595:328:3","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8938:9:3","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"to","nameLocation":"8956:2:3","nodeType":"VariableDeclaration","scope":798,"src":"8948:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"8948:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"tokenId","nameLocation":"8968:7:3","nodeType":"VariableDeclaration","scope":798,"src":"8960:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"8960:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8947:29:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"8994:0:3"},"scope":1094,"src":"8929:110:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":826,"nodeType":"Block","src":"9385:202:3","statements":[{"expression":{"arguments":[{"id":809,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"9402:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":810,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"9406:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":808,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"9396:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9396:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"9396:18:3"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9478:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9470:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"9470:7:3","typeDescriptions":{}}},"id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9470:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"9482:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"9486:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":821,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"9495:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":814,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"9447:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9447:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9516:52:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9425:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9425:154:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":825,"nodeType":"ExpressionStatement","src":"9425:154:3"}]},"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"9047:213:3","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":827,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"9275:9:3","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"to","nameLocation":"9303:2:3","nodeType":"VariableDeclaration","scope":827,"src":"9295:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"9295:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"tokenId","nameLocation":"9324:7:3","nodeType":"VariableDeclaration","scope":827,"src":"9316:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"9316:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"_data","nameLocation":"9355:5:3","nodeType":"VariableDeclaration","scope":827,"src":"9342:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":804,"name":"bytes","nodeType":"ElementaryTypeName","src":"9342:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9284:83:3"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[],"src":"9385:0:3"},"scope":1094,"src":"9266:321:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":892,"nodeType":"Block","src":"9984:378:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":836,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"10003:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10017:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10009:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":837,"name":"address","nodeType":"ElementaryTypeName","src":"10009:7:3","typeDescriptions":{}}},"id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10009:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10003:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10021:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9995:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9995:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"ExpressionStatement","src":"9995:61:3"},{"expression":{"arguments":[{"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10075:17:3","subExpression":{"arguments":[{"id":847,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"10084:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":846,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"10076:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10076:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10094:30:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":845,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10067:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10067:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"10067:58:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10159:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"10159:7:3","typeDescriptions":{}}},"id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10159:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"10171:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":859,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"10175:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":853,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"10138:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10138:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"10138:45:3"},{"expression":{"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":862,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"10196:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":864,"indexExpression":{"id":863,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"10206:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10196:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10213:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10196:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":867,"nodeType":"ExpressionStatement","src":"10196:18:3"},{"expression":{"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":868,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"10225:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":870,"indexExpression":{"id":869,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"10233:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10225:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":871,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"10244:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10225:21:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":873,"nodeType":"ExpressionStatement","src":"10225:21:3"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10281:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10273:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"10273:7:3","typeDescriptions":{}}},"id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10273:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"10285:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"10289:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":874,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"10264:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10264:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":882,"nodeType":"EmitStatement","src":"10259:38:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10338:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10330:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"10330:7:3","typeDescriptions":{}}},"id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10330:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":888,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"10342:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"10346:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":883,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"10310:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10310:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"ExpressionStatement","src":"10310:44:3"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"9595:322:3","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":893,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9932:5:3","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"to","nameLocation":"9946:2:3","nodeType":"VariableDeclaration","scope":893,"src":"9938:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"9938:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"tokenId","nameLocation":"9958:7:3","nodeType":"VariableDeclaration","scope":893,"src":"9950:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"9950:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9937:29:3"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[],"src":"9984:0:3"},"scope":1094,"src":"9923:439:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":952,"nodeType":"Block","src":"10640:371:3","statements":[{"assignments":[900],"declarations":[{"constant":false,"id":900,"mutability":"mutable","name":"owner","nameLocation":"10659:5:3","nodeType":"VariableDeclaration","scope":952,"src":"10651:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"10651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":905,"initialValue":{"arguments":[{"id":903,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"10682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":901,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"10667:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1094_$","typeString":"type(contract ERC721)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":554,"src":"10667:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10667:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10651:39:3"},{"expression":{"arguments":[{"id":907,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"10724:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10739:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10731:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"10731:7:3","typeDescriptions":{}}},"id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10731:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":912,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"10743:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":906,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"10703:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10703:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"10703:48:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10809:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10801:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"10801:7:3","typeDescriptions":{}}},"id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10801:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":920,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"10813:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":915,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"10792:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10792:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"10792:29:3"},{"expression":{"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":923,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"10834:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":925,"indexExpression":{"id":924,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"10844:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10834:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10854:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10834:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":928,"nodeType":"ExpressionStatement","src":"10834:21:3"},{"expression":{"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10866:23:3","subExpression":{"baseExpression":{"id":929,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"10873:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":931,"indexExpression":{"id":930,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"10881:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10873:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"10866:23:3"},{"eventCall":{"arguments":[{"id":935,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"10916:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10931:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10923:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"10923:7:3","typeDescriptions":{}}},"id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10923:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":940,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"10935:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":934,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"10907:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10907:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":942,"nodeType":"EmitStatement","src":"10902:41:3"},{"expression":{"arguments":[{"id":944,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"10976:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10991:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10983:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"10983:7:3","typeDescriptions":{}}},"id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10983:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"10995:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":943,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"10956:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10956:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":951,"nodeType":"ExpressionStatement","src":"10956:47:3"}]},"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"10370:215:3","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":953,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10600:5:3","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"tokenId","nameLocation":"10614:7:3","nodeType":"VariableDeclaration","scope":953,"src":"10606:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"10606:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10605:17:3"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"10640:0:3"},"scope":1094,"src":"10591:420:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":976,"nodeType":"Block","src":"12249:110:3","statements":[{"expression":{"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":961,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"12260:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":963,"indexExpression":{"id":962,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"12276:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12260:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":964,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"12287:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12260:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":966,"nodeType":"ExpressionStatement","src":"12260:29:3"},{"eventCall":{"arguments":[{"arguments":[{"id":970,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"12329:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":968,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"12314:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1094_$","typeString":"type(contract ERC721)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":554,"src":"12314:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12314:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":972,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"12339:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"12343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":967,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"12305:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12305:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":975,"nodeType":"EmitStatement","src":"12300:51:3"}]},"documentation":{"id":954,"nodeType":"StructuredDocumentation","src":"12075:104:3","text":" @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."},"id":977,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12194:8:3","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"to","nameLocation":"12211:2:3","nodeType":"VariableDeclaration","scope":977,"src":"12203:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"12203:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"tokenId","nameLocation":"12223:7:3","nodeType":"VariableDeclaration","scope":977,"src":"12215:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"12215:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12202:29:3"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"12249:0:3"},"scope":1094,"src":"12185:174:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1008,"nodeType":"Block","src":"12628:188:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":988,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"12647:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":989,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"12656:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12647:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12666:27:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":987,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12639:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12639:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"ExpressionStatement","src":"12639:55:3"},{"expression":{"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":994,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"12705:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":997,"indexExpression":{"id":995,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"12724:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12705:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":998,"indexExpression":{"id":996,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"12731:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12705:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":999,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"12743:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12705:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1001,"nodeType":"ExpressionStatement","src":"12705:46:3"},{"eventCall":{"arguments":[{"id":1003,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"12782:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1004,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"12789:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1005,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"12799:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1002,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"12767:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12767:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"EmitStatement","src":"12762:46:3"}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"12367:128:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."},"id":1009,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12510:18:3","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"owner","nameLocation":"12547:5:3","nodeType":"VariableDeclaration","scope":1009,"src":"12539:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"12539:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"operator","nameLocation":"12571:8:3","nodeType":"VariableDeclaration","scope":1009,"src":"12563:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"12563:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"approved","nameLocation":"12595:8:3","nodeType":"VariableDeclaration","scope":1009,"src":"12590:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":983,"name":"bool","nodeType":"ElementaryTypeName","src":"12590:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12528:82:3"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[],"src":"12628:0:3"},"scope":1094,"src":"12501:315:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1070,"nodeType":"Block","src":"13542:819:3","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1023,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"13557:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1381,"src":"13557:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13557:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1068,"nodeType":"Block","src":"14316:38:3","statements":[{"expression":{"hexValue":"74727565","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14338:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1022,"id":1067,"nodeType":"Return","src":"14331:11:3"}]},"id":1069,"nodeType":"IfStatement","src":"13553:801:3","trueBody":{"id":1065,"nodeType":"Block","src":"13574:736:3","statements":[{"clauses":[{"block":{"id":1045,"nodeType":"Block","src":"13823:93:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"13849:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1040,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"13859:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1363_$","typeString":"type(contract IERC721Receiver)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"13859:32:3","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"13859:41:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"13849:51:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1022,"id":1044,"nodeType":"Return","src":"13842:58:3"}]},"errorName":"","id":1046,"nodeType":"TryCatchClause","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"retval","nameLocation":"13815:6:3","nodeType":"VariableDeclaration","scope":1046,"src":"13808:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1036,"name":"bytes4","nodeType":"ElementaryTypeName","src":"13808:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"13807:15:3"},"src":"13799:117:3"},{"block":{"id":1062,"nodeType":"Block","src":"13945:354:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1050,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"13968:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13968:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13985:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13968:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1060,"nodeType":"Block","src":"14145:139:3","statements":[{"AST":{"nodeType":"YulBlock","src":"14177:88:3","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14215:2:3","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14219:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14211:3:3"},"nodeType":"YulFunctionCall","src":"14211:15:3"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14234:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14228:5:3"},"nodeType":"YulFunctionCall","src":"14228:13:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14204:6:3"},"nodeType":"YulFunctionCall","src":"14204:38:3"},"nodeType":"YulExpressionStatement","src":"14204:38:3"}]},"evmVersion":"london","externalReferences":[{"declaration":1048,"isOffset":false,"isSlot":false,"src":"14219:6:3","valueSize":1},{"declaration":1048,"isOffset":false,"isSlot":false,"src":"14234:6:3","valueSize":1}],"id":1059,"nodeType":"InlineAssembly","src":"14168:97:3"}]},"id":1061,"nodeType":"IfStatement","src":"13964:320:3","trueBody":{"id":1058,"nodeType":"Block","src":"13988:151:3","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14044:52:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1054,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14011:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14011:108:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"14011:108:3"}]}}]},"errorName":"","id":1063,"nodeType":"TryCatchClause","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"mutability":"mutable","name":"reason","nameLocation":"13937:6:3","nodeType":"VariableDeclaration","scope":1063,"src":"13924:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1047,"name":"bytes","nodeType":"ElementaryTypeName","src":"13924:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13923:21:3"},"src":"13917:382:3"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1030,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"13669:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13669:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"13704:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1033,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"13731:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1034,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"13761:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1027,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"13626:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1026,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"13610:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1363_$","typeString":"type(contract IERC721Receiver)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13610:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1363","typeString":"contract IERC721Receiver"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"13610:36:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13610:175:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1064,"nodeType":"TryStatement","src":"13589:710:3"}]}}]},"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"12824:551:3","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1071,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13390:22:3","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"from","nameLocation":"13431:4:3","nodeType":"VariableDeclaration","scope":1071,"src":"13423:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"13423:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"to","nameLocation":"13454:2:3","nodeType":"VariableDeclaration","scope":1071,"src":"13446:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"13446:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"tokenId","nameLocation":"13475:7:3","nodeType":"VariableDeclaration","scope":1071,"src":"13467:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"13467:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"_data","nameLocation":"13506:5:3","nodeType":"VariableDeclaration","scope":1071,"src":"13493:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1017,"name":"bytes","nodeType":"ElementaryTypeName","src":"13493:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13412:106:3"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1071,"src":"13536:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1020,"name":"bool","nodeType":"ElementaryTypeName","src":"13536:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13535:6:3"},"scope":1094,"src":"13381:980:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1081,"nodeType":"Block","src":"15057:2:3","statements":[]},"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"14369:558:3","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1082,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"14942:20:3","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"from","nameLocation":"14981:4:3","nodeType":"VariableDeclaration","scope":1082,"src":"14973:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"14973:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"to","nameLocation":"15004:2:3","nodeType":"VariableDeclaration","scope":1082,"src":"14996:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"14996:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"tokenId","nameLocation":"15025:7:3","nodeType":"VariableDeclaration","scope":1082,"src":"15017:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"15017:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14962:77:3"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"15057:0:3"},"scope":1094,"src":"14933:126:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1092,"nodeType":"Block","src":"15567:2:3","statements":[]},"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"15067:371:3","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1093,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"15453:19:3","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"from","nameLocation":"15491:4:3","nodeType":"VariableDeclaration","scope":1093,"src":"15483:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"15483:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"to","nameLocation":"15514:2:3","nodeType":"VariableDeclaration","scope":1093,"src":"15506:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"15506:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"tokenId","nameLocation":"15535:7:3","nodeType":"VariableDeclaration","scope":1093,"src":"15527:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"15527:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15472:77:3"},"returnParameters":{"id":1091,"nodeType":"ParameterList","parameters":[],"src":"15567:0:3"},"scope":1094,"src":"15444:125:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1095,"src":"604:14968:3","usedErrors":[]}],"src":"33:15541:3"},"id":3},"contracts/dependancies/ERC721URIStorage.sol":{"ast":{"absolutePath":"contracts/dependancies/ERC721URIStorage.sol","exportedSymbols":{"Address":[1658],"Context":[384],"ERC165":[408],"ERC721":[1094],"ERC721URIStorage":[1222],"IERC165":[1234],"IERC721":[1318],"IERC721Metadata":[1345],"IERC721Receiver":[1363],"Strings":[1982]},"id":1223,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1096,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:4"},{"absolutePath":"contracts/dependancies/ERC721.sol","file":"./ERC721.sol","id":1097,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1223,"sourceUnit":1095,"src":"61:22:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1099,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1094,"src":"281:6:4"},"id":1100,"nodeType":"InheritanceSpecifier","src":"281:6:4"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"170:71:4","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":1222,"linearizedBaseContracts":[1222,1094,1345,1318,408,1234,384],"name":"ERC721URIStorage","nameLocation":"261:16:4","nodeType":"ContractDefinition","nodes":[{"id":1103,"libraryName":{"id":1101,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":1982,"src":"301:7:4"},"nodeType":"UsingForDirective","src":"295:26:4","typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"313:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1107,"mutability":"mutable","name":"_tokenURIs","nameLocation":"404:10:4","nodeType":"VariableDeclaration","scope":1222,"src":"369:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1106,"keyType":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"377:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"369:26:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":1105,"name":"string","nodeType":"ElementaryTypeName","src":"388:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[616],"body":{"id":1168,"nodeType":"Block","src":"590:628:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1118,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"631:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1117,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"623:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"623:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"654:51:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a","typeString":"literal_string \"ERC721URIStorage: URI query for nonexistent token\""},"value":"ERC721URIStorage: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a","typeString":"literal_string \"ERC721URIStorage: URI query for nonexistent token\""}],"id":1116,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"601:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"601:115:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1122,"nodeType":"ExpressionStatement","src":"601:115:4"},{"assignments":[1124],"declarations":[{"constant":false,"id":1124,"mutability":"mutable","name":"_tokenURI","nameLocation":"743:9:4","nodeType":"VariableDeclaration","scope":1168,"src":"729:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1123,"name":"string","nodeType":"ElementaryTypeName","src":"729:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1128,"initialValue":{"baseExpression":{"id":1125,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"755:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1127,"indexExpression":{"id":1126,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"766:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"755:19:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"729:45:4"},{"assignments":[1130],"declarations":[{"constant":false,"id":1130,"mutability":"mutable","name":"base","nameLocation":"799:4:4","nodeType":"VariableDeclaration","scope":1168,"src":"785:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1129,"name":"string","nodeType":"ElementaryTypeName","src":"785:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1131,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"806:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"806:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"785:31:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1136,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"898:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"892:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1134,"name":"bytes","nodeType":"ElementaryTypeName","src":"892:5:4","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"892:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"892:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"914:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"892:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1144,"nodeType":"IfStatement","src":"888:72:4","trueBody":{"id":1143,"nodeType":"Block","src":"917:43:4","statements":[{"expression":{"id":1141,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"939:9:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1115,"id":1142,"nodeType":"Return","src":"932:16:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1147,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"1070:9:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1064:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1145,"name":"bytes","nodeType":"ElementaryTypeName","src":"1064:5:4","typeDescriptions":{}}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1064:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1064:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1090:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1064:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1162,"nodeType":"IfStatement","src":"1060:108:4","trueBody":{"id":1161,"nodeType":"Block","src":"1093:75:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1156,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1139:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1157,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"1145:9:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1154,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1122:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1122:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1122:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1115:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1152,"name":"string","nodeType":"ElementaryTypeName","src":"1115:6:4","typeDescriptions":{}}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1115:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1115,"id":1160,"nodeType":"Return","src":"1108:48:4"}]}},{"expression":{"arguments":[{"id":1165,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"1202:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1163,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1187:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1222_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":616,"src":"1187:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1187:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1115,"id":1167,"nodeType":"Return","src":"1180:30:4"}]},"documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"423:57:4","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1169,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"495:8:4","nodeType":"FunctionDefinition","overrides":{"id":1112,"nodeType":"OverrideSpecifier","overrides":[],"src":"557:8:4"},"parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"tokenId","nameLocation":"522:7:4","nodeType":"VariableDeclaration","scope":1169,"src":"514:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"514:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"503:33:4"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1169,"src":"575:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1113,"name":"string","nodeType":"ElementaryTypeName","src":"575:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"574:15:4"},"scope":1222,"src":"486:732:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1190,"nodeType":"Block","src":"1480:173:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1179,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"1521:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1178,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"1513:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1513:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1544:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":1177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1491:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1491:112:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"ExpressionStatement","src":"1491:112:4"},{"expression":{"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1184,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"1614:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1186,"indexExpression":{"id":1185,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"1625:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1614:19:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1187,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1636:9:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1614:31:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1189,"nodeType":"ExpressionStatement","src":"1614:31:4"}]},"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"1226:142:4","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1191,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1383:12:4","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"tokenId","nameLocation":"1414:7:4","nodeType":"VariableDeclaration","scope":1191,"src":"1406:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"_tokenURI","nameLocation":"1446:9:4","nodeType":"VariableDeclaration","scope":1191,"src":"1432:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1173,"name":"string","nodeType":"ElementaryTypeName","src":"1432:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1395:67:4"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[],"src":"1480:0:4"},"scope":1222,"src":"1374:279:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[953],"body":{"id":1220,"nodeType":"Block","src":"1940:148:4","statements":[{"expression":{"arguments":[{"id":1201,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"1963:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1198,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1951:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1222_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":953,"src":"1951:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1951:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1203,"nodeType":"ExpressionStatement","src":"1951:20:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":1206,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"1994:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1208,"indexExpression":{"id":1207,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"2005:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1994:19:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1988:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1204,"name":"bytes","nodeType":"ElementaryTypeName","src":"1988:5:4","typeDescriptions":{}}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1988:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1988:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2025:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1988:38:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1219,"nodeType":"IfStatement","src":"1984:97:4","trueBody":{"id":1218,"nodeType":"Block","src":"2028:53:4","statements":[{"expression":{"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2043:26:4","subExpression":{"baseExpression":{"id":1213,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"2050:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1215,"indexExpression":{"id":1214,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"2061:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2050:19:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1217,"nodeType":"ExpressionStatement","src":"2043:26:4"}]}}]},"documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"1661:215:4","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1221,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1891:5:4","nodeType":"FunctionDefinition","overrides":{"id":1196,"nodeType":"OverrideSpecifier","overrides":[],"src":"1931:8:4"},"parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"tokenId","nameLocation":"1905:7:4","nodeType":"VariableDeclaration","scope":1221,"src":"1897:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1897:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1896:17:4"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[],"src":"1940:0:4"},"scope":1222,"src":"1882:206:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1223,"src":"243:1848:4","usedErrors":[]}],"src":"33:2060:4"},"id":4},"contracts/dependancies/IERC165.sol":{"ast":{"absolutePath":"contracts/dependancies/IERC165.sol","exportedSymbols":{"IERC165":[1234]},"id":1235,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1224,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"131:287:5","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1234,"linearizedBaseContracts":[1234],"name":"IERC165","nameLocation":"430:7:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"445:347:5","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1233,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"807:17:5","nodeType":"FunctionDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"interfaceId","nameLocation":"832:11:5","nodeType":"VariableDeclaration","scope":1233,"src":"825:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1227,"name":"bytes4","nodeType":"ElementaryTypeName","src":"825:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"824:20:5"},"returnParameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1233,"src":"868:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1230,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"867:6:5"},"scope":1234,"src":"798:76:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1235,"src":"420:457:5","usedErrors":[]}],"src":"33:846:5"},"id":5},"contracts/dependancies/IERC721.sol":{"ast":{"absolutePath":"contracts/dependancies/IERC721.sol","exportedSymbols":{"IERC165":[1234],"IERC721":[1318]},"id":1319,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1236,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:6"},{"absolutePath":"contracts/dependancies/IERC165.sol","file":"./IERC165.sol","id":1237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1319,"sourceUnit":1235,"src":"61:23:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1239,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1234,"src":"258:7:6"},"id":1240,"nodeType":"InheritanceSpecifier","src":"258:7:6"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"166:69:6","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1318,"linearizedBaseContracts":[1318,1234],"name":"IERC721","nameLocation":"247:7:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"273:90:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":1249,"name":"Transfer","nameLocation":"375:8:6","nodeType":"EventDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"410:4:6","nodeType":"VariableDeclaration","scope":1249,"src":"394:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"394:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1245,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:6","nodeType":"VariableDeclaration","scope":1249,"src":"425:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"470:7:6","nodeType":"VariableDeclaration","scope":1249,"src":"454:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"454:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"383:101:6"},"src":"369:116:6"},{"anonymous":false,"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"493:96:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":1258,"name":"Approval","nameLocation":"601:8:6","nodeType":"EventDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"636:5:6","nodeType":"VariableDeclaration","scope":1258,"src":"620:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1254,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"668:8:6","nodeType":"VariableDeclaration","scope":1258,"src":"652:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1256,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"703:7:6","nodeType":"VariableDeclaration","scope":1258,"src":"687:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"609:108:6"},"src":"595:123:6"},{"anonymous":false,"documentation":{"id":1259,"nodeType":"StructuredDocumentation","src":"726:119:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":1267,"name":"ApprovalForAll","nameLocation":"857:14:6","nodeType":"EventDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"898:5:6","nodeType":"VariableDeclaration","scope":1267,"src":"882:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1260,"name":"address","nodeType":"ElementaryTypeName","src":"882:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1263,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"930:8:6","nodeType":"VariableDeclaration","scope":1267,"src":"914:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1262,"name":"address","nodeType":"ElementaryTypeName","src":"914:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1265,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"954:8:6","nodeType":"VariableDeclaration","scope":1267,"src":"949:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1264,"name":"bool","nodeType":"ElementaryTypeName","src":"949:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"871:98:6"},"src":"851:119:6"},{"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"978:78:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1275,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1071:9:6","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"owner","nameLocation":"1089:5:6","nodeType":"VariableDeclaration","scope":1275,"src":"1081:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1080:15:6"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"balance","nameLocation":"1127:7:6","nodeType":"VariableDeclaration","scope":1275,"src":"1119:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"1119:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1118:17:6"},"scope":1318,"src":"1062:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"1144:137:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1296:7:6","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"tokenId","nameLocation":"1312:7:6","nodeType":"VariableDeclaration","scope":1283,"src":"1304:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1303:17:6"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"owner","nameLocation":"1352:5:6","nodeType":"VariableDeclaration","scope":1283,"src":"1344:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"1344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1343:15:6"},"scope":1318,"src":"1287:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"3561:464:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1291,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4040:7:6","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"to","nameLocation":"4056:2:6","nodeType":"VariableDeclaration","scope":1291,"src":"4048:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"4048:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"tokenId","nameLocation":"4068:7:6","nodeType":"VariableDeclaration","scope":1291,"src":"4060:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1287,"name":"uint256","nodeType":"ElementaryTypeName","src":"4060:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4047:29:6"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[],"src":"4085:0:6"},"scope":1318,"src":"4031:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"4094:318:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1299,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4427:17:6","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"operator","nameLocation":"4453:8:6","nodeType":"VariableDeclaration","scope":1299,"src":"4445:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"4445:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"_approved","nameLocation":"4468:9:6","nodeType":"VariableDeclaration","scope":1299,"src":"4463:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1295,"name":"bool","nodeType":"ElementaryTypeName","src":"4463:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:34:6"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[],"src":"4487:0:6"},"scope":1318,"src":"4418:70:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"4496:145:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1307,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4656:11:6","nodeType":"FunctionDefinition","parameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:6","nodeType":"VariableDeclaration","scope":1307,"src":"4678:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4667:33:6"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"operator","nameLocation":"4732:8:6","nodeType":"VariableDeclaration","scope":1307,"src":"4724:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4723:18:6"},"scope":1318,"src":"4647:95:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"4750:142:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1317,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4907:16:6","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"owner","nameLocation":"4942:5:6","nodeType":"VariableDeclaration","scope":1317,"src":"4934:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"4934:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"operator","nameLocation":"4966:8:6","nodeType":"VariableDeclaration","scope":1317,"src":"4958:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"4958:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4923:58:6"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1317,"src":"5005:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1314,"name":"bool","nodeType":"ElementaryTypeName","src":"5005:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5004:6:6"},"scope":1318,"src":"4898:113:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1319,"src":"237:4777:6","usedErrors":[]}],"src":"33:4983:6"},"id":6},"contracts/dependancies/IERC721Metadata.sol":{"ast":{"absolutePath":"contracts/dependancies/IERC721Metadata.sol","exportedSymbols":{"IERC165":[1234],"IERC721":[1318],"IERC721Metadata":[1345]},"id":1346,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1320,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:7"},{"absolutePath":"contracts/dependancies/IERC721.sol","file":"./IERC721.sol","id":1321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1346,"sourceUnit":1319,"src":"61:23:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1323,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1318,"src":"337:7:7"},"id":1324,"nodeType":"InheritanceSpecifier","src":"337:7:7"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"170:136:7","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1345,"linearizedBaseContracts":[1345,1318,1234],"name":"IERC721Metadata","nameLocation":"318:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"352:60:7","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1330,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"427:4:7","nodeType":"FunctionDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[],"src":"431:2:7"},"returnParameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1330,"src":"457:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1327,"name":"string","nodeType":"ElementaryTypeName","src":"457:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"456:15:7"},"scope":1345,"src":"418:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"480:62:7","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1336,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"557:6:7","nodeType":"FunctionDefinition","parameters":{"id":1332,"nodeType":"ParameterList","parameters":[],"src":"563:2:7"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1336,"src":"589:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1333,"name":"string","nodeType":"ElementaryTypeName","src":"589:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"588:15:7"},"scope":1345,"src":"548:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"612:92:7","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1344,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"719:8:7","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"tokenId","nameLocation":"736:7:7","nodeType":"VariableDeclaration","scope":1344,"src":"728:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"727:17:7"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1344,"src":"768:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1341,"name":"string","nodeType":"ElementaryTypeName","src":"768:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"767:15:7"},"scope":1345,"src":"710:73:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1346,"src":"308:478:7","usedErrors":[]}],"src":"33:755:7"},"id":7},"contracts/dependancies/IERC721Receiver.sol":{"ast":{"absolutePath":"contracts/dependancies/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1363]},"id":1364,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1347,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"147:156:8","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1363,"linearizedBaseContracts":[1363],"name":"IERC721Receiver","nameLocation":"315:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"338:501:8","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1362,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"854:16:8","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"operator","nameLocation":"889:8:8","nodeType":"VariableDeclaration","scope":1362,"src":"881:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"881:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"from","nameLocation":"916:4:8","nodeType":"VariableDeclaration","scope":1362,"src":"908:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"908:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"tokenId","nameLocation":"939:7:8","nodeType":"VariableDeclaration","scope":1362,"src":"931:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"data","nameLocation":"972:4:8","nodeType":"VariableDeclaration","scope":1362,"src":"957:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1356,"name":"bytes","nodeType":"ElementaryTypeName","src":"957:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"870:113:8"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1362,"src":"1002:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1359,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1002:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1001:8:8"},"scope":1363,"src":"845:165:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1364,"src":"305:708:8","usedErrors":[]}],"src":"33:982:8"},"id":8},"contracts/dependancies/librairies/Address.sol":{"ast":{"absolutePath":"contracts/dependancies/librairies/Address.sol","exportedSymbols":{"Address":[1658]},"id":1659,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1365,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"132:69:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1658,"linearizedBaseContracts":[1658],"name":"Address","nameLocation":"211:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1380,"nodeType":"Block","src":"1277:260:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1374,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"1506:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1506:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1506:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1528:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1506:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1373,"id":1379,"nodeType":"Return","src":"1499:30:9"}]},"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"226:979:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1220:10:9","nodeType":"FunctionDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"account","nameLocation":"1239:7:9","nodeType":"VariableDeclaration","scope":1381,"src":"1231:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"1231:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1230:17:9"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"1271:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1371,"name":"bool","nodeType":"ElementaryTypeName","src":"1271:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1270:6:9"},"scope":1658,"src":"1211:326:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"2543:320:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1392,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2584:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1658","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1658","typeString":"library Address"}],"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2576:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"2576:7:9","typeDescriptions":{}}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2576:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2576:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1395,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"2601:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2576:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2622:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1389,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2554:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2554:110:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"ExpressionStatement","src":"2554:110:9"},{"assignments":[1401,null],"declarations":[{"constant":false,"id":1401,"mutability":"mutable","name":"success","nameLocation":"2683:7:9","nodeType":"VariableDeclaration","scope":1414,"src":"2678:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1400,"name":"bool","nodeType":"ElementaryTypeName","src":"2678:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1408,"initialValue":{"arguments":[{"hexValue":"","id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2726:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1402,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"2696:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2696:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1404,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"2718:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2696:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2696:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2677:52:9"},{"expression":{"arguments":[{"id":1410,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"2762:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2784:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1409,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2740:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2740:115:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1413,"nodeType":"ExpressionStatement","src":"2740:115:9"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"1545:921:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2481:9:9","nodeType":"FunctionDefinition","parameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"recipient","nameLocation":"2507:9:9","nodeType":"VariableDeclaration","scope":1415,"src":"2491:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"2491:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"amount","nameLocation":"2526:6:9","nodeType":"VariableDeclaration","scope":1415,"src":"2518:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2518:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2490:43:9"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[],"src":"2543:0:9"},"scope":1658,"src":"2472:391:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1431,"nodeType":"Block","src":"3739:86:9","statements":[{"expression":{"arguments":[{"id":1426,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"3770:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1427,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"3778:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3784:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1425,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1432,1452],"referencedDeclaration":1452,"src":"3757:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3757:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1424,"id":1430,"nodeType":"Return","src":"3750:67:9"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"2871:748:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1432,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3634:12:9","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"target","nameLocation":"3665:6:9","nodeType":"VariableDeclaration","scope":1432,"src":"3657:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"3657:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"data","nameLocation":"3695:4:9","nodeType":"VariableDeclaration","scope":1432,"src":"3682:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1419,"name":"bytes","nodeType":"ElementaryTypeName","src":"3682:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3646:60:9"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1432,"src":"3725:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1422,"name":"bytes","nodeType":"ElementaryTypeName","src":"3725:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3724:14:9"},"scope":1658,"src":"3625:200:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1451,"nodeType":"Block","src":"4206:78:9","statements":[{"expression":{"arguments":[{"id":1445,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"4246:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1446,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"4254:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4260:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1448,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"4263:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1444,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1472,1522],"referencedDeclaration":1522,"src":"4224:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4224:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1443,"id":1450,"nodeType":"Return","src":"4217:59:9"}]},"documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"3833:216:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1452,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4064:12:9","nodeType":"FunctionDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"target","nameLocation":"4095:6:9","nodeType":"VariableDeclaration","scope":1452,"src":"4087:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"data","nameLocation":"4125:4:9","nodeType":"VariableDeclaration","scope":1452,"src":"4112:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1436,"name":"bytes","nodeType":"ElementaryTypeName","src":"4112:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"errorMessage","nameLocation":"4154:12:9","nodeType":"VariableDeclaration","scope":1452,"src":"4140:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1438,"name":"string","nodeType":"ElementaryTypeName","src":"4140:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4076:97:9"},"returnParameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"4192:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1441,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4191:14:9"},"scope":1658,"src":"4055:229:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1471,"nodeType":"Block","src":"4806:209:9","statements":[{"expression":{"arguments":[{"id":1465,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"4877:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1466,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4902:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"4925:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4949:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1464,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1472,1522],"referencedDeclaration":1522,"src":"4837:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4837:170:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1463,"id":1470,"nodeType":"Return","src":"4817:190:9"}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"4292:361:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1472,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4668:21:9","nodeType":"FunctionDefinition","parameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"target","nameLocation":"4708:6:9","nodeType":"VariableDeclaration","scope":1472,"src":"4700:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"4700:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1457,"mutability":"mutable","name":"data","nameLocation":"4738:4:9","nodeType":"VariableDeclaration","scope":1472,"src":"4725:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1456,"name":"bytes","nodeType":"ElementaryTypeName","src":"4725:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"value","nameLocation":"4761:5:9","nodeType":"VariableDeclaration","scope":1472,"src":"4753:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1458,"name":"uint256","nodeType":"ElementaryTypeName","src":"4753:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4689:84:9"},"returnParameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1472,"src":"4792:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1461,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:9"},"scope":1658,"src":"4659:356:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1521,"nodeType":"Block","src":"5455:387:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1489,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5496:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1658","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1658","typeString":"library Address"}],"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5488:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"5488:7:9","typeDescriptions":{}}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5488:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5488:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"5513:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5488:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5533:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1486,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5466:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5466:118:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1496,"nodeType":"ExpressionStatement","src":"5466:118:9"},{"expression":{"arguments":[{"arguments":[{"id":1499,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"5614:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1498,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5603:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5603:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5623:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5595:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5595:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1503,"nodeType":"ExpressionStatement","src":"5595:60:9"},{"assignments":[1505,1507],"declarations":[{"constant":false,"id":1505,"mutability":"mutable","name":"success","nameLocation":"5674:7:9","nodeType":"VariableDeclaration","scope":1521,"src":"5669:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1504,"name":"bool","nodeType":"ElementaryTypeName","src":"5669:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"returndata","nameLocation":"5696:10:9","nodeType":"VariableDeclaration","scope":1521,"src":"5683:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1506,"name":"bytes","nodeType":"ElementaryTypeName","src":"5683:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1514,"initialValue":{"arguments":[{"id":1512,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"5750:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1508,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"5710:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5710:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"5729:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5710:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5710:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5668:97:9"},{"expression":{"arguments":[{"id":1516,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"5800:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1517,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"5809:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1518,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"5821:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1515,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"5783:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5783:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1485,"id":1520,"nodeType":"Return","src":"5776:58:9"}]},"documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"5023:242:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1522,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5280:21:9","nodeType":"FunctionDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"target","nameLocation":"5320:6:9","nodeType":"VariableDeclaration","scope":1522,"src":"5312:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"5312:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1477,"mutability":"mutable","name":"data","nameLocation":"5350:4:9","nodeType":"VariableDeclaration","scope":1522,"src":"5337:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1476,"name":"bytes","nodeType":"ElementaryTypeName","src":"5337:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"value","nameLocation":"5373:5:9","nodeType":"VariableDeclaration","scope":1522,"src":"5365:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"5365:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1481,"mutability":"mutable","name":"errorMessage","nameLocation":"5403:12:9","nodeType":"VariableDeclaration","scope":1522,"src":"5389:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1480,"name":"string","nodeType":"ElementaryTypeName","src":"5389:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5301:121:9"},"returnParameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1522,"src":"5441:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1483,"name":"bytes","nodeType":"ElementaryTypeName","src":"5441:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5440:14:9"},"scope":1658,"src":"5271:571:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1538,"nodeType":"Block","src":"6152:178:9","statements":[{"expression":{"arguments":[{"id":1533,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"6220:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1534,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"6245:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6268:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1532,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1539,1574],"referencedDeclaration":1574,"src":"6183:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6183:139:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1531,"id":1537,"nodeType":"Return","src":"6163:159:9"}]},"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"5850:171:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1539,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6036:18:9","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"target","nameLocation":"6073:6:9","nodeType":"VariableDeclaration","scope":1539,"src":"6065:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"6065:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1527,"mutability":"mutable","name":"data","nameLocation":"6103:4:9","nodeType":"VariableDeclaration","scope":1539,"src":"6090:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1526,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6054:60:9"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1539,"src":"6138:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1529,"name":"bytes","nodeType":"ElementaryTypeName","src":"6138:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6137:14:9"},"scope":1658,"src":"6027:303:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1573,"nodeType":"Block","src":"6684:233:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1553,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"6714:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1552,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"6703:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6703:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6723:38:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1551,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6695:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6695:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1557,"nodeType":"ExpressionStatement","src":"6695:67:9"},{"assignments":[1559,1561],"declarations":[{"constant":false,"id":1559,"mutability":"mutable","name":"success","nameLocation":"6781:7:9","nodeType":"VariableDeclaration","scope":1573,"src":"6776:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1558,"name":"bool","nodeType":"ElementaryTypeName","src":"6776:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"returndata","nameLocation":"6803:10:9","nodeType":"VariableDeclaration","scope":1573,"src":"6790:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1560,"name":"bytes","nodeType":"ElementaryTypeName","src":"6790:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1566,"initialValue":{"arguments":[{"id":1564,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"6835:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1562,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"6817:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6817:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6817:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6775:65:9"},{"expression":{"arguments":[{"id":1568,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"6875:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1569,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"6884:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1570,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"6896:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1567,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"6858:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6858:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1550,"id":1572,"nodeType":"Return","src":"6851:58:9"}]},"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"6338:178:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1574,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6531:18:9","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"target","nameLocation":"6568:6:9","nodeType":"VariableDeclaration","scope":1574,"src":"6560:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"6560:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1544,"mutability":"mutable","name":"data","nameLocation":"6598:4:9","nodeType":"VariableDeclaration","scope":1574,"src":"6585:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1543,"name":"bytes","nodeType":"ElementaryTypeName","src":"6585:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"errorMessage","nameLocation":"6627:12:9","nodeType":"VariableDeclaration","scope":1574,"src":"6613:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1545,"name":"string","nodeType":"ElementaryTypeName","src":"6613:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6549:97:9"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"6670:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1548,"name":"bytes","nodeType":"ElementaryTypeName","src":"6670:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6669:14:9"},"scope":1658,"src":"6522:395:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1590,"nodeType":"Block","src":"7226:182:9","statements":[{"expression":{"arguments":[{"id":1585,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"7296:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1586,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"7321:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7344:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1584,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1591,1626],"referencedDeclaration":1626,"src":"7257:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7257:143:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1583,"id":1589,"nodeType":"Return","src":"7237:163:9"}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"6925:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7113:20:9","nodeType":"FunctionDefinition","parameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"target","nameLocation":"7152:6:9","nodeType":"VariableDeclaration","scope":1591,"src":"7144:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"7144:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1579,"mutability":"mutable","name":"data","nameLocation":"7182:4:9","nodeType":"VariableDeclaration","scope":1591,"src":"7169:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1578,"name":"bytes","nodeType":"ElementaryTypeName","src":"7169:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7133:60:9"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"7212:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1581,"name":"bytes","nodeType":"ElementaryTypeName","src":"7212:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7211:14:9"},"scope":1658,"src":"7104:304:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1625,"nodeType":"Block","src":"7761:237:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1605,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"7791:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1604,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"7780:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7780:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7800:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7772:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7772:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1609,"nodeType":"ExpressionStatement","src":"7772:69:9"},{"assignments":[1611,1613],"declarations":[{"constant":false,"id":1611,"mutability":"mutable","name":"success","nameLocation":"7860:7:9","nodeType":"VariableDeclaration","scope":1625,"src":"7855:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1610,"name":"bool","nodeType":"ElementaryTypeName","src":"7855:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"returndata","nameLocation":"7882:10:9","nodeType":"VariableDeclaration","scope":1625,"src":"7869:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1612,"name":"bytes","nodeType":"ElementaryTypeName","src":"7869:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1616,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"7916:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1614,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"7896:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7896:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7896:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7854:67:9"},{"expression":{"arguments":[{"id":1620,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"7956:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1621,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"7965:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1622,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"7977:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1619,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"7939:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7939:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1602,"id":1624,"nodeType":"Return","src":"7932:58:9"}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"7416:180:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1626,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7611:20:9","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"target","nameLocation":"7650:6:9","nodeType":"VariableDeclaration","scope":1626,"src":"7642:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"data","nameLocation":"7680:4:9","nodeType":"VariableDeclaration","scope":1626,"src":"7667:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1595,"name":"bytes","nodeType":"ElementaryTypeName","src":"7667:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"errorMessage","nameLocation":"7709:12:9","nodeType":"VariableDeclaration","scope":1626,"src":"7695:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1597,"name":"string","nodeType":"ElementaryTypeName","src":"7695:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7631:97:9"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1626,"src":"7747:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1600,"name":"bytes","nodeType":"ElementaryTypeName","src":"7747:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7746:14:9"},"scope":1658,"src":"7602:396:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"8390:548:9","statements":[{"condition":{"id":1638,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"8405:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1654,"nodeType":"Block","src":"8464:467:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1642,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"8550:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8550:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8570:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8550:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1652,"nodeType":"Block","src":"8865:55:9","statements":[{"expression":{"arguments":[{"id":1649,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"8891:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1648,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8884:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8884:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1651,"nodeType":"ExpressionStatement","src":"8884:20:9"}]},"id":1653,"nodeType":"IfStatement","src":"8546:374:9","trueBody":{"id":1647,"nodeType":"Block","src":"8573:286:9","statements":[{"AST":{"nodeType":"YulBlock","src":"8696:148:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8719:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8748:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8742:5:9"},"nodeType":"YulFunctionCall","src":"8742:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8723:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8792:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8796:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8788:3:9"},"nodeType":"YulFunctionCall","src":"8788:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8809:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8781:6:9"},"nodeType":"YulFunctionCall","src":"8781:44:9"},"nodeType":"YulExpressionStatement","src":"8781:44:9"}]},"evmVersion":"london","externalReferences":[{"declaration":1631,"isOffset":false,"isSlot":false,"src":"8748:10:9","valueSize":1},{"declaration":1631,"isOffset":false,"isSlot":false,"src":"8796:10:9","valueSize":1}],"id":1646,"nodeType":"InlineAssembly","src":"8687:157:9"}]}}]},"id":1655,"nodeType":"IfStatement","src":"8401:530:9","trueBody":{"id":1641,"nodeType":"Block","src":"8414:44:9","statements":[{"expression":{"id":1639,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"8436:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1637,"id":1640,"nodeType":"Return","src":"8429:17:9"}]}}]},"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"8006:214:9","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8235:16:9","nodeType":"FunctionDefinition","parameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"success","nameLocation":"8267:7:9","nodeType":"VariableDeclaration","scope":1657,"src":"8262:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1628,"name":"bool","nodeType":"ElementaryTypeName","src":"8262:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"returndata","nameLocation":"8298:10:9","nodeType":"VariableDeclaration","scope":1657,"src":"8285:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1630,"name":"bytes","nodeType":"ElementaryTypeName","src":"8285:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1633,"mutability":"mutable","name":"errorMessage","nameLocation":"8333:12:9","nodeType":"VariableDeclaration","scope":1657,"src":"8319:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1632,"name":"string","nodeType":"ElementaryTypeName","src":"8319:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8251:101:9"},"returnParameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1657,"src":"8376:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1635,"name":"bytes","nodeType":"ElementaryTypeName","src":"8376:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8375:14:9"},"scope":1658,"src":"8226:712:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1659,"src":"203:8738:9","usedErrors":[]}],"src":"33:8910:9"},"id":9},"contracts/dependancies/librairies/Base64.sol":{"ast":{"absolutePath":"contracts/dependancies/librairies/Base64.sol","exportedSymbols":{"Base64":[1705]},"id":1706,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1660,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Base64","contractDependencies":[],"contractKind":"library","documentation":{"id":1661,"nodeType":"StructuredDocumentation","src":"131:77:10","text":" @dev Provides a set of functions to operate with Base64 strings."},"fullyImplemented":true,"id":1705,"linearizedBaseContracts":[1705],"name":"Base64","nameLocation":"218:6:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"232:56:10","text":" @dev Base64 Encoding/Decoding Table"},"id":1665,"mutability":"constant","name":"_TABLE","nameLocation":"319:6:10","nodeType":"VariableDeclaration","scope":1705,"src":"294:100:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1663,"name":"string","nodeType":"ElementaryTypeName","src":"294:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"328:66:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"body":{"id":1703,"nodeType":"Block","src":"566:3024:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1673,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"788:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"788:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"803:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"788:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol","id":1679,"nodeType":"IfStatement","src":"784:31:10","trueBody":{"expression":{"hexValue":"","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"813:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1672,"id":1678,"nodeType":"Return","src":"806:9:10"}},{"assignments":[1681],"declarations":[{"constant":false,"id":1681,"mutability":"mutable","name":"table","nameLocation":"882:5:10","nodeType":"VariableDeclaration","scope":1703,"src":"868:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1680,"name":"string","nodeType":"ElementaryTypeName","src":"868:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1683,"initialValue":{"id":1682,"name":"_TABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"890:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"868:28:10"},{"assignments":[1685],"declarations":[{"constant":false,"id":1685,"mutability":"mutable","name":"result","nameLocation":"1321:6:10","nodeType":"VariableDeclaration","scope":1703,"src":"1307:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1684,"name":"string","nodeType":"ElementaryTypeName","src":"1307:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1699,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1341:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1689,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"1347:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1347:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1361:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1347:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1346:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1366:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1346:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1345:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1341:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1330:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1686,"name":"string","nodeType":"ElementaryTypeName","src":"1334:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1307:62:10"},{"AST":{"nodeType":"YulBlock","src":"1435:2122:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1522:29:10","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"1542:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1549:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1538:3:10"},"nodeType":"YulFunctionCall","src":"1538:13:10"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"1526:8:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1624:32:10","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1645:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1653:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1641:3:10"},"nodeType":"YulFunctionCall","src":"1641:15:10"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"1628:9:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1877:1281:10","statements":[{"nodeType":"YulAssignment","src":"1932:26:10","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1947:7:10"},{"kind":"number","nodeType":"YulLiteral","src":"1956:1:10","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1943:3:10"},"nodeType":"YulFunctionCall","src":"1943:15:10"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1932:7:10"}]},{"nodeType":"YulVariableDeclaration","src":"1976:27:10","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1995:7:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1989:5:10"},"nodeType":"YulFunctionCall","src":"1989:14:10"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"1980:5:10","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2597:9:10"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2618:8:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2636:2:10","type":"","value":"18"},{"name":"input","nodeType":"YulIdentifier","src":"2640:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2632:3:10"},"nodeType":"YulFunctionCall","src":"2632:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:10","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2628:3:10"},"nodeType":"YulFunctionCall","src":"2628:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2614:3:10"},"nodeType":"YulFunctionCall","src":"2614:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2608:5:10"},"nodeType":"YulFunctionCall","src":"2608:47:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2589:7:10"},"nodeType":"YulFunctionCall","src":"2589:67:10"},"nodeType":"YulExpressionStatement","src":"2589:67:10"},{"nodeType":"YulAssignment","src":"2674:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2691:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2702:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2687:3:10"},"nodeType":"YulFunctionCall","src":"2687:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2674:9:10"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2743:9:10"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2764:8:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2782:2:10","type":"","value":"12"},{"name":"input","nodeType":"YulIdentifier","src":"2786:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2778:3:10"},"nodeType":"YulFunctionCall","src":"2778:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"2794:4:10","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2774:3:10"},"nodeType":"YulFunctionCall","src":"2774:25:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:10"},"nodeType":"YulFunctionCall","src":"2760:40:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2754:5:10"},"nodeType":"YulFunctionCall","src":"2754:47:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2735:7:10"},"nodeType":"YulFunctionCall","src":"2735:67:10"},"nodeType":"YulExpressionStatement","src":"2735:67:10"},{"nodeType":"YulAssignment","src":"2820:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2837:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2848:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2833:3:10"},"nodeType":"YulFunctionCall","src":"2833:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2820:9:10"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2889:9:10"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2910:8:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2928:1:10","type":"","value":"6"},{"name":"input","nodeType":"YulIdentifier","src":"2931:5:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2924:3:10"},"nodeType":"YulFunctionCall","src":"2924:13:10"},{"kind":"number","nodeType":"YulLiteral","src":"2939:4:10","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2920:3:10"},"nodeType":"YulFunctionCall","src":"2920:24:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2906:3:10"},"nodeType":"YulFunctionCall","src":"2906:39:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2900:5:10"},"nodeType":"YulFunctionCall","src":"2900:46:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2881:7:10"},"nodeType":"YulFunctionCall","src":"2881:66:10"},"nodeType":"YulExpressionStatement","src":"2881:66:10"},{"nodeType":"YulAssignment","src":"2965:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2982:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2993:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2978:3:10"},"nodeType":"YulFunctionCall","src":"2978:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2965:9:10"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3034:9:10"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"3055:8:10"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"3069:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"3076:4:10","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3065:3:10"},"nodeType":"YulFunctionCall","src":"3065:16:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3051:3:10"},"nodeType":"YulFunctionCall","src":"3051:31:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3045:5:10"},"nodeType":"YulFunctionCall","src":"3045:38:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3026:7:10"},"nodeType":"YulFunctionCall","src":"3026:58:10"},"nodeType":"YulExpressionStatement","src":"3026:58:10"},{"nodeType":"YulAssignment","src":"3102:30:10","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3119:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3130:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3115:3:10"},"nodeType":"YulFunctionCall","src":"3115:17:10"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3102:9:10"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1841:7:10"},{"name":"endPtr","nodeType":"YulIdentifier","src":"1850:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1838:2:10"},"nodeType":"YulFunctionCall","src":"1838:19:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1858:18:10","statements":[]},"pre":{"nodeType":"YulBlock","src":"1730:107:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1749:19:10","value":{"name":"data","nodeType":"YulIdentifier","src":"1764:4:10"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"1753:7:10","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1786:36:10","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1804:4:10"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1816:4:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1810:5:10"},"nodeType":"YulFunctionCall","src":"1810:11:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1800:3:10"},"nodeType":"YulFunctionCall","src":"1800:22:10"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"1790:6:10","type":""}]}]},"src":"1726:1432:10"},{"cases":[{"body":{"nodeType":"YulBlock","src":"3343:116:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3374:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3385:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3370:3:10"},"nodeType":"YulFunctionCall","src":"3370:17:10"},{"kind":"number","nodeType":"YulLiteral","src":"3389:4:10","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3362:7:10"},"nodeType":"YulFunctionCall","src":"3362:32:10"},"nodeType":"YulExpressionStatement","src":"3362:32:10"},{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3424:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3435:1:10","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3420:3:10"},"nodeType":"YulFunctionCall","src":"3420:17:10"},{"kind":"number","nodeType":"YulLiteral","src":"3439:4:10","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3412:7:10"},"nodeType":"YulFunctionCall","src":"3412:32:10"},"nodeType":"YulExpressionStatement","src":"3412:32:10"}]},"nodeType":"YulCase","src":"3336:123:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3341:1:10","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3480:66:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"3511:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3522:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3507:3:10"},"nodeType":"YulFunctionCall","src":"3507:17:10"},{"kind":"number","nodeType":"YulLiteral","src":"3526:4:10","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3499:7:10"},"nodeType":"YulFunctionCall","src":"3499:32:10"},"nodeType":"YulExpressionStatement","src":"3499:32:10"}]},"nodeType":"YulCase","src":"3473:73:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3478:1:10","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3313:4:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3307:5:10"},"nodeType":"YulFunctionCall","src":"3307:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"3320:1:10","type":"","value":"3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3303:3:10"},"nodeType":"YulFunctionCall","src":"3303:19:10"},"nodeType":"YulSwitch","src":"3296:250:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1668,"isOffset":false,"isSlot":false,"src":"1764:4:10","valueSize":1},{"declaration":1668,"isOffset":false,"isSlot":false,"src":"1804:4:10","valueSize":1},{"declaration":1668,"isOffset":false,"isSlot":false,"src":"1816:4:10","valueSize":1},{"declaration":1668,"isOffset":false,"isSlot":false,"src":"3313:4:10","valueSize":1},{"declaration":1685,"isOffset":false,"isSlot":false,"src":"1645:6:10","valueSize":1},{"declaration":1681,"isOffset":false,"isSlot":false,"src":"1542:5:10","valueSize":1}],"id":1700,"nodeType":"InlineAssembly","src":"1426:2131:10"},{"expression":{"id":1701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"3576:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1672,"id":1702,"nodeType":"Return","src":"3569:13:10"}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"403:84:10","text":" @dev Converts a `bytes` to its Bytes64 `string` representation."},"id":1704,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"502:6:10","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"data","nameLocation":"522:4:10","nodeType":"VariableDeclaration","scope":1704,"src":"509:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1667,"name":"bytes","nodeType":"ElementaryTypeName","src":"509:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"508:19:10"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1704,"src":"551:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1670,"name":"string","nodeType":"ElementaryTypeName","src":"551:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"550:15:10"},"scope":1705,"src":"493:3097:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1706,"src":"210:3383:10","usedErrors":[]}],"src":"33:3560:10"},"id":10},"contracts/dependancies/librairies/Counters.sol":{"ast":{"absolutePath":"contracts/dependancies/librairies/Counters.sol","exportedSymbols":{"Counters":[1779]},"id":1780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1707,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"118:318:11","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":1779,"linearizedBaseContracts":[1779],"name":"Counters","nameLocation":"446:8:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":1711,"members":[{"constant":false,"id":1710,"mutability":"mutable","name":"_value","nameLocation":"813:6:11","nodeType":"VariableDeclaration","scope":1711,"src":"805:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"469:7:11","nodeType":"StructDefinition","scope":1779,"src":"462:379:11","visibility":"public"},{"body":{"id":1722,"nodeType":"Block","src":"923:40:11","statements":[{"expression":{"expression":{"id":1719,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"941:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1710,"src":"941:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1718,"id":1721,"nodeType":"Return","src":"934:21:11"}]},"id":1723,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"858:7:11","nodeType":"FunctionDefinition","parameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"counter","nameLocation":"882:7:11","nodeType":"VariableDeclaration","scope":1723,"src":"866:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1713,"nodeType":"UserDefinedTypeName","pathNode":{"id":1712,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"866:7:11"},"referencedDeclaration":1711,"src":"866:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"865:25:11"},"returnParameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1723,"src":"914:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"913:9:11"},"scope":1779,"src":"849:114:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1736,"nodeType":"Block","src":"1024:74:11","statements":[{"id":1735,"nodeType":"UncheckedBlock","src":"1035:56:11","statements":[{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1729,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"1060:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1710,"src":"1060:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1078:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1060:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1734,"nodeType":"ExpressionStatement","src":"1060:19:11"}]}]},"id":1737,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"980:9:11","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"counter","nameLocation":"1006:7:11","nodeType":"VariableDeclaration","scope":1737,"src":"990:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1725,"nodeType":"UserDefinedTypeName","pathNode":{"id":1724,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"990:7:11"},"referencedDeclaration":1711,"src":"990:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"989:25:11"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[],"src":"1024:0:11"},"scope":1779,"src":"971:127:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1764,"nodeType":"Block","src":"1159:182:11","statements":[{"assignments":[1744],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"value","nameLocation":"1178:5:11","nodeType":"VariableDeclaration","scope":1764,"src":"1170:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1170:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1747,"initialValue":{"expression":{"id":1745,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"1186:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1710,"src":"1186:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1170:30:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1219:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1227:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1219:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1230:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1211:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1211:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1754,"nodeType":"ExpressionStatement","src":"1211:49:11"},{"id":1763,"nodeType":"UncheckedBlock","src":"1271:63:11","statements":[{"expression":{"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1755,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"1296:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1710,"src":"1296:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1313:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1313:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1296:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1762,"nodeType":"ExpressionStatement","src":"1296:26:11"}]}]},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1115:9:11","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"counter","nameLocation":"1141:7:11","nodeType":"VariableDeclaration","scope":1765,"src":"1125:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1739,"nodeType":"UserDefinedTypeName","pathNode":{"id":1738,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"1125:7:11"},"referencedDeclaration":1711,"src":"1125:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1124:25:11"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"1159:0:11"},"scope":1779,"src":"1106:235:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1777,"nodeType":"Block","src":"1398:37:11","statements":[{"expression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1771,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"1409:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1710,"src":"1409:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1426:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1409:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1776,"nodeType":"ExpressionStatement","src":"1409:18:11"}]},"id":1778,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1358:5:11","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"counter","nameLocation":"1380:7:11","nodeType":"VariableDeclaration","scope":1778,"src":"1364:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1767,"nodeType":"UserDefinedTypeName","pathNode":{"id":1766,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1711,"src":"1364:7:11"},"referencedDeclaration":1711,"src":"1364:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1711_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1363:25:11"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"1398:0:11"},"scope":1779,"src":"1349:86:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1780,"src":"438:1000:11","usedErrors":[]}],"src":"33:1407:11"},"id":11},"contracts/dependancies/librairies/Strings.sol":{"ast":{"absolutePath":"contracts/dependancies/librairies/Strings.sol","exportedSymbols":{"Strings":[1982]},"id":1983,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1781,"literals":["solidity","^","0.8",".10"],"nodeType":"PragmaDirective","src":"33:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"117:36:12","text":" @dev String operations."},"fullyImplemented":true,"id":1982,"linearizedBaseContracts":[1982],"name":"Strings","nameLocation":"163:7:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1785,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"203:12:12","nodeType":"VariableDeclaration","scope":1982,"src":"178:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1783,"name":"bytes16","nodeType":"ElementaryTypeName","src":"178:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"218:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"body":{"id":1863,"nodeType":"Block","src":"414:652:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"620:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"629:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"620:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1799,"nodeType":"IfStatement","src":"616:53:12","trueBody":{"id":1798,"nodeType":"Block","src":"632:37:12","statements":[{"expression":{"hexValue":"30","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"654:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":1792,"id":1797,"nodeType":"Return","src":"647:10:12"}]}},{"assignments":[1801],"declarations":[{"constant":false,"id":1801,"mutability":"mutable","name":"temp","nameLocation":"687:4:12","nodeType":"VariableDeclaration","scope":1863,"src":"679:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"679:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1803,"initialValue":{"id":1802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"694:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"679:20:12"},{"assignments":[1805],"declarations":[{"constant":false,"id":1805,"mutability":"mutable","name":"digits","nameLocation":"718:6:12","nodeType":"VariableDeclaration","scope":1863,"src":"710:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"710:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1806,"nodeType":"VariableDeclarationStatement","src":"710:14:12"},{"body":{"id":1817,"nodeType":"Block","src":"753:60:12","statements":[{"expression":{"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"768:8:12","subExpression":{"id":1810,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"768:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1812,"nodeType":"ExpressionStatement","src":"768:8:12"},{"expression":{"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1813,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"791:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"799:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"791:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1816,"nodeType":"ExpressionStatement","src":"791:10:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"742:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"750:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"742:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1818,"nodeType":"WhileStatement","src":"735:78:12"},{"assignments":[1820],"declarations":[{"constant":false,"id":1820,"mutability":"mutable","name":"buffer","nameLocation":"836:6:12","nodeType":"VariableDeclaration","scope":1863,"src":"823:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1819,"name":"bytes","nodeType":"ElementaryTypeName","src":"823:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1825,"initialValue":{"arguments":[{"id":1823,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"855:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"845:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1821,"name":"bytes","nodeType":"ElementaryTypeName","src":"849:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"845:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"823:39:12"},{"body":{"id":1856,"nodeType":"Block","src":"892:135:12","statements":[{"expression":{"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1829,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"907:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"917:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"907:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1832,"nodeType":"ExpressionStatement","src":"907:11:12"},{"expression":{"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1833,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"933:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1835,"indexExpression":{"id":1834,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"940:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"933:14:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"963:2:12","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"976:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"984:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"976:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"968:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"968:7:12","typeDescriptions":{}}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"968:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"963:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"957:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1838,"name":"uint8","nodeType":"ElementaryTypeName","src":"957:5:12","typeDescriptions":{}}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"957:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"950:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1836,"name":"bytes1","nodeType":"ElementaryTypeName","src":"950:6:12","typeDescriptions":{}}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"950:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"933:56:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1851,"nodeType":"ExpressionStatement","src":"933:56:12"},{"expression":{"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"1004:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1013:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1004:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1855,"nodeType":"ExpressionStatement","src":"1004:11:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"880:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"889:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"880:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1857,"nodeType":"WhileStatement","src":"873:154:12"},{"expression":{"arguments":[{"id":1860,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"1051:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1044:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1858,"name":"string","nodeType":"ElementaryTypeName","src":"1044:6:12","typeDescriptions":{}}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1044:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1792,"id":1862,"nodeType":"Return","src":"1037:21:12"}]},"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"245:92:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1864,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"352:8:12","nodeType":"FunctionDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"value","nameLocation":"369:5:12","nodeType":"VariableDeclaration","scope":1864,"src":"361:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"361:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:15:12"},"returnParameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1864,"src":"399:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1790,"name":"string","nodeType":"ElementaryTypeName","src":"399:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"398:15:12"},"scope":1982,"src":"343:723:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1904,"nodeType":"Block","src":"1250:266:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"1265:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1274:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1265:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1878,"nodeType":"IfStatement","src":"1261:56:12","trueBody":{"id":1877,"nodeType":"Block","src":"1277:40:12","statements":[{"expression":{"hexValue":"30783030","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1299:6:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":1871,"id":1876,"nodeType":"Return","src":"1292:13:12"}]}},{"assignments":[1880],"declarations":[{"constant":false,"id":1880,"mutability":"mutable","name":"temp","nameLocation":"1335:4:12","nodeType":"VariableDeclaration","scope":1904,"src":"1327:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"1327:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1882,"initialValue":{"id":1881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"1342:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1327:20:12"},{"assignments":[1884],"declarations":[{"constant":false,"id":1884,"mutability":"mutable","name":"length","nameLocation":"1366:6:12","nodeType":"VariableDeclaration","scope":1904,"src":"1358:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1358:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1886,"initialValue":{"hexValue":"30","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1375:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1358:18:12"},{"body":{"id":1897,"nodeType":"Block","src":"1405:60:12","statements":[{"expression":{"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1420:8:12","subExpression":{"id":1890,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"1420:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1892,"nodeType":"ExpressionStatement","src":"1420:8:12"},{"expression":{"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1893,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"1443:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1452:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1443:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1896,"nodeType":"ExpressionStatement","src":"1443:10:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1887,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"1394:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1402:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1394:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1898,"nodeType":"WhileStatement","src":"1387:78:12"},{"expression":{"arguments":[{"id":1900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"1494:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1901,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"1501:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1899,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1905,1981],"referencedDeclaration":1981,"src":"1482:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1482:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1871,"id":1903,"nodeType":"Return","src":"1475:33:12"}]},"documentation":{"id":1865,"nodeType":"StructuredDocumentation","src":"1074:96:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1905,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1185:11:12","nodeType":"FunctionDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"value","nameLocation":"1205:5:12","nodeType":"VariableDeclaration","scope":1905,"src":"1197:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1197:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1196:15:12"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1905,"src":"1235:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1869,"name":"string","nodeType":"ElementaryTypeName","src":"1235:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1234:15:12"},"scope":1982,"src":"1176:340:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1980,"nodeType":"Block","src":"1759:361:12","statements":[{"assignments":[1916],"declarations":[{"constant":false,"id":1916,"mutability":"mutable","name":"buffer","nameLocation":"1783:6:12","nodeType":"VariableDeclaration","scope":1980,"src":"1770:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1915,"name":"bytes","nodeType":"ElementaryTypeName","src":"1770:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1925,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1802:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1920,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"1806:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1802:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1815:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1802:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1792:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1917,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1792:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1770:47:12"},{"expression":{"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1926,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"1828:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1928,"indexExpression":{"hexValue":"30","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1828:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1840:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1828:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1931,"nodeType":"ExpressionStatement","src":"1828:15:12"},{"expression":{"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1932,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"1854:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1934,"indexExpression":{"hexValue":"31","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1861:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1854:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1866:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1854:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1937,"nodeType":"ExpressionStatement","src":"1854:15:12"},{"body":{"id":1966,"nodeType":"Block","src":"1925:90:12","statements":[{"expression":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1952,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"1940:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1954,"indexExpression":{"id":1953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"1947:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1940:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1955,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"1952:12:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1959,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"1965:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1973:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1965:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1952:25:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1940:37:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1961,"nodeType":"ExpressionStatement","src":"1940:37:12"},{"expression":{"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"1992:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2002:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1992:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1965,"nodeType":"ExpressionStatement","src":"1992:11:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"1913:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1917:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1913:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1967,"initializationExpression":{"assignments":[1939],"declarations":[{"constant":false,"id":1939,"mutability":"mutable","name":"i","nameLocation":"1893:1:12","nodeType":"VariableDeclaration","scope":1967,"src":"1885:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"1885:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1945,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1897:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1941,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"1901:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1897:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1910:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1897:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1885:26:12"},"loopExpression":{"expression":{"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1920:3:12","subExpression":{"id":1949,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"1922:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1951,"nodeType":"ExpressionStatement","src":"1920:3:12"},"nodeType":"ForStatement","src":"1880:135:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"2033:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2033:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2045:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1968,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2025:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2025:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1974,"nodeType":"ExpressionStatement","src":"2025:55:12"},{"expression":{"arguments":[{"id":1977,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"2105:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2098:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1975,"name":"string","nodeType":"ElementaryTypeName","src":"2098:6:12","typeDescriptions":{}}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2098:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1914,"id":1979,"nodeType":"Return","src":"2091:21:12"}]},"documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"1524:114:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1653:11:12","nodeType":"FunctionDefinition","parameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"value","nameLocation":"1683:5:12","nodeType":"VariableDeclaration","scope":1981,"src":"1675:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"1675:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1910,"mutability":"mutable","name":"length","nameLocation":"1707:6:12","nodeType":"VariableDeclaration","scope":1981,"src":"1699:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"1699:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1664:56:12"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1981,"src":"1744:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1912,"name":"string","nodeType":"ElementaryTypeName","src":"1744:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1743:15:12"},"scope":1982,"src":"1644:476:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1983,"src":"155:1968:12","usedErrors":[]}],"src":"33:2092:12"},"id":12}},"contracts":{"contracts/UniversityDegree.sol":{"UniversityDegree":{"abi":[{"inputs":[{"internalType":"uint256","name":"degreeMaxScore","type":"uint256"},{"internalType":"string","name":"degreeImage","type":"string"},{"internalType":"string","name":"degreeMajor","type":"string"},{"internalType":"string","name":"degreeType","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"UniversityDegree__NotOwner","type":"error"},{"inputs":[],"name":"UniversityDegree__ScoreTooHigh","type":"error"},{"inputs":[],"name":"UniversityDegree__YourDegreeNotIssued","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"student","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"degreeClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"student","type":"address"}],"name":"degreeIssued","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"student","type":"address"}],"name":"checkDegreeOfStudent","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"student","type":"address"}],"name":"checkScoreOfStudent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimDegree","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDegreeImage","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDegreeMajor","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDegreeMaxScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDegreeType","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"components":[{"internalType":"uint256","name":"_value","type":"uint256"}],"internalType":"struct Counters.Counter","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"student","type":"address"}],"name":"isStudentDegreeIssued","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"student","type":"address"},{"internalType":"uint256","name":"score","type":"uint256"}],"name":"issueDegree","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"author":"Ghaieth BEN MOUSSA","details":"This contract is used to award degrees to students who graduated in two steps: 1. Only the owner of the contract can issue degrees with the function `issueDegree(address to, uint256 score)` 2. Then, the student can claim the degree with the function `claimDegree()` This type of token is called a Soul Bound Token because once the token  has been claimed by the student, it can not be transfered to anyone else.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."}},"title":"UniversityDegree","version":1},"evm":{"bytecode":{"functionDebugData":{"@_105":{"entryPoint":null,"id":105,"parameterSlots":4,"returnSlots":0},"@_471":{"entryPoint":null,"id":471,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":881,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":956,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":591,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":1007,"id":null,"parameterSlots":2,"returnSlots":4},"allocate_memory":{"entryPoint":742,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":535,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":773,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":555,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":827,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1261,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":688,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":1214,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":641,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":614,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":619,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":550,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":545,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":624,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_uint256":{"entryPoint":565,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4939:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"379:32:13","statements":[{"nodeType":"YulAssignment","src":"389:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:13","type":""}],"src":"334:77:13"},{"body":{"nodeType":"YulBlock","src":"460:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:13"},"nodeType":"YulFunctionCall","src":"519:12:13"},"nodeType":"YulExpressionStatement","src":"519:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:13"},"nodeType":"YulFunctionCall","src":"490:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:13"},"nodeType":"YulFunctionCall","src":"480:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:13"},"nodeType":"YulFunctionCall","src":"473:43:13"},"nodeType":"YulIf","src":"470:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:13","type":""}],"src":"417:122:13"},{"body":{"nodeType":"YulBlock","src":"608:80:13","statements":[{"nodeType":"YulAssignment","src":"618:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:13"},"nodeType":"YulFunctionCall","src":"627:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:13"},"nodeType":"YulFunctionCall","src":"649:33:13"},"nodeType":"YulExpressionStatement","src":"649:33:13"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:13","type":""}],"src":"545:143:13"},{"body":{"nodeType":"YulBlock","src":"783:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"800:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"803:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"793:6:13"},"nodeType":"YulFunctionCall","src":"793:12:13"},"nodeType":"YulExpressionStatement","src":"793:12:13"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"694:117:13"},{"body":{"nodeType":"YulBlock","src":"906:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"923:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"926:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"916:6:13"},"nodeType":"YulFunctionCall","src":"916:12:13"},"nodeType":"YulExpressionStatement","src":"916:12:13"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"817:117:13"},{"body":{"nodeType":"YulBlock","src":"988:54:13","statements":[{"nodeType":"YulAssignment","src":"998:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1016:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1023:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1012:3:13"},"nodeType":"YulFunctionCall","src":"1012:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1032:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1028:3:13"},"nodeType":"YulFunctionCall","src":"1028:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1008:3:13"},"nodeType":"YulFunctionCall","src":"1008:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"998:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"971:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"981:6:13","type":""}],"src":"940:102:13"},{"body":{"nodeType":"YulBlock","src":"1076:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1093:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1096:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1086:6:13"},"nodeType":"YulFunctionCall","src":"1086:88:13"},"nodeType":"YulExpressionStatement","src":"1086:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1190:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1193:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1183:6:13"},"nodeType":"YulFunctionCall","src":"1183:15:13"},"nodeType":"YulExpressionStatement","src":"1183:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1214:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1217:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1207:6:13"},"nodeType":"YulFunctionCall","src":"1207:15:13"},"nodeType":"YulExpressionStatement","src":"1207:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1048:180:13"},{"body":{"nodeType":"YulBlock","src":"1277:238:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1287:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1309:6:13"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1339:4:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1317:21:13"},"nodeType":"YulFunctionCall","src":"1317:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1305:3:13"},"nodeType":"YulFunctionCall","src":"1305:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1291:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1456:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1458:16:13"},"nodeType":"YulFunctionCall","src":"1458:18:13"},"nodeType":"YulExpressionStatement","src":"1458:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1399:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1411:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1396:2:13"},"nodeType":"YulFunctionCall","src":"1396:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1435:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1432:2:13"},"nodeType":"YulFunctionCall","src":"1432:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1393:2:13"},"nodeType":"YulFunctionCall","src":"1393:62:13"},"nodeType":"YulIf","src":"1390:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1494:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1498:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1487:6:13"},"nodeType":"YulFunctionCall","src":"1487:22:13"},"nodeType":"YulExpressionStatement","src":"1487:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1263:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"1271:4:13","type":""}],"src":"1234:281:13"},{"body":{"nodeType":"YulBlock","src":"1562:88:13","statements":[{"nodeType":"YulAssignment","src":"1572:30:13","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1582:18:13"},"nodeType":"YulFunctionCall","src":"1582:20:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1572:6:13"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1631:6:13"},{"name":"size","nodeType":"YulIdentifier","src":"1639:4:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1611:19:13"},"nodeType":"YulFunctionCall","src":"1611:33:13"},"nodeType":"YulExpressionStatement","src":"1611:33:13"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1546:4:13","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1555:6:13","type":""}],"src":"1521:129:13"},{"body":{"nodeType":"YulBlock","src":"1723:241:13","statements":[{"body":{"nodeType":"YulBlock","src":"1828:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1830:16:13"},"nodeType":"YulFunctionCall","src":"1830:18:13"},"nodeType":"YulExpressionStatement","src":"1830:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1808:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1797:2:13"},"nodeType":"YulFunctionCall","src":"1797:30:13"},"nodeType":"YulIf","src":"1794:56:13"},{"nodeType":"YulAssignment","src":"1860:37:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1890:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1868:21:13"},"nodeType":"YulFunctionCall","src":"1868:29:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1860:4:13"}]},{"nodeType":"YulAssignment","src":"1934:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1946:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"1952:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1942:3:13"},"nodeType":"YulFunctionCall","src":"1942:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1934:4:13"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1707:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1718:4:13","type":""}],"src":"1656:308:13"},{"body":{"nodeType":"YulBlock","src":"2019:258:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2029:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2038:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2033:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2098:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2123:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"2128:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2119:3:13"},"nodeType":"YulFunctionCall","src":"2119:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2142:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"2147:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2138:3:13"},"nodeType":"YulFunctionCall","src":"2138:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2132:5:13"},"nodeType":"YulFunctionCall","src":"2132:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:13"},"nodeType":"YulFunctionCall","src":"2112:39:13"},"nodeType":"YulExpressionStatement","src":"2112:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2059:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"2062:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2056:2:13"},"nodeType":"YulFunctionCall","src":"2056:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2070:19:13","statements":[{"nodeType":"YulAssignment","src":"2072:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2081:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"2084:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2077:3:13"},"nodeType":"YulFunctionCall","src":"2077:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2072:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"2052:3:13","statements":[]},"src":"2048:113:13"},{"body":{"nodeType":"YulBlock","src":"2195:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2245:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2250:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2241:3:13"},"nodeType":"YulFunctionCall","src":"2241:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"2259:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2234:6:13"},"nodeType":"YulFunctionCall","src":"2234:27:13"},"nodeType":"YulExpressionStatement","src":"2234:27:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2176:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"2179:6:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2173:2:13"},"nodeType":"YulFunctionCall","src":"2173:13:13"},"nodeType":"YulIf","src":"2170:101:13"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2001:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2006:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"2011:6:13","type":""}],"src":"1970:307:13"},{"body":{"nodeType":"YulBlock","src":"2378:326:13","statements":[{"nodeType":"YulAssignment","src":"2388:75:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2455:6:13"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2413:41:13"},"nodeType":"YulFunctionCall","src":"2413:49:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2397:15:13"},"nodeType":"YulFunctionCall","src":"2397:66:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2388:5:13"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2479:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"2486:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2472:6:13"},"nodeType":"YulFunctionCall","src":"2472:21:13"},"nodeType":"YulExpressionStatement","src":"2472:21:13"},{"nodeType":"YulVariableDeclaration","src":"2502:27:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2517:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2524:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2513:3:13"},"nodeType":"YulFunctionCall","src":"2513:16:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2506:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2567:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2569:77:13"},"nodeType":"YulFunctionCall","src":"2569:79:13"},"nodeType":"YulExpressionStatement","src":"2569:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2548:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2553:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2544:3:13"},"nodeType":"YulFunctionCall","src":"2544:16:13"},{"name":"end","nodeType":"YulIdentifier","src":"2562:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2541:2:13"},"nodeType":"YulFunctionCall","src":"2541:25:13"},"nodeType":"YulIf","src":"2538:112:13"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2681:3:13"},{"name":"dst","nodeType":"YulIdentifier","src":"2686:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2691:6:13"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2659:21:13"},"nodeType":"YulFunctionCall","src":"2659:39:13"},"nodeType":"YulExpressionStatement","src":"2659:39:13"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2351:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"2356:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2364:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2372:5:13","type":""}],"src":"2283:421:13"},{"body":{"nodeType":"YulBlock","src":"2797:282:13","statements":[{"body":{"nodeType":"YulBlock","src":"2846:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2848:77:13"},"nodeType":"YulFunctionCall","src":"2848:79:13"},"nodeType":"YulExpressionStatement","src":"2848:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2825:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2833:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2821:3:13"},"nodeType":"YulFunctionCall","src":"2821:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"2840:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2817:3:13"},"nodeType":"YulFunctionCall","src":"2817:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2810:6:13"},"nodeType":"YulFunctionCall","src":"2810:35:13"},"nodeType":"YulIf","src":"2807:122:13"},{"nodeType":"YulVariableDeclaration","src":"2938:27:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2958:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2952:5:13"},"nodeType":"YulFunctionCall","src":"2952:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2942:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2974:99:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3046:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3054:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3042:3:13"},"nodeType":"YulFunctionCall","src":"3042:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"3061:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"3069:3:13"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2983:58:13"},"nodeType":"YulFunctionCall","src":"2983:90:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2974:5:13"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2775:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2783:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2791:5:13","type":""}],"src":"2724:355:13"},{"body":{"nodeType":"YulBlock","src":"3243:1181:13","statements":[{"body":{"nodeType":"YulBlock","src":"3290:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3292:77:13"},"nodeType":"YulFunctionCall","src":"3292:79:13"},"nodeType":"YulExpressionStatement","src":"3292:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3264:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"3273:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3260:3:13"},"nodeType":"YulFunctionCall","src":"3260:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"3285:3:13","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3256:3:13"},"nodeType":"YulFunctionCall","src":"3256:33:13"},"nodeType":"YulIf","src":"3253:120:13"},{"nodeType":"YulBlock","src":"3383:128:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3398:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3412:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3402:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3427:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3473:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3484:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3469:3:13"},"nodeType":"YulFunctionCall","src":"3469:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3493:7:13"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"3437:31:13"},"nodeType":"YulFunctionCall","src":"3437:64:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3427:6:13"}]}]},{"nodeType":"YulBlock","src":"3521:292:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3536:39:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3560:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3571:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3556:3:13"},"nodeType":"YulFunctionCall","src":"3556:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3550:5:13"},"nodeType":"YulFunctionCall","src":"3550:25:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3540:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3622:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3624:77:13"},"nodeType":"YulFunctionCall","src":"3624:79:13"},"nodeType":"YulExpressionStatement","src":"3624:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3594:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3602:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3591:2:13"},"nodeType":"YulFunctionCall","src":"3591:30:13"},"nodeType":"YulIf","src":"3588:117:13"},{"nodeType":"YulAssignment","src":"3719:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3775:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3786:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3771:3:13"},"nodeType":"YulFunctionCall","src":"3771:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3795:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3729:41:13"},"nodeType":"YulFunctionCall","src":"3729:74:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3719:6:13"}]}]},{"nodeType":"YulBlock","src":"3823:292:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3838:39:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3862:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3873:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3858:3:13"},"nodeType":"YulFunctionCall","src":"3858:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3852:5:13"},"nodeType":"YulFunctionCall","src":"3852:25:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3842:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3924:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3926:77:13"},"nodeType":"YulFunctionCall","src":"3926:79:13"},"nodeType":"YulExpressionStatement","src":"3926:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3896:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3904:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3893:2:13"},"nodeType":"YulFunctionCall","src":"3893:30:13"},"nodeType":"YulIf","src":"3890:117:13"},{"nodeType":"YulAssignment","src":"4021:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4088:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:13"},"nodeType":"YulFunctionCall","src":"4073:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4097:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4031:41:13"},"nodeType":"YulFunctionCall","src":"4031:74:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4021:6:13"}]}]},{"nodeType":"YulBlock","src":"4125:292:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4140:39:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4175:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:13"},"nodeType":"YulFunctionCall","src":"4160:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4154:5:13"},"nodeType":"YulFunctionCall","src":"4154:25:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4144:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4226:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4228:77:13"},"nodeType":"YulFunctionCall","src":"4228:79:13"},"nodeType":"YulExpressionStatement","src":"4228:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4198:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4206:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4195:2:13"},"nodeType":"YulFunctionCall","src":"4195:30:13"},"nodeType":"YulIf","src":"4192:117:13"},{"nodeType":"YulAssignment","src":"4323:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4379:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4390:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4375:3:13"},"nodeType":"YulFunctionCall","src":"4375:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4399:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4333:41:13"},"nodeType":"YulFunctionCall","src":"4333:74:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4323:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3189:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3200:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3212:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3220:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3228:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3236:6:13","type":""}],"src":"3085:1339:13"},{"body":{"nodeType":"YulBlock","src":"4458:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4475:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4478:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4468:6:13"},"nodeType":"YulFunctionCall","src":"4468:88:13"},"nodeType":"YulExpressionStatement","src":"4468:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4572:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4575:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4565:6:13"},"nodeType":"YulFunctionCall","src":"4565:15:13"},"nodeType":"YulExpressionStatement","src":"4565:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4596:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4599:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4589:6:13"},"nodeType":"YulFunctionCall","src":"4589:15:13"},"nodeType":"YulExpressionStatement","src":"4589:15:13"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4430:180:13"},{"body":{"nodeType":"YulBlock","src":"4667:269:13","statements":[{"nodeType":"YulAssignment","src":"4677:22:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4691:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"4697:1:13","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4687:3:13"},"nodeType":"YulFunctionCall","src":"4687:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4677:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4708:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4738:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"4744:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4734:3:13"},"nodeType":"YulFunctionCall","src":"4734:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4712:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4785:51:13","statements":[{"nodeType":"YulAssignment","src":"4799:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4813:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4821:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4809:3:13"},"nodeType":"YulFunctionCall","src":"4809:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4799:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4765:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4758:6:13"},"nodeType":"YulFunctionCall","src":"4758:26:13"},"nodeType":"YulIf","src":"4755:81:13"},{"body":{"nodeType":"YulBlock","src":"4888:42:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4902:16:13"},"nodeType":"YulFunctionCall","src":"4902:18:13"},"nodeType":"YulExpressionStatement","src":"4902:18:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4852:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4875:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4883:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4872:2:13"},"nodeType":"YulFunctionCall","src":"4872:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4849:2:13"},"nodeType":"YulFunctionCall","src":"4849:38:13"},"nodeType":"YulIf","src":"4846:84:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4651:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4660:6:13","type":""}],"src":"4616:320:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b50604051620037b9380380620037b98339818101604052810190620000379190620003ef565b6040518060400160405280601e81526020017f556e6976657273697479446567726565536f756c426f756e64546f6b656e00008152506040518060400160405280600581526020017f55445342540000000000000000000000000000000000000000000000000000008152508160009080519060200190620000bb92919062000167565b508060019080519060200190620000d492919062000167565b5050503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508360088190555082600990805190602001906200012a92919062000167565b5081600a90805190602001906200014392919062000167565b5080600b90805190602001906200015c92919062000167565b505050505062000523565b8280546200017590620004ed565b90600052602060002090601f016020900481019282620001995760008555620001e5565b82601f10620001b457805160ff1916838001178555620001e5565b82800160010185558215620001e5579182015b82811115620001e4578251825591602001919060010190620001c7565b5b509050620001f49190620001f8565b5090565b5b8082111562000213576000816000905550600101620001f9565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b62000240816200022b565b81146200024c57600080fd5b50565b600081519050620002608162000235565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002bb8262000270565b810181811067ffffffffffffffff82111715620002dd57620002dc62000281565b5b80604052505050565b6000620002f262000217565b9050620003008282620002b0565b919050565b600067ffffffffffffffff82111562000323576200032262000281565b5b6200032e8262000270565b9050602081019050919050565b60005b838110156200035b5780820151818401526020810190506200033e565b838111156200036b576000848401525b50505050565b600062000388620003828462000305565b620002e6565b905082815260208101848484011115620003a757620003a66200026b565b5b620003b48482856200033b565b509392505050565b600082601f830112620003d457620003d362000266565b5b8151620003e684826020860162000371565b91505092915050565b600080600080608085870312156200040c576200040b62000221565b5b60006200041c878288016200024f565b945050602085015167ffffffffffffffff81111562000440576200043f62000226565b5b6200044e87828801620003bc565b935050604085015167ffffffffffffffff81111562000472576200047162000226565b5b6200048087828801620003bc565b925050606085015167ffffffffffffffff811115620004a457620004a362000226565b5b620004b287828801620003bc565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200050657607f821691505b602082108114156200051d576200051c620004be565b5b50919050565b6080516132736200054660003960008181610c88015261102401526132736000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063723f5352116100b8578063c0888f871161007c578063c0888f8714610378578063c87b56dd14610396578063e985e9c5146103c6578063ee442ca7146103f6578063f2dbea3414610412578063fef87a3b1461043057610137565b8063723f5352146102d2578063893d20e8146102f057806395d89b411461030e578063a22cb4651461032c578063a42f34ce1461034857610137565b8063246bb8e6116100ff578063246bb8e6146101f45780633548d7a3146102245780636352211e146102545780636e02007d1461028457806370a08231146102a257610137565b806301ffc9a71461013c57806306fdde031461016c578063081812fc1461018a578063095ea7b3146101ba57806319097126146101d6575b600080fd5b61015660048036038101906101519190611ced565b61044e565b6040516101639190611d35565b60405180910390f35b610174610530565b6040516101819190611de9565b60405180910390f35b6101a4600480360381019061019f9190611e41565b6105c2565b6040516101b19190611eaf565b60405180910390f35b6101d460048036038101906101cf9190611ef6565b610647565b005b6101de61075f565b6040516101eb9190611de9565b60405180910390f35b61020e60048036038101906102099190611f36565b6107f1565b60405161021b9190611de9565b60405180910390f35b61023e60048036038101906102399190611f36565b6108c2565b60405161024b9190611f72565b60405180910390f35b61026e60048036038101906102699190611e41565b61090b565b60405161027b9190611eaf565b60405180910390f35b61028c6109bd565b6040516102999190611fb8565b60405180910390f35b6102bc60048036038101906102b79190611f36565b6109e1565b6040516102c99190611f72565b60405180910390f35b6102da610a99565b6040516102e79190611f72565b60405180910390f35b6102f8610c84565b6040516103059190611eaf565b60405180910390f35b610316610cac565b6040516103239190611de9565b60405180910390f35b61034660048036038101906103419190611fff565b610d3e565b005b610362600480360381019061035d9190611f36565b610d54565b60405161036f9190611d35565b60405180910390f35b610380610daa565b60405161038d9190611de9565b60405180910390f35b6103b060048036038101906103ab9190611e41565b610e3c565b6040516103bd9190611de9565b60405180910390f35b6103e060048036038101906103db919061203f565b610f8e565b6040516103ed9190611d35565b60405180910390f35b610410600480360381019061040b9190611ef6565b611022565b005b61041a6111ba565b6040516104279190611de9565b60405180910390f35b61043861124c565b6040516104459190611f72565b60405180910390f35b60007f591d4bc0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061051957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610529575061052882611256565b5b9050919050565b60606000805461053f906120ae565b80601f016020809104026020016040519081016040528092919081815260200182805461056b906120ae565b80156105b85780601f1061058d576101008083540402835291602001916105b8565b820191906000526020600020905b81548152906001019060200180831161059b57829003601f168201915b5050505050905090565b60006105cd826112c0565b61060c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060390612152565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106528261090b565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba906121e4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166106e261132c565b73ffffffffffffffffffffffffffffffffffffffff16148061071157506107108161070b61132c565b610f8e565b5b610750576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074790612276565b60405180910390fd5b61075a8383611334565b505050565b6060600a805461076e906120ae565b80601f016020809104026020016040519081016040528092919081815260200182805461079a906120ae565b80156107e75780601f106107bc576101008083540402835291602001916107e7565b820191906000526020600020905b8154815290600101906020018083116107ca57829003601f168201915b5050505050905090565b6060600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461083d906120ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610869906120ae565b80156108b65780601f1061088b576101008083540402835291602001916108b6565b820191906000526020600020905b81548152906001019060200180831161089957829003601f168201915b50505050509050919050565b6000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ab90612308565b60405180910390fd5b80915050919050565b6109c5611bda565b6007604051806020016040529081600082015481525050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a499061239a565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b1e576040517fbdaa602700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b2860076113ed565b6000610b346007611403565b9050610b403382611411565b6000610b8b82600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115eb565b9050610b97828261166c565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610c42929190611bed565b507f2d96a37fc0df820d14a130dc20cef776e701693d91f3b8087309137c53af29c53383604051610c749291906123ba565b60405180910390a1819250505090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b606060018054610cbb906120ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce7906120ae565b8015610d345780601f10610d0957610100808354040283529160200191610d34565b820191906000526020600020905b815481529060010190602001808311610d1757829003601f168201915b5050505050905090565b610d50610d4961132c565b83836116e0565b5050565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054610db9906120ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610de5906120ae565b8015610e325780601f10610e0757610100808354040283529160200191610e32565b820191906000526020600020905b815481529060010190602001808311610e1557829003601f168201915b5050505050905090565b6060610e47826112c0565b610e86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7d90612455565b60405180910390fd5b6000600660008481526020019081526020016000208054610ea6906120ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed2906120ae565b8015610f1f5780601f10610ef457610100808354040283529160200191610f1f565b820191906000526020600020905b815481529060010190602001808311610f0257829003601f168201915b505050505090506000610f3061184d565b9050600081511415610f46578192505050610f89565b600082511115610f7b578082604051602001610f639291906124b1565b60405160208183030381529060405292505050610f89565b610f8484611864565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110a7576040517f6213132300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6008548111156110e3576040517fce9037f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f3a8f9cec46c0521152fbc9136996c3d56edcad069320d3a56b7e97a0ec355cb8826040516111ae9190611eaf565b60405180910390a15050565b6060600b80546111c9906120ae565b80601f01602080910402602001604051908101604052809291908181526020018280546111f5906120ae565b80156112425780601f1061121757610100808354040283529160200191611242565b820191906000526020600020905b81548152906001019060200180831161122557829003601f168201915b5050505050905090565b6000600854905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166113a78361090b565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001816000016000828254019250508190555050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147890612521565b60405180910390fd5b61148a816112c0565b156114ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c19061258d565b60405180910390fd5b6114d66000838361190b565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461152691906125dc565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46115e760008383611910565b5050565b60606000600a6115fa85611915565b600961160586611915565b611610600854611915565b600a600b60405160200161162a9796959493929190612cb6565b604051602081830303815290604052905061164481611a76565b6040516020016116549190612e85565b60405160208183030381529060405291505092915050565b611675826112c0565b6116b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ab90612f19565b60405180910390fd5b806006600084815260200190815260200160002090805190602001906116db929190611bed565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561174f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174690612f85565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118409190611d35565b60405180910390a3505050565b606060405180602001604052806000815250905090565b606061186f826112c0565b6118ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a590613017565b60405180910390fd5b60006118b861184d565b905060008151116118d85760405180602001604052806000815250611903565b806118e284611915565b6040516020016118f39291906124b1565b6040516020818303038152906040525b915050919050565b505050565b505050565b6060600082141561195d576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611a71565b600082905060005b6000821461198f57808061197890613037565b915050600a8261198891906130af565b9150611965565b60008167ffffffffffffffff8111156119ab576119aa6130e0565b5b6040519080825280601f01601f1916602001820160405280156119dd5781602001600182028036833780820191505090505b5090505b60008514611a6a576001826119f6919061310f565b9150600a85611a059190613143565b6030611a1191906125dc565b60f81b818381518110611a2757611a26613174565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611a6391906130af565b94506119e1565b8093505050505b919050565b6060600082511415611a9957604051806020016040528060008152509050611bd5565b60006040518060600160405280604081526020016131fe6040913990506000600360028551611ac891906125dc565b611ad291906130af565b6004611ade91906131a3565b67ffffffffffffffff811115611af757611af66130e0565b5b6040519080825280601f01601f191660200182016040528015611b295781602001600182028036833780820191505090505b509050600182016020820185865187015b80821015611b95576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845360018401935050611b3a565b5050600386510660018114611bb15760028114611bc457611bcc565b603d6001830353603d6002830353611bcc565b603d60018303535b50505080925050505b919050565b6040518060200160405280600081525090565b828054611bf9906120ae565b90600052602060002090601f016020900481019282611c1b5760008555611c62565b82601f10611c3457805160ff1916838001178555611c62565b82800160010185558215611c62579182015b82811115611c61578251825591602001919060010190611c46565b5b509050611c6f9190611c73565b5090565b5b80821115611c8c576000816000905550600101611c74565b5090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611cca81611c95565b8114611cd557600080fd5b50565b600081359050611ce781611cc1565b92915050565b600060208284031215611d0357611d02611c90565b5b6000611d1184828501611cd8565b91505092915050565b60008115159050919050565b611d2f81611d1a565b82525050565b6000602082019050611d4a6000830184611d26565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d8a578082015181840152602081019050611d6f565b83811115611d99576000848401525b50505050565b6000601f19601f8301169050919050565b6000611dbb82611d50565b611dc58185611d5b565b9350611dd5818560208601611d6c565b611dde81611d9f565b840191505092915050565b60006020820190508181036000830152611e038184611db0565b905092915050565b6000819050919050565b611e1e81611e0b565b8114611e2957600080fd5b50565b600081359050611e3b81611e15565b92915050565b600060208284031215611e5757611e56611c90565b5b6000611e6584828501611e2c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e9982611e6e565b9050919050565b611ea981611e8e565b82525050565b6000602082019050611ec46000830184611ea0565b92915050565b611ed381611e8e565b8114611ede57600080fd5b50565b600081359050611ef081611eca565b92915050565b60008060408385031215611f0d57611f0c611c90565b5b6000611f1b85828601611ee1565b9250506020611f2c85828601611e2c565b9150509250929050565b600060208284031215611f4c57611f4b611c90565b5b6000611f5a84828501611ee1565b91505092915050565b611f6c81611e0b565b82525050565b6000602082019050611f876000830184611f63565b92915050565b611f9681611e0b565b82525050565b602082016000820151611fb26000850182611f8d565b50505050565b6000602082019050611fcd6000830184611f9c565b92915050565b611fdc81611d1a565b8114611fe757600080fd5b50565b600081359050611ff981611fd3565b92915050565b6000806040838503121561201657612015611c90565b5b600061202485828601611ee1565b925050602061203585828601611fea565b9150509250929050565b6000806040838503121561205657612055611c90565b5b600061206485828601611ee1565b925050602061207585828601611ee1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806120c657607f821691505b602082108114156120da576120d961207f565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b600061213c602c83611d5b565b9150612147826120e0565b604082019050919050565b6000602082019050818103600083015261216b8161212f565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006121ce602183611d5b565b91506121d982612172565b604082019050919050565b600060208201905081810360008301526121fd816121c1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b6000612260603883611d5b565b915061226b82612204565b604082019050919050565b6000602082019050818103600083015261228f81612253565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b60006122f2602983611d5b565b91506122fd82612296565b604082019050919050565b60006020820190508181036000830152612321816122e5565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000612384602a83611d5b565b915061238f82612328565b604082019050919050565b600060208201905081810360008301526123b381612377565b9050919050565b60006040820190506123cf6000830185611ea0565b6123dc6020830184611f63565b9392505050565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b600061243f603183611d5b565b915061244a826123e3565b604082019050919050565b6000602082019050818103600083015261246e81612432565b9050919050565b600081905092915050565b600061248b82611d50565b6124958185612475565b93506124a5818560208601611d6c565b80840191505092915050565b60006124bd8285612480565b91506124c98284612480565b91508190509392505050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b600061250b602083611d5b565b9150612516826124d5565b602082019050919050565b6000602082019050818103600083015261253a816124fe565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612577601c83611d5b565b915061258282612541565b602082019050919050565b600060208201905081810360008301526125a68161256a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006125e782611e0b565b91506125f283611e0b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612627576126266125ad565b5b828201905092915050565b7f7b00000000000000000000000000000000000000000000000000000000000000600082015250565b6000612668600183612475565b915061267382612632565b600182019050919050565b7f226e616d65223a20220000000000000000000000000000000000000000000000600082015250565b60006126b4600983612475565b91506126bf8261267e565b600982019050919050565b60008190508160005260206000209050919050565b600081546126ec816120ae565b6126f68186612475565b94506001821660008114612711576001811461272257612755565b60ff19831686528186019350612755565b61272b856126ca565b60005b8381101561274d5781548189015260018201915060208101905061272e565b838801955050505b50505092915050565b7f2044656772656520230000000000000000000000000000000000000000000000600082015250565b6000612794600983612475565b915061279f8261275e565b600982019050919050565b7f222c000000000000000000000000000000000000000000000000000000000000600082015250565b60006127e0600283612475565b91506127eb826127aa565b600282019050919050565b7f22696d616765223a202200000000000000000000000000000000000000000000600082015250565b600061282c600a83612475565b9150612837826127f6565b600a82019050919050565b7f226465736372697074696f6e223a2022416e20617761726420636f6e6665727260008201527f6564206279206120636f6c6c656765206f7220756e697665727369747920736960208201527f676e696679696e6720746861742074686520726563697069656e74206861732060408201527f7361746973666163746f72696c7920636f6d706c65746564206120636f75727360608201527f65206f66207374756479222c0000000000000000000000000000000000000000608082015250565b6000612910608c83612475565b915061291b82612842565b608c82019050919050565b7f2261747472696275746573223a205b0000000000000000000000000000000000600082015250565b600061295c600f83612475565b915061296782612926565b600f82019050919050565b7f2274726169742074797065223a202253636f7265222c00000000000000000000600082015250565b60006129a8601683612475565b91506129b382612972565b601682019050919050565b7f2276616c7565223a200000000000000000000000000000000000000000000000600082015250565b60006129f4600983612475565b91506129ff826129be565b600982019050919050565b7f2c00000000000000000000000000000000000000000000000000000000000000600082015250565b6000612a40600183612475565b9150612a4b82612a0a565b600182019050919050565b7f226d61785f76616c7565223a2000000000000000000000000000000000000000600082015250565b6000612a8c600d83612475565b9150612a9782612a56565b600d82019050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b6000612ad8600283612475565b9150612ae382612aa2565b600282019050919050565b7f2274726169742074797065223a20224d616a6f72222c00000000000000000000600082015250565b6000612b24601683612475565b9150612b2f82612aee565b601682019050919050565b7f2276616c7565223a202200000000000000000000000000000000000000000000600082015250565b6000612b70600a83612475565b9150612b7b82612b3a565b600a82019050919050565b7f2200000000000000000000000000000000000000000000000000000000000000600082015250565b6000612bbc600183612475565b9150612bc782612b86565b600182019050919050565b7f2274726169742074797065223a202254797065206f6620646567726565222c00600082015250565b6000612c08601f83612475565b9150612c1382612bd2565b601f82019050919050565b7f7d00000000000000000000000000000000000000000000000000000000000000600082015250565b6000612c54600183612475565b9150612c5f82612c1e565b600182019050919050565b7f5d00000000000000000000000000000000000000000000000000000000000000600082015250565b6000612ca0600183612475565b9150612cab82612c6a565b600182019050919050565b6000612cc18261265b565b9150612ccc826126a7565b9150612cd8828a6126df565b9150612ce382612787565b9150612cef8289612480565b9150612cfa826127d3565b9150612d058261281f565b9150612d1182886126df565b9150612d1c826127d3565b9150612d2782612903565b9150612d328261294f565b9150612d3d8261265b565b9150612d488261299b565b9150612d53826129e7565b9150612d5f8287612480565b9150612d6a82612a33565b9150612d7582612a7f565b9150612d818286612480565b9150612d8c82612acb565b9150612d978261265b565b9150612da282612b17565b9150612dad82612b63565b9150612db982856126df565b9150612dc482612baf565b9150612dcf82612acb565b9150612dda8261265b565b9150612de582612bfb565b9150612df082612b63565b9150612dfc82846126df565b9150612e0782612baf565b9150612e1282612c47565b9150612e1d82612c93565b9150612e2882612c47565b915081905098975050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000600082015250565b6000612e6f601d83612475565b9150612e7a82612e39565b601d82019050919050565b6000612e9082612e62565b9150612e9c8284612480565b915081905092915050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000612f03602e83611d5b565b9150612f0e82612ea7565b604082019050919050565b60006020820190508181036000830152612f3281612ef6565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612f6f601983611d5b565b9150612f7a82612f39565b602082019050919050565b60006020820190508181036000830152612f9e81612f62565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000613001602f83611d5b565b915061300c82612fa5565b604082019050919050565b6000602082019050818103600083015261303081612ff4565b9050919050565b600061304282611e0b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613075576130746125ad565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006130ba82611e0b565b91506130c583611e0b565b9250826130d5576130d4613080565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061311a82611e0b565b915061312583611e0b565b925082821015613138576131376125ad565b5b828203905092915050565b600061314e82611e0b565b915061315983611e0b565b92508261316957613168613080565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006131ae82611e0b565b91506131b983611e0b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156131f2576131f16125ad565b5b82820290509291505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220f04742fc4566b9d411dc747a415bf5e2ad811cc91ee884687ccf75ce7083d8cc64736f6c634300080a0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x37B9 CODESIZE SUB DUP1 PUSH3 0x37B9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E6976657273697479446567726565536F756C426F756E64546F6B656E0000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5544534254000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xBB SWAP3 SWAP2 SWAP1 PUSH3 0x167 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD4 SWAP3 SWAP2 SWAP1 PUSH3 0x167 JUMP JUMPDEST POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x9 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x12A SWAP3 SWAP2 SWAP1 PUSH3 0x167 JUMP JUMPDEST POP DUP2 PUSH1 0xA SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x143 SWAP3 SWAP2 SWAP1 PUSH3 0x167 JUMP JUMPDEST POP DUP1 PUSH1 0xB SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15C SWAP3 SWAP2 SWAP1 PUSH3 0x167 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x523 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x175 SWAP1 PUSH3 0x4ED JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x199 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1E5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1B4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1E5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1E5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1E4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1C7 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x1F4 SWAP2 SWAP1 PUSH3 0x1F8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x1F9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x240 DUP2 PUSH3 0x22B JUMP JUMPDEST DUP2 EQ PUSH3 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x260 DUP2 PUSH3 0x235 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x2BB DUP3 PUSH3 0x270 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2DD JUMPI PUSH3 0x2DC PUSH3 0x281 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F2 PUSH3 0x217 JUMP JUMPDEST SWAP1 POP PUSH3 0x300 DUP3 DUP3 PUSH3 0x2B0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x323 JUMPI PUSH3 0x322 PUSH3 0x281 JUMP JUMPDEST JUMPDEST PUSH3 0x32E DUP3 PUSH3 0x270 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x35B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x33E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x36B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x388 PUSH3 0x382 DUP5 PUSH3 0x305 JUMP JUMPDEST PUSH3 0x2E6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x3A7 JUMPI PUSH3 0x3A6 PUSH3 0x26B JUMP JUMPDEST JUMPDEST PUSH3 0x3B4 DUP5 DUP3 DUP6 PUSH3 0x33B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3D4 JUMPI PUSH3 0x3D3 PUSH3 0x266 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3E6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x371 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x40C JUMPI PUSH3 0x40B PUSH3 0x221 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x41C DUP8 DUP3 DUP9 ADD PUSH3 0x24F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x440 JUMPI PUSH3 0x43F PUSH3 0x226 JUMP JUMPDEST JUMPDEST PUSH3 0x44E DUP8 DUP3 DUP9 ADD PUSH3 0x3BC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x472 JUMPI PUSH3 0x471 PUSH3 0x226 JUMP JUMPDEST JUMPDEST PUSH3 0x480 DUP8 DUP3 DUP9 ADD PUSH3 0x3BC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4A4 JUMPI PUSH3 0x4A3 PUSH3 0x226 JUMP JUMPDEST JUMPDEST PUSH3 0x4B2 DUP8 DUP3 DUP9 ADD PUSH3 0x3BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x506 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x51D JUMPI PUSH3 0x51C PUSH3 0x4BE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3273 PUSH3 0x546 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xC88 ADD MSTORE PUSH2 0x1024 ADD MSTORE PUSH2 0x3273 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x723F5352 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC0888F87 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC0888F87 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xEE442CA7 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xF2DBEA34 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xFEF87A3B EQ PUSH2 0x430 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x723F5352 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xA42F34CE EQ PUSH2 0x348 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x246BB8E6 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x246BB8E6 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x3548D7A3 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A2 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x19097126 EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH2 0x75F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST PUSH2 0x1022 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41A PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x591D4BC000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x519 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x529 JUMPI POP PUSH2 0x528 DUP3 PUSH2 0x1256 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x53F SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x56B SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x58D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x59B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CD DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x603 SWAP1 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x652 DUP3 PUSH2 0x90B JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BA SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6E2 PUSH2 0x132C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x711 JUMPI POP PUSH2 0x710 DUP2 PUSH2 0x70B PUSH2 0x132C JUMP JUMPDEST PUSH2 0xF8E JUMP JUMPDEST JUMPDEST PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x747 SWAP1 PUSH2 0x2276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75A DUP4 DUP4 PUSH2 0x1334 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0x76E SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x79A SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x83D SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x869 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x88B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x899 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AB SWAP1 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C5 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA49 SWAP1 PUSH2 0x239A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0xBDAA602700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB28 PUSH1 0x7 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB34 PUSH1 0x7 PUSH2 0x1403 JUMP JUMPDEST SWAP1 POP PUSH2 0xB40 CALLER DUP3 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8B DUP3 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15EB JUMP JUMPDEST SWAP1 POP PUSH2 0xB97 DUP3 DUP3 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xC42 SWAP3 SWAP2 SWAP1 PUSH2 0x1BED JUMP JUMPDEST POP PUSH32 0x2D96A37FC0DF820D14A130DC20CEF776E701693D91F3B8087309137C53AF29C5 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0xC74 SWAP3 SWAP2 SWAP1 PUSH2 0x23BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xCBB SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCE7 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD34 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD09 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD34 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD17 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD50 PUSH2 0xD49 PUSH2 0x132C JUMP JUMPDEST DUP4 DUP4 PUSH2 0x16E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0xDB9 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDE5 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE32 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE07 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE32 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE15 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE47 DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7D SWAP1 PUSH2 0x2455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xEA6 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xED2 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEF4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xF30 PUSH2 0x184D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xF46 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xF7B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF63 SWAP3 SWAP2 SWAP1 PUSH2 0x24B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xF89 JUMP JUMPDEST PUSH2 0xF84 DUP5 PUSH2 0x1864 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6213132300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0x10E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCE9037F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x3A8F9CEC46C0521152FBC9136996C3D56EDCAD069320D3A56B7E97A0EC355CB8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11AE SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0x11C9 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11F5 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1242 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1217 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1242 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1225 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A7 DUP4 PUSH2 0x90B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1481 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1478 SWAP1 PUSH2 0x2521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148A DUP2 PUSH2 0x12C0 JUMP JUMPDEST ISZERO PUSH2 0x14CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C1 SWAP1 PUSH2 0x258D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14D6 PUSH1 0x0 DUP4 DUP4 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1526 SWAP2 SWAP1 PUSH2 0x25DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x15E7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1910 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA PUSH2 0x15FA DUP6 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x1605 DUP7 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x1610 PUSH1 0x8 SLOAD PUSH2 0x1915 JUMP JUMPDEST PUSH1 0xA PUSH1 0xB PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x162A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1644 DUP2 PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x2E85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1675 DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x16B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AB SWAP1 PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x16DB SWAP3 SWAP2 SWAP1 PUSH2 0x1BED JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x174F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1746 SWAP1 PUSH2 0x2F85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1840 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x186F DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x18AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A5 SWAP1 PUSH2 0x3017 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18B8 PUSH2 0x184D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x18D8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1903 JUMP JUMPDEST DUP1 PUSH2 0x18E2 DUP5 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18F3 SWAP3 SWAP2 SWAP1 PUSH2 0x24B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x195D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1A71 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x198F JUMPI DUP1 DUP1 PUSH2 0x1978 SWAP1 PUSH2 0x3037 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1988 SWAP2 SWAP1 PUSH2 0x30AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1965 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AB JUMPI PUSH2 0x19AA PUSH2 0x30E0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19DD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1A6A JUMPI PUSH1 0x1 DUP3 PUSH2 0x19F6 SWAP2 SWAP1 PUSH2 0x310F JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1A05 SWAP2 SWAP1 PUSH2 0x3143 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1A11 SWAP2 SWAP1 PUSH2 0x25DC JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A27 JUMPI PUSH2 0x1A26 PUSH2 0x3174 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1A63 SWAP2 SWAP1 PUSH2 0x30AF JUMP JUMPDEST SWAP5 POP PUSH2 0x19E1 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x1A99 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x31FE PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0x1AC8 SWAP2 SWAP1 PUSH2 0x25DC JUMP JUMPDEST PUSH2 0x1AD2 SWAP2 SWAP1 PUSH2 0x30AF JUMP JUMPDEST PUSH1 0x4 PUSH2 0x1ADE SWAP2 SWAP1 PUSH2 0x31A3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AF7 JUMPI PUSH2 0x1AF6 PUSH2 0x30E0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B29 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1B95 JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP POP PUSH2 0x1B3A JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x1BB1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1BC4 JUMPI PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP POP POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1BF9 SWAP1 PUSH2 0x20AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1C1B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1C62 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1C34 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1C62 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1C62 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1C61 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1C46 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1C6F SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1C8C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1C74 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CCA DUP2 PUSH2 0x1C95 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CE7 DUP2 PUSH2 0x1CC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D03 JUMPI PUSH2 0x1D02 PUSH2 0x1C90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D11 DUP5 DUP3 DUP6 ADD PUSH2 0x1CD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D2F DUP2 PUSH2 0x1D1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D6F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D99 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBB DUP3 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x1DC5 DUP2 DUP6 PUSH2 0x1D5B JUMP JUMPDEST SWAP4 POP PUSH2 0x1DD5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6C JUMP JUMPDEST PUSH2 0x1DDE DUP2 PUSH2 0x1D9F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E03 DUP2 DUP5 PUSH2 0x1DB0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E1E DUP2 PUSH2 0x1E0B JUMP JUMPDEST DUP2 EQ PUSH2 0x1E29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E3B DUP2 PUSH2 0x1E15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E57 JUMPI PUSH2 0x1E56 PUSH2 0x1C90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E65 DUP5 DUP3 DUP6 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E99 DUP3 PUSH2 0x1E6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA9 DUP2 PUSH2 0x1E8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ED3 DUP2 PUSH2 0x1E8E JUMP JUMPDEST DUP2 EQ PUSH2 0x1EDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF0 DUP2 PUSH2 0x1ECA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F0D JUMPI PUSH2 0x1F0C PUSH2 0x1C90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F1B DUP6 DUP3 DUP7 ADD PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F2C DUP6 DUP3 DUP7 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F4C JUMPI PUSH2 0x1F4B PUSH2 0x1C90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F5A DUP5 DUP3 DUP6 ADD PUSH2 0x1EE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F6C DUP2 PUSH2 0x1E0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F87 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F96 DUP2 PUSH2 0x1E0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1FB2 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1F8D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FCD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FDC DUP2 PUSH2 0x1D1A JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FF9 DUP2 PUSH2 0x1FD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2016 JUMPI PUSH2 0x2015 PUSH2 0x1C90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2024 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2035 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2056 JUMPI PUSH2 0x2055 PUSH2 0x1C90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2064 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2075 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x20DA JUMPI PUSH2 0x20D9 PUSH2 0x207F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213C PUSH1 0x2C DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x2147 DUP3 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x216B DUP2 PUSH2 0x212F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CE PUSH1 0x21 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x21D9 DUP3 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21FD DUP2 PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2260 PUSH1 0x38 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x226B DUP3 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x228F DUP2 PUSH2 0x2253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F2 PUSH1 0x29 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x22FD DUP3 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2321 DUP2 PUSH2 0x22E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2384 PUSH1 0x2A DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x238F DUP3 PUSH2 0x2328 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B3 DUP2 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23CF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1EA0 JUMP JUMPDEST PUSH2 0x23DC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F63 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F6E6578697374656E7420746F6B656E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x243F PUSH1 0x31 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x244A DUP3 PUSH2 0x23E3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x246E DUP2 PUSH2 0x2432 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248B DUP3 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x2495 DUP2 DUP6 PUSH2 0x2475 JUMP JUMPDEST SWAP4 POP PUSH2 0x24A5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BD DUP3 DUP6 PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP PUSH2 0x24C9 DUP3 DUP5 PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250B PUSH1 0x20 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x2516 DUP3 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x253A DUP2 PUSH2 0x24FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2577 PUSH1 0x1C DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x2582 DUP3 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25A6 DUP2 PUSH2 0x256A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25E7 DUP3 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP PUSH2 0x25F2 DUP4 PUSH2 0x1E0B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2627 JUMPI PUSH2 0x2626 PUSH2 0x25AD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7B00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2668 PUSH1 0x1 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2673 DUP3 PUSH2 0x2632 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x226E616D65223A20220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B4 PUSH1 0x9 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x26BF DUP3 PUSH2 0x267E JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x26EC DUP2 PUSH2 0x20AE JUMP JUMPDEST PUSH2 0x26F6 DUP2 DUP7 PUSH2 0x2475 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2711 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2722 JUMPI PUSH2 0x2755 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x272B DUP6 PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x274D JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x272E JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2044656772656520230000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2794 PUSH1 0x9 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x279F DUP3 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x222C000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E0 PUSH1 0x2 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x27EB DUP3 PUSH2 0x27AA JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x22696D616765223A202200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282C PUSH1 0xA DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2837 DUP3 PUSH2 0x27F6 JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x226465736372697074696F6E223A2022416E20617761726420636F6E66657272 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564206279206120636F6C6C656765206F7220756E6976657273697479207369 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x676E696679696E6720746861742074686520726563697069656E742068617320 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7361746973666163746F72696C7920636F6D706C65746564206120636F757273 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x65206F66207374756479222C0000000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2910 PUSH1 0x8C DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x291B DUP3 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x8C DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A205B0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295C PUSH1 0xF DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2967 DUP3 PUSH2 0x2926 JUMP JUMPDEST PUSH1 0xF DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2274726169742074797065223A202253636F7265222C00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A8 PUSH1 0x16 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x29B3 DUP3 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x16 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2276616C7565223A200000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F4 PUSH1 0x9 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x29FF DUP3 PUSH2 0x29BE JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A40 PUSH1 0x1 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A4B DUP3 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x226D61785F76616C7565223A2000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8C PUSH1 0xD DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A97 DUP3 PUSH2 0x2A56 JUMP JUMPDEST PUSH1 0xD DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7D2C000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD8 PUSH1 0x2 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE3 DUP3 PUSH2 0x2AA2 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2274726169742074797065223A20224D616A6F72222C00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B24 PUSH1 0x16 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B2F DUP3 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x16 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2276616C7565223A202200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B70 PUSH1 0xA DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B7B DUP3 PUSH2 0x2B3A JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBC PUSH1 0x1 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC7 DUP3 PUSH2 0x2B86 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2274726169742074797065223A202254797065206F6620646567726565222C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C08 PUSH1 0x1F DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C13 DUP3 PUSH2 0x2BD2 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7D00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C54 PUSH1 0x1 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C5F DUP3 PUSH2 0x2C1E JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5D00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA0 PUSH1 0x1 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CAB DUP3 PUSH2 0x2C6A JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC1 DUP3 PUSH2 0x265B JUMP JUMPDEST SWAP2 POP PUSH2 0x2CCC DUP3 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD8 DUP3 DUP11 PUSH2 0x26DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE3 DUP3 PUSH2 0x2787 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEF DUP3 DUP10 PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFA DUP3 PUSH2 0x27D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D05 DUP3 PUSH2 0x281F JUMP JUMPDEST SWAP2 POP PUSH2 0x2D11 DUP3 DUP9 PUSH2 0x26DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2D1C DUP3 PUSH2 0x27D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D27 DUP3 PUSH2 0x2903 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D32 DUP3 PUSH2 0x294F JUMP JUMPDEST SWAP2 POP PUSH2 0x2D3D DUP3 PUSH2 0x265B JUMP JUMPDEST SWAP2 POP PUSH2 0x2D48 DUP3 PUSH2 0x299B JUMP JUMPDEST SWAP2 POP PUSH2 0x2D53 DUP3 PUSH2 0x29E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D5F DUP3 DUP8 PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D6A DUP3 PUSH2 0x2A33 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D75 DUP3 PUSH2 0x2A7F JUMP JUMPDEST SWAP2 POP PUSH2 0x2D81 DUP3 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D8C DUP3 PUSH2 0x2ACB JUMP JUMPDEST SWAP2 POP PUSH2 0x2D97 DUP3 PUSH2 0x265B JUMP JUMPDEST SWAP2 POP PUSH2 0x2DA2 DUP3 PUSH2 0x2B17 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DAD DUP3 PUSH2 0x2B63 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DB9 DUP3 DUP6 PUSH2 0x26DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2DC4 DUP3 PUSH2 0x2BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x2DCF DUP3 PUSH2 0x2ACB JUMP JUMPDEST SWAP2 POP PUSH2 0x2DDA DUP3 PUSH2 0x265B JUMP JUMPDEST SWAP2 POP PUSH2 0x2DE5 DUP3 PUSH2 0x2BFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF0 DUP3 PUSH2 0x2B63 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DFC DUP3 DUP5 PUSH2 0x26DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2E07 DUP3 PUSH2 0x2BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x2E12 DUP3 PUSH2 0x2C47 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E1D DUP3 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E28 DUP3 PUSH2 0x2C47 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6F PUSH1 0x1D DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7A DUP3 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x1D DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E90 DUP3 PUSH2 0x2E62 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E9C DUP3 DUP5 PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F03 PUSH1 0x2E DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x2F0E DUP3 PUSH2 0x2EA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F32 DUP2 PUSH2 0x2EF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6F PUSH1 0x19 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x2F7A DUP3 PUSH2 0x2F39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F9E DUP2 PUSH2 0x2F62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3001 PUSH1 0x2F DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x300C DUP3 PUSH2 0x2FA5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3030 DUP2 PUSH2 0x2FF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3042 DUP3 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3075 JUMPI PUSH2 0x3074 PUSH2 0x25AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30BA DUP3 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP PUSH2 0x30C5 DUP4 PUSH2 0x1E0B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x30D5 JUMPI PUSH2 0x30D4 PUSH2 0x3080 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x311A DUP3 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP PUSH2 0x3125 DUP4 PUSH2 0x1E0B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3138 JUMPI PUSH2 0x3137 PUSH2 0x25AD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x314E DUP3 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP PUSH2 0x3159 DUP4 PUSH2 0x1E0B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3169 JUMPI PUSH2 0x3168 PUSH2 0x3080 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31AE DUP3 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP PUSH2 0x31B9 DUP4 PUSH2 0x1E0B JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x31F2 JUMPI PUSH2 0x31F1 PUSH2 0x25AD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 CREATE SELFBALANCE TIMESTAMP 0xFC GASLIMIT PUSH7 0xB9D411DC747A41 JUMPDEST CREATE2 0xE2 0xAD DUP2 SHR 0xC9 0x1E 0xE8 DUP5 PUSH9 0x7CCF75CE7083D8CC64 PUSH20 0x6F6C634300080A00330000000000000000000000 ","sourceMap":"945:4903:0:-:0;;;2013:404;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1391:116:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1466:5;1458;:13;;;;;;;;;;;;:::i;:::-;;1492:7;1482;:17;;;;;;;;;;;;:::i;:::-;;1391:116;;2243:10:0::1;2233:20;;;;;;;;::::0;::::1;2283:14;2264:16;:33;;;;2324:11;2308:13;:27;;;;;;;;;;;;:::i;:::-;;2362:11;2346:13;:27;;;;;;;;;;;;:::i;:::-;;2399:10;2384:12;:25;;;;;;;;;;;;:::i;:::-;;2013:404:::0;;;;945:4903;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:117::-;803:1;800;793:12;817:117;926:1;923;916:12;940:102;981:6;1032:2;1028:7;1023:2;1016:5;1012:14;1008:28;998:38;;940:102;;;:::o;1048:180::-;1096:77;1093:1;1086:88;1193:4;1190:1;1183:15;1217:4;1214:1;1207:15;1234:281;1317:27;1339:4;1317:27;:::i;:::-;1309:6;1305:40;1447:6;1435:10;1432:22;1411:18;1399:10;1396:34;1393:62;1390:88;;;1458:18;;:::i;:::-;1390:88;1498:10;1494:2;1487:22;1277:238;1234:281;;:::o;1521:129::-;1555:6;1582:20;;:::i;:::-;1572:30;;1611:33;1639:4;1631:6;1611:33;:::i;:::-;1521:129;;;:::o;1656:308::-;1718:4;1808:18;1800:6;1797:30;1794:56;;;1830:18;;:::i;:::-;1794:56;1868:29;1890:6;1868:29;:::i;:::-;1860:37;;1952:4;1946;1942:15;1934:23;;1656:308;;;:::o;1970:307::-;2038:1;2048:113;2062:6;2059:1;2056:13;2048:113;;;2147:1;2142:3;2138:11;2132:18;2128:1;2123:3;2119:11;2112:39;2084:2;2081:1;2077:10;2072:15;;2048:113;;;2179:6;2176:1;2173:13;2170:101;;;2259:1;2250:6;2245:3;2241:16;2234:27;2170:101;2019:258;1970:307;;;:::o;2283:421::-;2372:5;2397:66;2413:49;2455:6;2413:49;:::i;:::-;2397:66;:::i;:::-;2388:75;;2486:6;2479:5;2472:21;2524:4;2517:5;2513:16;2562:3;2553:6;2548:3;2544:16;2541:25;2538:112;;;2569:79;;:::i;:::-;2538:112;2659:39;2691:6;2686:3;2681;2659:39;:::i;:::-;2378:326;2283:421;;;;;:::o;2724:355::-;2791:5;2840:3;2833:4;2825:6;2821:17;2817:27;2807:122;;2848:79;;:::i;:::-;2807:122;2958:6;2952:13;2983:90;3069:3;3061:6;3054:4;3046:6;3042:17;2983:90;:::i;:::-;2974:99;;2797:282;2724:355;;;;:::o;3085:1339::-;3212:6;3220;3228;3236;3285:3;3273:9;3264:7;3260:23;3256:33;3253:120;;;3292:79;;:::i;:::-;3253:120;3412:1;3437:64;3493:7;3484:6;3473:9;3469:22;3437:64;:::i;:::-;3427:74;;3383:128;3571:2;3560:9;3556:18;3550:25;3602:18;3594:6;3591:30;3588:117;;;3624:79;;:::i;:::-;3588:117;3729:74;3795:7;3786:6;3775:9;3771:22;3729:74;:::i;:::-;3719:84;;3521:292;3873:2;3862:9;3858:18;3852:25;3904:18;3896:6;3893:30;3890:117;;;3926:79;;:::i;:::-;3890:117;4031:74;4097:7;4088:6;4077:9;4073:22;4031:74;:::i;:::-;4021:84;;3823:292;4175:2;4164:9;4160:18;4154:25;4206:18;4198:6;4195:30;4192:117;;;4228:79;;:::i;:::-;4192:117;4333:74;4399:7;4390:6;4379:9;4375:22;4333:74;:::i;:::-;4323:84;;4125:292;3085:1339;;;;;;;:::o;4430:180::-;4478:77;4475:1;4468:88;4575:4;4572:1;4565:15;4599:4;4596:1;4589:15;4616:320;4660:6;4697:1;4691:4;4687:12;4677:22;;4744:1;4738:4;4734:12;4765:18;4755:81;;4821:4;4813:6;4809:17;4799:27;;4755:81;4883:2;4875:6;4872:14;4852:18;4849:38;4846:84;;;4902:18;;:::i;:::-;4846:84;4667:269;4616:320;;;:::o;945:4903:0:-;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1093":{"entryPoint":6416,"id":1093,"parameterSlots":3,"returnSlots":0},"@_approve_977":{"entryPoint":4916,"id":977,"parameterSlots":2,"returnSlots":0},"@_baseURI_625":{"entryPoint":6221,"id":625,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1082":{"entryPoint":6411,"id":1082,"parameterSlots":3,"returnSlots":0},"@_exists_742":{"entryPoint":4800,"id":742,"parameterSlots":1,"returnSlots":1},"@_mint_893":{"entryPoint":5137,"id":893,"parameterSlots":2,"returnSlots":0},"@_msgSender_374":{"entryPoint":4908,"id":374,"parameterSlots":0,"returnSlots":1},"@_setApprovalForAll_1009":{"entryPoint":5856,"id":1009,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1191":{"entryPoint":5740,"id":1191,"parameterSlots":2,"returnSlots":0},"@approve_668":{"entryPoint":1607,"id":668,"parameterSlots":2,"returnSlots":0},"@balanceOf_526":{"entryPoint":2529,"id":526,"parameterSlots":1,"returnSlots":1},"@checkDegreeOfStudent_288":{"entryPoint":2033,"id":288,"parameterSlots":1,"returnSlots":1},"@checkScoreOfStudent_300":{"entryPoint":2242,"id":300,"parameterSlots":1,"returnSlots":1},"@claimDegree_209":{"entryPoint":2713,"id":209,"parameterSlots":0,"returnSlots":1},"@current_1723":{"entryPoint":5123,"id":1723,"parameterSlots":1,"returnSlots":1},"@encode_1704":{"entryPoint":6774,"id":1704,"parameterSlots":1,"returnSlots":1},"@generateTokenURI_276":{"entryPoint":5611,"id":276,"parameterSlots":2,"returnSlots":1},"@getApproved_689":{"entryPoint":1474,"id":689,"parameterSlots":1,"returnSlots":1},"@getDegreeImage_345":{"entryPoint":3498,"id":345,"parameterSlots":0,"returnSlots":1},"@getDegreeMajor_353":{"entryPoint":1887,"id":353,"parameterSlots":0,"returnSlots":1},"@getDegreeMaxScore_337":{"entryPoint":4684,"id":337,"parameterSlots":0,"returnSlots":1},"@getDegreeType_361":{"entryPoint":4538,"id":361,"parameterSlots":0,"returnSlots":1},"@getOwner_320":{"entryPoint":3204,"id":320,"parameterSlots":0,"returnSlots":1},"@getTokenCounter_329":{"entryPoint":2493,"id":329,"parameterSlots":0,"returnSlots":1},"@increment_1737":{"entryPoint":5101,"id":1737,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_724":{"entryPoint":3982,"id":724,"parameterSlots":2,"returnSlots":1},"@isStudentDegreeIssued_312":{"entryPoint":3412,"id":312,"parameterSlots":1,"returnSlots":1},"@issueDegree_139":{"entryPoint":4130,"id":139,"parameterSlots":2,"returnSlots":0},"@name_564":{"entryPoint":1328,"id":564,"parameterSlots":0,"returnSlots":1},"@ownerOf_554":{"entryPoint":2315,"id":554,"parameterSlots":1,"returnSlots":1},"@setApprovalForAll_706":{"entryPoint":3390,"id":706,"parameterSlots":2,"returnSlots":0},"@supportsInterface_407":{"entryPoint":4694,"id":407,"parameterSlots":1,"returnSlots":1},"@supportsInterface_502":{"entryPoint":1102,"id":502,"parameterSlots":1,"returnSlots":1},"@symbol_574":{"entryPoint":3244,"id":574,"parameterSlots":0,"returnSlots":1},"@toString_1864":{"entryPoint":6421,"id":1864,"parameterSlots":1,"returnSlots":1},"@tokenURI_1169":{"entryPoint":3644,"id":1169,"parameterSlots":1,"returnSlots":1},"@tokenURI_616":{"entryPoint":6244,"id":616,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7905,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":8170,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7384,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7724,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7990,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8255,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8191,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7926,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7405,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7745,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7840,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7462,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7600,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9344,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9951,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10955,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10195,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":9578,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10803,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11031,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":12130,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack":{"entryPoint":8787,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11183,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack":{"entryPoint":9079,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack":{"entryPoint":8933,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10727,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":12022,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10119,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":9470,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11335,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack":{"entryPoint":9266,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack":{"entryPoint":8495,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9895,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10651,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack":{"entryPoint":12276,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11259,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9819,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10575,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11107,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11411,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":8641,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11874,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10879,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10499,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10271,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Counter_$1711_memory_ptr_to_t_struct$_Counter_$1711_memory_ptr_fromStack":{"entryPoint":8092,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":8077,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8035,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9393,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37_t_string_storage_t_stringliteral_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6_t_string_storage_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428_t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209_t_stringliteral_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_stringliteral_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0_t_string_memory_ptr_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_t_string_storage_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_t_string_storage_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11446,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":9146,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7477,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7657,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9613,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8822,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9114,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8968,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12057,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9505,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9301,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8530,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12311,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8676,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Counter_$1711_memory_ptr__to_t_struct$_Counter_$1711_memory_ptr__fromStack_reversed":{"entryPoint":8120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8050,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":9930,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7504,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7515,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9333,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9692,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":12463,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":12707,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":12559,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7822,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7450,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7317,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7790,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7691,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":7532,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8366,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":12343,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":12611,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":9645,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":12416,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8319,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12660,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12512,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7312,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7583,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145":{"entryPoint":10914,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb":{"entryPoint":10154,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":9537,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb":{"entryPoint":10762,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965":{"entryPoint":10990,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":12089,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d":{"entryPoint":8708,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0":{"entryPoint":11142,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba":{"entryPoint":9000,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397":{"entryPoint":8854,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994":{"entryPoint":10686,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":11943,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f":{"entryPoint":10078,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":9429,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff":{"entryPoint":11294,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a":{"entryPoint":9187,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d":{"entryPoint":8416,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37":{"entryPoint":9854,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209":{"entryPoint":10610,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb":{"entryPoint":12197,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04":{"entryPoint":11218,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52":{"entryPoint":9778,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c":{"entryPoint":10534,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7":{"entryPoint":11066,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29":{"entryPoint":11370,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":8562,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa":{"entryPoint":11833,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0":{"entryPoint":10838,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428":{"entryPoint":10306,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6":{"entryPoint":10230,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7882,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8147,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7361,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7701,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:44339:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"378:105:13","statements":[{"nodeType":"YulAssignment","src":"388:89:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:13","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:13"},"nodeType":"YulFunctionCall","src":"399:78:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:13"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:13","type":""}],"src":"334:149:13"},{"body":{"nodeType":"YulBlock","src":"531:78:13","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:13"},"nodeType":"YulFunctionCall","src":"589:12:13"},"nodeType":"YulExpressionStatement","src":"589:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:13"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:13"},"nodeType":"YulFunctionCall","src":"561:23:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:13"},"nodeType":"YulFunctionCall","src":"551:34:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:13"},"nodeType":"YulFunctionCall","src":"544:42:13"},"nodeType":"YulIf","src":"541:62:13"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:13","type":""}],"src":"489:120:13"},{"body":{"nodeType":"YulBlock","src":"666:86:13","statements":[{"nodeType":"YulAssignment","src":"676:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:13"},"nodeType":"YulFunctionCall","src":"685:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:13"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:13"},"nodeType":"YulFunctionCall","src":"714:32:13"},"nodeType":"YulExpressionStatement","src":"714:32:13"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:13","type":""}],"src":"615:137:13"},{"body":{"nodeType":"YulBlock","src":"823:262:13","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:13"},"nodeType":"YulFunctionCall","src":"871:79:13"},"nodeType":"YulExpressionStatement","src":"871:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:13"},"nodeType":"YulFunctionCall","src":"840:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:13"},"nodeType":"YulFunctionCall","src":"836:32:13"},"nodeType":"YulIf","src":"833:119:13"},{"nodeType":"YulBlock","src":"962:116:13","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:13"},"nodeType":"YulFunctionCall","src":"1036:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:13"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:13"},"nodeType":"YulFunctionCall","src":"1016:52:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:13"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:13","type":""}],"src":"758:327:13"},{"body":{"nodeType":"YulBlock","src":"1133:48:13","statements":[{"nodeType":"YulAssignment","src":"1143:32:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:13"},"nodeType":"YulFunctionCall","src":"1161:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:13"},"nodeType":"YulFunctionCall","src":"1154:21:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:13"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:13","type":""}],"src":"1091:90:13"},{"body":{"nodeType":"YulBlock","src":"1246:50:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:13"},"nodeType":"YulFunctionCall","src":"1268:21:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:13"},"nodeType":"YulFunctionCall","src":"1256:34:13"},"nodeType":"YulExpressionStatement","src":"1256:34:13"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:13","type":""}],"src":"1187:109:13"},{"body":{"nodeType":"YulBlock","src":"1394:118:13","statements":[{"nodeType":"YulAssignment","src":"1404:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:13"},"nodeType":"YulFunctionCall","src":"1412:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:13"},"nodeType":"YulFunctionCall","src":"1487:17:13"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:13"},"nodeType":"YulFunctionCall","src":"1440:65:13"},"nodeType":"YulExpressionStatement","src":"1440:65:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:13","type":""}],"src":"1302:210:13"},{"body":{"nodeType":"YulBlock","src":"1577:40:13","statements":[{"nodeType":"YulAssignment","src":"1588:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:13"},"nodeType":"YulFunctionCall","src":"1598:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:13"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:13","type":""}],"src":"1518:99:13"},{"body":{"nodeType":"YulBlock","src":"1719:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:13"},"nodeType":"YulFunctionCall","src":"1729:19:13"},"nodeType":"YulExpressionStatement","src":"1729:19:13"},{"nodeType":"YulAssignment","src":"1757:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:13"},"nodeType":"YulFunctionCall","src":"1772:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:13","type":""}],"src":"1623:169:13"},{"body":{"nodeType":"YulBlock","src":"1847:258:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:13"},"nodeType":"YulFunctionCall","src":"1947:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:13"},"nodeType":"YulFunctionCall","src":"1966:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:13"},"nodeType":"YulFunctionCall","src":"1960:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:13"},"nodeType":"YulFunctionCall","src":"1940:39:13"},"nodeType":"YulExpressionStatement","src":"1940:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:13"},"nodeType":"YulFunctionCall","src":"1884:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:13","statements":[{"nodeType":"YulAssignment","src":"1900:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:13"},"nodeType":"YulFunctionCall","src":"1905:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:13","statements":[]},"src":"1876:113:13"},{"body":{"nodeType":"YulBlock","src":"2023:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:13"},"nodeType":"YulFunctionCall","src":"2069:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:13"},"nodeType":"YulFunctionCall","src":"2062:27:13"},"nodeType":"YulExpressionStatement","src":"2062:27:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:13"},"nodeType":"YulFunctionCall","src":"2001:13:13"},"nodeType":"YulIf","src":"1998:101:13"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:13","type":""}],"src":"1798:307:13"},{"body":{"nodeType":"YulBlock","src":"2159:54:13","statements":[{"nodeType":"YulAssignment","src":"2169:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:13"},"nodeType":"YulFunctionCall","src":"2183:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:13"},"nodeType":"YulFunctionCall","src":"2199:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:13"},"nodeType":"YulFunctionCall","src":"2179:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:13","type":""}],"src":"2111:102:13"},{"body":{"nodeType":"YulBlock","src":"2311:272:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:13"},"nodeType":"YulFunctionCall","src":"2335:39:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:13"},"nodeType":"YulFunctionCall","src":"2390:71:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:13"},"nodeType":"YulFunctionCall","src":"2492:16:13"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:13"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:13"},"nodeType":"YulFunctionCall","src":"2470:52:13"},"nodeType":"YulExpressionStatement","src":"2470:52:13"},{"nodeType":"YulAssignment","src":"2531:46:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:13"},"nodeType":"YulFunctionCall","src":"2547:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:13"},"nodeType":"YulFunctionCall","src":"2538:39:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:13"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:13","type":""}],"src":"2219:364:13"},{"body":{"nodeType":"YulBlock","src":"2707:195:13","statements":[{"nodeType":"YulAssignment","src":"2717:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:13"},"nodeType":"YulFunctionCall","src":"2725:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:13"},"nodeType":"YulFunctionCall","src":"2760:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:13"},"nodeType":"YulFunctionCall","src":"2779:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:13"},"nodeType":"YulFunctionCall","src":"2753:47:13"},"nodeType":"YulExpressionStatement","src":"2753:47:13"},{"nodeType":"YulAssignment","src":"2809:86:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:13"},"nodeType":"YulFunctionCall","src":"2817:78:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:13","type":""}],"src":"2589:313:13"},{"body":{"nodeType":"YulBlock","src":"2953:32:13","statements":[{"nodeType":"YulAssignment","src":"2963:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:13","type":""}],"src":"2908:77:13"},{"body":{"nodeType":"YulBlock","src":"3034:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:13"},"nodeType":"YulFunctionCall","src":"3093:12:13"},"nodeType":"YulExpressionStatement","src":"3093:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:13"},"nodeType":"YulFunctionCall","src":"3064:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:13"},"nodeType":"YulFunctionCall","src":"3054:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:13"},"nodeType":"YulFunctionCall","src":"3047:43:13"},"nodeType":"YulIf","src":"3044:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:13","type":""}],"src":"2991:122:13"},{"body":{"nodeType":"YulBlock","src":"3171:87:13","statements":[{"nodeType":"YulAssignment","src":"3181:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:13"},"nodeType":"YulFunctionCall","src":"3190:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:13"},"nodeType":"YulFunctionCall","src":"3219:33:13"},"nodeType":"YulExpressionStatement","src":"3219:33:13"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:13","type":""}],"src":"3119:139:13"},{"body":{"nodeType":"YulBlock","src":"3330:263:13","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:13"},"nodeType":"YulFunctionCall","src":"3378:79:13"},"nodeType":"YulExpressionStatement","src":"3378:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:13"},"nodeType":"YulFunctionCall","src":"3347:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:13"},"nodeType":"YulFunctionCall","src":"3343:32:13"},"nodeType":"YulIf","src":"3340:119:13"},{"nodeType":"YulBlock","src":"3469:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:13"},"nodeType":"YulFunctionCall","src":"3544:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:13"},"nodeType":"YulFunctionCall","src":"3523:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:13","type":""}],"src":"3264:329:13"},{"body":{"nodeType":"YulBlock","src":"3644:81:13","statements":[{"nodeType":"YulAssignment","src":"3654:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:13"},"nodeType":"YulFunctionCall","src":"3665:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:13","type":""}],"src":"3599:126:13"},{"body":{"nodeType":"YulBlock","src":"3776:51:13","statements":[{"nodeType":"YulAssignment","src":"3786:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:13"},"nodeType":"YulFunctionCall","src":"3797:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:13","type":""}],"src":"3731:96:13"},{"body":{"nodeType":"YulBlock","src":"3898:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:13"},"nodeType":"YulFunctionCall","src":"3920:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:13"},"nodeType":"YulFunctionCall","src":"3908:37:13"},"nodeType":"YulExpressionStatement","src":"3908:37:13"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:13","type":""}],"src":"3833:118:13"},{"body":{"nodeType":"YulBlock","src":"4055:124:13","statements":[{"nodeType":"YulAssignment","src":"4065:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:13"},"nodeType":"YulFunctionCall","src":"4073:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:13"},"nodeType":"YulFunctionCall","src":"4154:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:13"},"nodeType":"YulFunctionCall","src":"4101:71:13"},"nodeType":"YulExpressionStatement","src":"4101:71:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:13","type":""}],"src":"3957:222:13"},{"body":{"nodeType":"YulBlock","src":"4228:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:13"},"nodeType":"YulFunctionCall","src":"4287:12:13"},"nodeType":"YulExpressionStatement","src":"4287:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:13"},"nodeType":"YulFunctionCall","src":"4258:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:13"},"nodeType":"YulFunctionCall","src":"4248:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:13"},"nodeType":"YulFunctionCall","src":"4241:43:13"},"nodeType":"YulIf","src":"4238:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:13","type":""}],"src":"4185:122:13"},{"body":{"nodeType":"YulBlock","src":"4365:87:13","statements":[{"nodeType":"YulAssignment","src":"4375:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:13"},"nodeType":"YulFunctionCall","src":"4384:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:13"},"nodeType":"YulFunctionCall","src":"4413:33:13"},"nodeType":"YulExpressionStatement","src":"4413:33:13"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:13","type":""}],"src":"4313:139:13"},{"body":{"nodeType":"YulBlock","src":"4541:391:13","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:13"},"nodeType":"YulFunctionCall","src":"4589:79:13"},"nodeType":"YulExpressionStatement","src":"4589:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:13"},"nodeType":"YulFunctionCall","src":"4558:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:13"},"nodeType":"YulFunctionCall","src":"4554:32:13"},"nodeType":"YulIf","src":"4551:119:13"},{"nodeType":"YulBlock","src":"4680:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:13"},"nodeType":"YulFunctionCall","src":"4755:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:13"},"nodeType":"YulFunctionCall","src":"4734:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:13"}]}]},{"nodeType":"YulBlock","src":"4807:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:13"},"nodeType":"YulFunctionCall","src":"4883:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:13"},"nodeType":"YulFunctionCall","src":"4862:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:13","type":""}],"src":"4458:474:13"},{"body":{"nodeType":"YulBlock","src":"5004:263:13","statements":[{"body":{"nodeType":"YulBlock","src":"5050:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5052:77:13"},"nodeType":"YulFunctionCall","src":"5052:79:13"},"nodeType":"YulExpressionStatement","src":"5052:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5025:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5034:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5021:3:13"},"nodeType":"YulFunctionCall","src":"5021:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"5046:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5017:3:13"},"nodeType":"YulFunctionCall","src":"5017:32:13"},"nodeType":"YulIf","src":"5014:119:13"},{"nodeType":"YulBlock","src":"5143:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5158:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5172:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5162:6:13","type":""}]},{"nodeType":"YulAssignment","src":"5187:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5222:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5233:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5218:3:13"},"nodeType":"YulFunctionCall","src":"5218:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5242:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5197:20:13"},"nodeType":"YulFunctionCall","src":"5197:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5187:6:13"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4974:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4985:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4997:6:13","type":""}],"src":"4938:329:13"},{"body":{"nodeType":"YulBlock","src":"5338:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5355:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5378:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5360:17:13"},"nodeType":"YulFunctionCall","src":"5360:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5348:6:13"},"nodeType":"YulFunctionCall","src":"5348:37:13"},"nodeType":"YulExpressionStatement","src":"5348:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5326:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5333:3:13","type":""}],"src":"5273:118:13"},{"body":{"nodeType":"YulBlock","src":"5495:124:13","statements":[{"nodeType":"YulAssignment","src":"5505:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5517:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5528:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5513:3:13"},"nodeType":"YulFunctionCall","src":"5513:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5505:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5585:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5598:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5609:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5594:3:13"},"nodeType":"YulFunctionCall","src":"5594:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5541:43:13"},"nodeType":"YulFunctionCall","src":"5541:71:13"},"nodeType":"YulExpressionStatement","src":"5541:71:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5467:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5479:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5490:4:13","type":""}],"src":"5397:222:13"},{"body":{"nodeType":"YulBlock","src":"5680:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5697:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5720:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5702:17:13"},"nodeType":"YulFunctionCall","src":"5702:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5690:6:13"},"nodeType":"YulFunctionCall","src":"5690:37:13"},"nodeType":"YulExpressionStatement","src":"5690:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5668:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5675:3:13","type":""}],"src":"5625:108:13"},{"body":{"nodeType":"YulBlock","src":"5913:219:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5923:26:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5939:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"5944:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5935:3:13"},"nodeType":"YulFunctionCall","src":"5935:14:13"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"5927:4:13","type":""}]},{"nodeType":"YulBlock","src":"5959:166:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5996:43:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6026:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"6033:4:13","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6022:3:13"},"nodeType":"YulFunctionCall","src":"6022:16:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6016:5:13"},"nodeType":"YulFunctionCall","src":"6016:23:13"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6000:12:13","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6086:12:13"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6104:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"6109:4:13","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6100:3:13"},"nodeType":"YulFunctionCall","src":"6100:14:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6052:33:13"},"nodeType":"YulFunctionCall","src":"6052:63:13"},"nodeType":"YulExpressionStatement","src":"6052:63:13"}]}]},"name":"abi_encode_t_struct$_Counter_$1711_memory_ptr_to_t_struct$_Counter_$1711_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5900:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5907:3:13","type":""}],"src":"5797:335:13"},{"body":{"nodeType":"YulBlock","src":"6286:174:13","statements":[{"nodeType":"YulAssignment","src":"6296:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6308:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6319:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6304:3:13"},"nodeType":"YulFunctionCall","src":"6304:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6296:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6426:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6439:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6450:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6435:3:13"},"nodeType":"YulFunctionCall","src":"6435:17:13"}],"functionName":{"name":"abi_encode_t_struct$_Counter_$1711_memory_ptr_to_t_struct$_Counter_$1711_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6332:93:13"},"nodeType":"YulFunctionCall","src":"6332:121:13"},"nodeType":"YulExpressionStatement","src":"6332:121:13"}]},"name":"abi_encode_tuple_t_struct$_Counter_$1711_memory_ptr__to_t_struct$_Counter_$1711_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6258:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6270:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6281:4:13","type":""}],"src":"6138:322:13"},{"body":{"nodeType":"YulBlock","src":"6506:76:13","statements":[{"body":{"nodeType":"YulBlock","src":"6560:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6569:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6572:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6562:6:13"},"nodeType":"YulFunctionCall","src":"6562:12:13"},"nodeType":"YulExpressionStatement","src":"6562:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6529:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6551:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6536:14:13"},"nodeType":"YulFunctionCall","src":"6536:21:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6526:2:13"},"nodeType":"YulFunctionCall","src":"6526:32:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6519:6:13"},"nodeType":"YulFunctionCall","src":"6519:40:13"},"nodeType":"YulIf","src":"6516:60:13"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6499:5:13","type":""}],"src":"6466:116:13"},{"body":{"nodeType":"YulBlock","src":"6637:84:13","statements":[{"nodeType":"YulAssignment","src":"6647:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6669:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6656:12:13"},"nodeType":"YulFunctionCall","src":"6656:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6647:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6709:5:13"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6685:23:13"},"nodeType":"YulFunctionCall","src":"6685:30:13"},"nodeType":"YulExpressionStatement","src":"6685:30:13"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6615:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"6623:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6631:5:13","type":""}],"src":"6588:133:13"},{"body":{"nodeType":"YulBlock","src":"6807:388:13","statements":[{"body":{"nodeType":"YulBlock","src":"6853:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6855:77:13"},"nodeType":"YulFunctionCall","src":"6855:79:13"},"nodeType":"YulExpressionStatement","src":"6855:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6828:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"6837:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6824:3:13"},"nodeType":"YulFunctionCall","src":"6824:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"6849:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6820:3:13"},"nodeType":"YulFunctionCall","src":"6820:32:13"},"nodeType":"YulIf","src":"6817:119:13"},{"nodeType":"YulBlock","src":"6946:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6961:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6975:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6965:6:13","type":""}]},{"nodeType":"YulAssignment","src":"6990:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7025:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7036:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7021:3:13"},"nodeType":"YulFunctionCall","src":"7021:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7045:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7000:20:13"},"nodeType":"YulFunctionCall","src":"7000:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6990:6:13"}]}]},{"nodeType":"YulBlock","src":"7073:115:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7088:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7102:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7092:6:13","type":""}]},{"nodeType":"YulAssignment","src":"7118:60:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7150:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7161:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7146:3:13"},"nodeType":"YulFunctionCall","src":"7146:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7170:7:13"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"7128:17:13"},"nodeType":"YulFunctionCall","src":"7128:50:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7118:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6769:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6780:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6792:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6800:6:13","type":""}],"src":"6727:468:13"},{"body":{"nodeType":"YulBlock","src":"7284:391:13","statements":[{"body":{"nodeType":"YulBlock","src":"7330:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7332:77:13"},"nodeType":"YulFunctionCall","src":"7332:79:13"},"nodeType":"YulExpressionStatement","src":"7332:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7305:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"7314:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7301:3:13"},"nodeType":"YulFunctionCall","src":"7301:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"7326:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7297:3:13"},"nodeType":"YulFunctionCall","src":"7297:32:13"},"nodeType":"YulIf","src":"7294:119:13"},{"nodeType":"YulBlock","src":"7423:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7438:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7452:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7442:6:13","type":""}]},{"nodeType":"YulAssignment","src":"7467:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7502:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7513:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7498:3:13"},"nodeType":"YulFunctionCall","src":"7498:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7522:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7477:20:13"},"nodeType":"YulFunctionCall","src":"7477:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7467:6:13"}]}]},{"nodeType":"YulBlock","src":"7550:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7565:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7579:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7569:6:13","type":""}]},{"nodeType":"YulAssignment","src":"7595:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7630:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7641:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7626:3:13"},"nodeType":"YulFunctionCall","src":"7626:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7650:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7605:20:13"},"nodeType":"YulFunctionCall","src":"7605:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7595:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7246:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7257:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7269:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7277:6:13","type":""}],"src":"7201:474:13"},{"body":{"nodeType":"YulBlock","src":"7709:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7726:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7729:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7719:6:13"},"nodeType":"YulFunctionCall","src":"7719:88:13"},"nodeType":"YulExpressionStatement","src":"7719:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7823:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7826:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7816:6:13"},"nodeType":"YulFunctionCall","src":"7816:15:13"},"nodeType":"YulExpressionStatement","src":"7816:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7847:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7850:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7840:6:13"},"nodeType":"YulFunctionCall","src":"7840:15:13"},"nodeType":"YulExpressionStatement","src":"7840:15:13"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7681:180:13"},{"body":{"nodeType":"YulBlock","src":"7918:269:13","statements":[{"nodeType":"YulAssignment","src":"7928:22:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7942:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"7948:1:13","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7938:3:13"},"nodeType":"YulFunctionCall","src":"7938:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7928:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"7959:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7989:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"7995:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7985:3:13"},"nodeType":"YulFunctionCall","src":"7985:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7963:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8036:51:13","statements":[{"nodeType":"YulAssignment","src":"8050:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8064:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8072:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8060:3:13"},"nodeType":"YulFunctionCall","src":"8060:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8050:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8016:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8009:6:13"},"nodeType":"YulFunctionCall","src":"8009:26:13"},"nodeType":"YulIf","src":"8006:81:13"},{"body":{"nodeType":"YulBlock","src":"8139:42:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8153:16:13"},"nodeType":"YulFunctionCall","src":"8153:18:13"},"nodeType":"YulExpressionStatement","src":"8153:18:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8103:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8126:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8134:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8123:2:13"},"nodeType":"YulFunctionCall","src":"8123:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8100:2:13"},"nodeType":"YulFunctionCall","src":"8100:38:13"},"nodeType":"YulIf","src":"8097:84:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7902:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7911:6:13","type":""}],"src":"7867:320:13"},{"body":{"nodeType":"YulBlock","src":"8299:125:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8321:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8329:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8317:3:13"},"nodeType":"YulFunctionCall","src":"8317:14:13"},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"8333:34:13","type":"","value":"ERC721: approved query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8310:6:13"},"nodeType":"YulFunctionCall","src":"8310:58:13"},"nodeType":"YulExpressionStatement","src":"8310:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8389:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8397:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8385:3:13"},"nodeType":"YulFunctionCall","src":"8385:15:13"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"8402:14:13","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8378:6:13"},"nodeType":"YulFunctionCall","src":"8378:39:13"},"nodeType":"YulExpressionStatement","src":"8378:39:13"}]},"name":"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8291:6:13","type":""}],"src":"8193:231:13"},{"body":{"nodeType":"YulBlock","src":"8576:220:13","statements":[{"nodeType":"YulAssignment","src":"8586:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8652:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8657:2:13","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8593:58:13"},"nodeType":"YulFunctionCall","src":"8593:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8586:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8758:3:13"}],"functionName":{"name":"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","nodeType":"YulIdentifier","src":"8669:88:13"},"nodeType":"YulFunctionCall","src":"8669:93:13"},"nodeType":"YulExpressionStatement","src":"8669:93:13"},{"nodeType":"YulAssignment","src":"8771:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8782:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8787:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8778:3:13"},"nodeType":"YulFunctionCall","src":"8778:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8771:3:13"}]}]},"name":"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8564:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8572:3:13","type":""}],"src":"8430:366:13"},{"body":{"nodeType":"YulBlock","src":"8973:248:13","statements":[{"nodeType":"YulAssignment","src":"8983:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8995:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9006:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8991:3:13"},"nodeType":"YulFunctionCall","src":"8991:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8983:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9030:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9041:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9026:3:13"},"nodeType":"YulFunctionCall","src":"9026:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9049:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"9055:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9045:3:13"},"nodeType":"YulFunctionCall","src":"9045:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9019:6:13"},"nodeType":"YulFunctionCall","src":"9019:47:13"},"nodeType":"YulExpressionStatement","src":"9019:47:13"},{"nodeType":"YulAssignment","src":"9075:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9209:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9083:124:13"},"nodeType":"YulFunctionCall","src":"9083:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9075:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8953:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8968:4:13","type":""}],"src":"8802:419:13"},{"body":{"nodeType":"YulBlock","src":"9333:114:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9355:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9363:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9351:3:13"},"nodeType":"YulFunctionCall","src":"9351:14:13"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"9367:34:13","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9344:6:13"},"nodeType":"YulFunctionCall","src":"9344:58:13"},"nodeType":"YulExpressionStatement","src":"9344:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9423:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9431:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9419:3:13"},"nodeType":"YulFunctionCall","src":"9419:15:13"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"9436:3:13","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9412:6:13"},"nodeType":"YulFunctionCall","src":"9412:28:13"},"nodeType":"YulExpressionStatement","src":"9412:28:13"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9325:6:13","type":""}],"src":"9227:220:13"},{"body":{"nodeType":"YulBlock","src":"9599:220:13","statements":[{"nodeType":"YulAssignment","src":"9609:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9675:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9680:2:13","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9616:58:13"},"nodeType":"YulFunctionCall","src":"9616:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9609:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9781:3:13"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"9692:88:13"},"nodeType":"YulFunctionCall","src":"9692:93:13"},"nodeType":"YulExpressionStatement","src":"9692:93:13"},{"nodeType":"YulAssignment","src":"9794:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9805:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9810:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9801:3:13"},"nodeType":"YulFunctionCall","src":"9801:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9794:3:13"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9587:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9595:3:13","type":""}],"src":"9453:366:13"},{"body":{"nodeType":"YulBlock","src":"9996:248:13","statements":[{"nodeType":"YulAssignment","src":"10006:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10018:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10029:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10014:3:13"},"nodeType":"YulFunctionCall","src":"10014:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10006:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10053:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10064:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10049:3:13"},"nodeType":"YulFunctionCall","src":"10049:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10072:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"10078:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10068:3:13"},"nodeType":"YulFunctionCall","src":"10068:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10042:6:13"},"nodeType":"YulFunctionCall","src":"10042:47:13"},"nodeType":"YulExpressionStatement","src":"10042:47:13"},{"nodeType":"YulAssignment","src":"10098:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10232:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10106:124:13"},"nodeType":"YulFunctionCall","src":"10106:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10098:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9976:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9991:4:13","type":""}],"src":"9825:419:13"},{"body":{"nodeType":"YulBlock","src":"10356:137:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10378:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10386:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10374:3:13"},"nodeType":"YulFunctionCall","src":"10374:14:13"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77","kind":"string","nodeType":"YulLiteral","src":"10390:34:13","type":"","value":"ERC721: approve caller is not ow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10367:6:13"},"nodeType":"YulFunctionCall","src":"10367:58:13"},"nodeType":"YulExpressionStatement","src":"10367:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10446:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10454:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10442:3:13"},"nodeType":"YulFunctionCall","src":"10442:15:13"},{"hexValue":"6e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"10459:26:13","type":"","value":"ner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10435:6:13"},"nodeType":"YulFunctionCall","src":"10435:51:13"},"nodeType":"YulExpressionStatement","src":"10435:51:13"}]},"name":"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10348:6:13","type":""}],"src":"10250:243:13"},{"body":{"nodeType":"YulBlock","src":"10645:220:13","statements":[{"nodeType":"YulAssignment","src":"10655:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10721:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"10726:2:13","type":"","value":"56"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10662:58:13"},"nodeType":"YulFunctionCall","src":"10662:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10655:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10827:3:13"}],"functionName":{"name":"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","nodeType":"YulIdentifier","src":"10738:88:13"},"nodeType":"YulFunctionCall","src":"10738:93:13"},"nodeType":"YulExpressionStatement","src":"10738:93:13"},{"nodeType":"YulAssignment","src":"10840:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10851:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"10856:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10847:3:13"},"nodeType":"YulFunctionCall","src":"10847:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10840:3:13"}]}]},"name":"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10633:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10641:3:13","type":""}],"src":"10499:366:13"},{"body":{"nodeType":"YulBlock","src":"11042:248:13","statements":[{"nodeType":"YulAssignment","src":"11052:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11064:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11075:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11060:3:13"},"nodeType":"YulFunctionCall","src":"11060:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11052:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11099:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11110:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11095:3:13"},"nodeType":"YulFunctionCall","src":"11095:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11118:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"11124:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11114:3:13"},"nodeType":"YulFunctionCall","src":"11114:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11088:6:13"},"nodeType":"YulFunctionCall","src":"11088:47:13"},"nodeType":"YulExpressionStatement","src":"11088:47:13"},{"nodeType":"YulAssignment","src":"11144:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11278:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11152:124:13"},"nodeType":"YulFunctionCall","src":"11152:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11144:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11022:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11037:4:13","type":""}],"src":"10871:419:13"},{"body":{"nodeType":"YulBlock","src":"11402:122:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11424:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11432:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11420:3:13"},"nodeType":"YulFunctionCall","src":"11420:14:13"},{"hexValue":"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374","kind":"string","nodeType":"YulLiteral","src":"11436:34:13","type":"","value":"ERC721: owner query for nonexist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11413:6:13"},"nodeType":"YulFunctionCall","src":"11413:58:13"},"nodeType":"YulExpressionStatement","src":"11413:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11492:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11500:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11488:3:13"},"nodeType":"YulFunctionCall","src":"11488:15:13"},{"hexValue":"656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"11505:11:13","type":"","value":"ent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11481:6:13"},"nodeType":"YulFunctionCall","src":"11481:36:13"},"nodeType":"YulExpressionStatement","src":"11481:36:13"}]},"name":"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11394:6:13","type":""}],"src":"11296:228:13"},{"body":{"nodeType":"YulBlock","src":"11676:220:13","statements":[{"nodeType":"YulAssignment","src":"11686:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11752:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11757:2:13","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11693:58:13"},"nodeType":"YulFunctionCall","src":"11693:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11686:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11858:3:13"}],"functionName":{"name":"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","nodeType":"YulIdentifier","src":"11769:88:13"},"nodeType":"YulFunctionCall","src":"11769:93:13"},"nodeType":"YulExpressionStatement","src":"11769:93:13"},{"nodeType":"YulAssignment","src":"11871:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11882:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11887:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11878:3:13"},"nodeType":"YulFunctionCall","src":"11878:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11871:3:13"}]}]},"name":"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11664:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11672:3:13","type":""}],"src":"11530:366:13"},{"body":{"nodeType":"YulBlock","src":"12073:248:13","statements":[{"nodeType":"YulAssignment","src":"12083:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12095:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12106:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12091:3:13"},"nodeType":"YulFunctionCall","src":"12091:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12083:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12130:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12141:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12126:3:13"},"nodeType":"YulFunctionCall","src":"12126:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12149:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"12155:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12145:3:13"},"nodeType":"YulFunctionCall","src":"12145:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12119:6:13"},"nodeType":"YulFunctionCall","src":"12119:47:13"},"nodeType":"YulExpressionStatement","src":"12119:47:13"},{"nodeType":"YulAssignment","src":"12175:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12309:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12183:124:13"},"nodeType":"YulFunctionCall","src":"12183:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12175:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12053:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12068:4:13","type":""}],"src":"11902:419:13"},{"body":{"nodeType":"YulBlock","src":"12433:123:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12455:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"12463:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12451:3:13"},"nodeType":"YulFunctionCall","src":"12451:14:13"},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65","kind":"string","nodeType":"YulLiteral","src":"12467:34:13","type":"","value":"ERC721: balance query for the ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12444:6:13"},"nodeType":"YulFunctionCall","src":"12444:58:13"},"nodeType":"YulExpressionStatement","src":"12444:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12523:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"12531:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12519:3:13"},"nodeType":"YulFunctionCall","src":"12519:15:13"},{"hexValue":"726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"12536:12:13","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12512:6:13"},"nodeType":"YulFunctionCall","src":"12512:37:13"},"nodeType":"YulExpressionStatement","src":"12512:37:13"}]},"name":"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12425:6:13","type":""}],"src":"12327:229:13"},{"body":{"nodeType":"YulBlock","src":"12708:220:13","statements":[{"nodeType":"YulAssignment","src":"12718:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12784:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"12789:2:13","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12725:58:13"},"nodeType":"YulFunctionCall","src":"12725:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12718:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12890:3:13"}],"functionName":{"name":"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","nodeType":"YulIdentifier","src":"12801:88:13"},"nodeType":"YulFunctionCall","src":"12801:93:13"},"nodeType":"YulExpressionStatement","src":"12801:93:13"},{"nodeType":"YulAssignment","src":"12903:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12914:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"12919:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12910:3:13"},"nodeType":"YulFunctionCall","src":"12910:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12903:3:13"}]}]},"name":"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12696:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12704:3:13","type":""}],"src":"12562:366:13"},{"body":{"nodeType":"YulBlock","src":"13105:248:13","statements":[{"nodeType":"YulAssignment","src":"13115:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13127:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13138:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13123:3:13"},"nodeType":"YulFunctionCall","src":"13123:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13115:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13162:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13173:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13158:3:13"},"nodeType":"YulFunctionCall","src":"13158:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13181:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"13187:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13177:3:13"},"nodeType":"YulFunctionCall","src":"13177:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13151:6:13"},"nodeType":"YulFunctionCall","src":"13151:47:13"},"nodeType":"YulExpressionStatement","src":"13151:47:13"},{"nodeType":"YulAssignment","src":"13207:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13341:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13215:124:13"},"nodeType":"YulFunctionCall","src":"13215:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13207:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13085:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13100:4:13","type":""}],"src":"12934:419:13"},{"body":{"nodeType":"YulBlock","src":"13485:206:13","statements":[{"nodeType":"YulAssignment","src":"13495:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13507:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13518:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13503:3:13"},"nodeType":"YulFunctionCall","src":"13503:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13495:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13575:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13588:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13599:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13584:3:13"},"nodeType":"YulFunctionCall","src":"13584:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13531:43:13"},"nodeType":"YulFunctionCall","src":"13531:71:13"},"nodeType":"YulExpressionStatement","src":"13531:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13656:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13669:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13680:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13665:3:13"},"nodeType":"YulFunctionCall","src":"13665:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13612:43:13"},"nodeType":"YulFunctionCall","src":"13612:72:13"},"nodeType":"YulExpressionStatement","src":"13612:72:13"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13449:9:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13461:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13469:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13480:4:13","type":""}],"src":"13359:332:13"},{"body":{"nodeType":"YulBlock","src":"13803:130:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13825:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"13833:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13821:3:13"},"nodeType":"YulFunctionCall","src":"13821:14:13"},{"hexValue":"45524337323155524953746f726167653a2055524920717565727920666f7220","kind":"string","nodeType":"YulLiteral","src":"13837:34:13","type":"","value":"ERC721URIStorage: URI query for "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13814:6:13"},"nodeType":"YulFunctionCall","src":"13814:58:13"},"nodeType":"YulExpressionStatement","src":"13814:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13893:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"13901:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13889:3:13"},"nodeType":"YulFunctionCall","src":"13889:15:13"},{"hexValue":"6e6f6e6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"13906:19:13","type":"","value":"nonexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13882:6:13"},"nodeType":"YulFunctionCall","src":"13882:44:13"},"nodeType":"YulExpressionStatement","src":"13882:44:13"}]},"name":"store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13795:6:13","type":""}],"src":"13697:236:13"},{"body":{"nodeType":"YulBlock","src":"14085:220:13","statements":[{"nodeType":"YulAssignment","src":"14095:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14161:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14166:2:13","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14102:58:13"},"nodeType":"YulFunctionCall","src":"14102:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14095:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14267:3:13"}],"functionName":{"name":"store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a","nodeType":"YulIdentifier","src":"14178:88:13"},"nodeType":"YulFunctionCall","src":"14178:93:13"},"nodeType":"YulExpressionStatement","src":"14178:93:13"},{"nodeType":"YulAssignment","src":"14280:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14291:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14296:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14287:3:13"},"nodeType":"YulFunctionCall","src":"14287:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14280:3:13"}]}]},"name":"abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14073:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14081:3:13","type":""}],"src":"13939:366:13"},{"body":{"nodeType":"YulBlock","src":"14482:248:13","statements":[{"nodeType":"YulAssignment","src":"14492:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14504:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14515:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14500:3:13"},"nodeType":"YulFunctionCall","src":"14500:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14492:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14539:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"14550:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14535:3:13"},"nodeType":"YulFunctionCall","src":"14535:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14558:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"14564:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14554:3:13"},"nodeType":"YulFunctionCall","src":"14554:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14528:6:13"},"nodeType":"YulFunctionCall","src":"14528:47:13"},"nodeType":"YulExpressionStatement","src":"14528:47:13"},{"nodeType":"YulAssignment","src":"14584:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14718:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14592:124:13"},"nodeType":"YulFunctionCall","src":"14592:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14584:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14462:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14477:4:13","type":""}],"src":"14311:419:13"},{"body":{"nodeType":"YulBlock","src":"14850:34:13","statements":[{"nodeType":"YulAssignment","src":"14860:18:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"14875:3:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14860:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14822:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"14827:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14838:11:13","type":""}],"src":"14736:148:13"},{"body":{"nodeType":"YulBlock","src":"15000:267:13","statements":[{"nodeType":"YulVariableDeclaration","src":"15010:53:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15057:5:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15024:32:13"},"nodeType":"YulFunctionCall","src":"15024:39:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15014:6:13","type":""}]},{"nodeType":"YulAssignment","src":"15072:96:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15156:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"15161:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15079:76:13"},"nodeType":"YulFunctionCall","src":"15079:89:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15072:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15203:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"15210:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15199:3:13"},"nodeType":"YulFunctionCall","src":"15199:16:13"},{"name":"pos","nodeType":"YulIdentifier","src":"15217:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"15222:6:13"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"15177:21:13"},"nodeType":"YulFunctionCall","src":"15177:52:13"},"nodeType":"YulExpressionStatement","src":"15177:52:13"},{"nodeType":"YulAssignment","src":"15238:23:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15249:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"15254:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15245:3:13"},"nodeType":"YulFunctionCall","src":"15245:16:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15238:3:13"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14981:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14988:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14996:3:13","type":""}],"src":"14890:377:13"},{"body":{"nodeType":"YulBlock","src":"15457:251:13","statements":[{"nodeType":"YulAssignment","src":"15468:102:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15557:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"15566:3:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15475:81:13"},"nodeType":"YulFunctionCall","src":"15475:95:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15468:3:13"}]},{"nodeType":"YulAssignment","src":"15580:102:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15669:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"15678:3:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"15587:81:13"},"nodeType":"YulFunctionCall","src":"15587:95:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15580:3:13"}]},{"nodeType":"YulAssignment","src":"15692:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"15699:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15692:3:13"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15428:3:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15434:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15442:6:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15453:3:13","type":""}],"src":"15273:435:13"},{"body":{"nodeType":"YulBlock","src":"15820:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15842:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"15850:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15838:3:13"},"nodeType":"YulFunctionCall","src":"15838:14:13"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"15854:34:13","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15831:6:13"},"nodeType":"YulFunctionCall","src":"15831:58:13"},"nodeType":"YulExpressionStatement","src":"15831:58:13"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15812:6:13","type":""}],"src":"15714:182:13"},{"body":{"nodeType":"YulBlock","src":"16048:220:13","statements":[{"nodeType":"YulAssignment","src":"16058:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16124:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"16129:2:13","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16065:58:13"},"nodeType":"YulFunctionCall","src":"16065:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16058:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16230:3:13"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"16141:88:13"},"nodeType":"YulFunctionCall","src":"16141:93:13"},"nodeType":"YulExpressionStatement","src":"16141:93:13"},{"nodeType":"YulAssignment","src":"16243:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16254:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"16259:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16250:3:13"},"nodeType":"YulFunctionCall","src":"16250:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16243:3:13"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16036:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16044:3:13","type":""}],"src":"15902:366:13"},{"body":{"nodeType":"YulBlock","src":"16445:248:13","statements":[{"nodeType":"YulAssignment","src":"16455:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16467:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16478:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16463:3:13"},"nodeType":"YulFunctionCall","src":"16463:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16455:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16502:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16513:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16498:3:13"},"nodeType":"YulFunctionCall","src":"16498:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16521:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"16527:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16517:3:13"},"nodeType":"YulFunctionCall","src":"16517:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16491:6:13"},"nodeType":"YulFunctionCall","src":"16491:47:13"},"nodeType":"YulExpressionStatement","src":"16491:47:13"},{"nodeType":"YulAssignment","src":"16547:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16681:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16555:124:13"},"nodeType":"YulFunctionCall","src":"16555:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16547:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16425:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16440:4:13","type":""}],"src":"16274:419:13"},{"body":{"nodeType":"YulBlock","src":"16805:72:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16827:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"16835:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16823:3:13"},"nodeType":"YulFunctionCall","src":"16823:14:13"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"16839:30:13","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16816:6:13"},"nodeType":"YulFunctionCall","src":"16816:54:13"},"nodeType":"YulExpressionStatement","src":"16816:54:13"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16797:6:13","type":""}],"src":"16699:178:13"},{"body":{"nodeType":"YulBlock","src":"17029:220:13","statements":[{"nodeType":"YulAssignment","src":"17039:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17105:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"17110:2:13","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17046:58:13"},"nodeType":"YulFunctionCall","src":"17046:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17039:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17211:3:13"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"17122:88:13"},"nodeType":"YulFunctionCall","src":"17122:93:13"},"nodeType":"YulExpressionStatement","src":"17122:93:13"},{"nodeType":"YulAssignment","src":"17224:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17235:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"17240:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17231:3:13"},"nodeType":"YulFunctionCall","src":"17231:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17224:3:13"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17017:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17025:3:13","type":""}],"src":"16883:366:13"},{"body":{"nodeType":"YulBlock","src":"17426:248:13","statements":[{"nodeType":"YulAssignment","src":"17436:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17448:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17459:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17444:3:13"},"nodeType":"YulFunctionCall","src":"17444:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17436:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17483:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17494:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17479:3:13"},"nodeType":"YulFunctionCall","src":"17479:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17502:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"17508:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17498:3:13"},"nodeType":"YulFunctionCall","src":"17498:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17472:6:13"},"nodeType":"YulFunctionCall","src":"17472:47:13"},"nodeType":"YulExpressionStatement","src":"17472:47:13"},{"nodeType":"YulAssignment","src":"17528:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17662:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17536:124:13"},"nodeType":"YulFunctionCall","src":"17536:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17528:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17406:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17421:4:13","type":""}],"src":"17255:419:13"},{"body":{"nodeType":"YulBlock","src":"17708:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17725:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17728:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17718:6:13"},"nodeType":"YulFunctionCall","src":"17718:88:13"},"nodeType":"YulExpressionStatement","src":"17718:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17822:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17825:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17815:6:13"},"nodeType":"YulFunctionCall","src":"17815:15:13"},"nodeType":"YulExpressionStatement","src":"17815:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17846:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17849:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17839:6:13"},"nodeType":"YulFunctionCall","src":"17839:15:13"},"nodeType":"YulExpressionStatement","src":"17839:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"17680:180:13"},{"body":{"nodeType":"YulBlock","src":"17910:261:13","statements":[{"nodeType":"YulAssignment","src":"17920:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17943:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17925:17:13"},"nodeType":"YulFunctionCall","src":"17925:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17920:1:13"}]},{"nodeType":"YulAssignment","src":"17954:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17977:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17959:17:13"},"nodeType":"YulFunctionCall","src":"17959:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17954:1:13"}]},{"body":{"nodeType":"YulBlock","src":"18117:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18119:16:13"},"nodeType":"YulFunctionCall","src":"18119:18:13"},"nodeType":"YulExpressionStatement","src":"18119:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18038:1:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18045:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"18113:1:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18041:3:13"},"nodeType":"YulFunctionCall","src":"18041:74:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18035:2:13"},"nodeType":"YulFunctionCall","src":"18035:81:13"},"nodeType":"YulIf","src":"18032:107:13"},{"nodeType":"YulAssignment","src":"18149:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18160:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"18163:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18156:3:13"},"nodeType":"YulFunctionCall","src":"18156:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18149:3:13"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17897:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"17900:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17906:3:13","type":""}],"src":"17866:305:13"},{"body":{"nodeType":"YulBlock","src":"18283:49:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18305:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"18313:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18301:3:13"},"nodeType":"YulFunctionCall","src":"18301:14:13"},{"hexValue":"7b","kind":"string","nodeType":"YulLiteral","src":"18317:3:13","type":"","value":"{"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18294:6:13"},"nodeType":"YulFunctionCall","src":"18294:27:13"},"nodeType":"YulExpressionStatement","src":"18294:27:13"}]},"name":"store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18275:6:13","type":""}],"src":"18177:155:13"},{"body":{"nodeType":"YulBlock","src":"18506:252:13","statements":[{"nodeType":"YulAssignment","src":"18520:91:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18604:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18609:1:13","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18527:76:13"},"nodeType":"YulFunctionCall","src":"18527:84:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18520:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18713:3:13"}],"functionName":{"name":"store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52","nodeType":"YulIdentifier","src":"18624:88:13"},"nodeType":"YulFunctionCall","src":"18624:93:13"},"nodeType":"YulExpressionStatement","src":"18624:93:13"},{"nodeType":"YulAssignment","src":"18730:18:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18741:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18746:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18737:3:13"},"nodeType":"YulFunctionCall","src":"18737:11:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18730:3:13"}]}]},"name":"abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18494:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18502:3:13","type":""}],"src":"18342:416:13"},{"body":{"nodeType":"YulBlock","src":"18874:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18900:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"18908:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18896:3:13"},"nodeType":"YulFunctionCall","src":"18896:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"18912:66:13","type":"","value":"0x226e616d65223a20220000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18889:6:13"},"nodeType":"YulFunctionCall","src":"18889:90:13"},"nodeType":"YulExpressionStatement","src":"18889:90:13"}]},"name":"store_literal_in_memory_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18866:6:13","type":""}],"src":"18768:222:13"},{"body":{"nodeType":"YulBlock","src":"19164:252:13","statements":[{"nodeType":"YulAssignment","src":"19178:91:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19262:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"19267:1:13","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19185:76:13"},"nodeType":"YulFunctionCall","src":"19185:84:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19178:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19371:3:13"}],"functionName":{"name":"store_literal_in_memory_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37","nodeType":"YulIdentifier","src":"19282:88:13"},"nodeType":"YulFunctionCall","src":"19282:93:13"},"nodeType":"YulExpressionStatement","src":"19282:93:13"},{"nodeType":"YulAssignment","src":"19388:18:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19399:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"19404:1:13","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19395:3:13"},"nodeType":"YulFunctionCall","src":"19395:11:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19388:3:13"}]}]},"name":"abi_encode_t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19152:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19160:3:13","type":""}],"src":"19000:416:13"},{"body":{"nodeType":"YulBlock","src":"19480:103:13","statements":[{"nodeType":"YulAssignment","src":"19494:11:13","value":{"name":"ptr","nodeType":"YulIdentifier","src":"19502:3:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"19494:4:13"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19526:1:13","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"19529:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19519:6:13"},"nodeType":"YulFunctionCall","src":"19519:14:13"},"nodeType":"YulExpressionStatement","src":"19519:14:13"},{"nodeType":"YulAssignment","src":"19546:26:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19564:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19567:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"19554:9:13"},"nodeType":"YulFunctionCall","src":"19554:18:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"19546:4:13"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"19467:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"19475:4:13","type":""}],"src":"19426:157:13"},{"body":{"nodeType":"YulBlock","src":"19728:818:13","statements":[{"nodeType":"YulVariableDeclaration","src":"19742:29:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19765:5:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19759:5:13"},"nodeType":"YulFunctionCall","src":"19759:12:13"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"19746:9:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19784:50:13","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"19824:9:13"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"19798:25:13"},"nodeType":"YulFunctionCall","src":"19798:36:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19788:6:13","type":""}]},{"nodeType":"YulAssignment","src":"19847:96:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19931:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"19936:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19854:76:13"},"nodeType":"YulFunctionCall","src":"19854:89:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19847:3:13"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"20000:146:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20061:3:13"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"20070:9:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20085:4:13","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20081:3:13"},"nodeType":"YulFunctionCall","src":"20081:9:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20066:3:13"},"nodeType":"YulFunctionCall","src":"20066:25:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20054:6:13"},"nodeType":"YulFunctionCall","src":"20054:38:13"},"nodeType":"YulExpressionStatement","src":"20054:38:13"},{"nodeType":"YulAssignment","src":"20109:23:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20120:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"20125:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20116:3:13"},"nodeType":"YulFunctionCall","src":"20116:16:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20109:3:13"}]}]},"nodeType":"YulCase","src":"19993:153:13","value":{"kind":"number","nodeType":"YulLiteral","src":"19998:1:13","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"20166:370:13","statements":[{"nodeType":"YulVariableDeclaration","src":"20219:53:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20266:5:13"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"20234:31:13"},"nodeType":"YulFunctionCall","src":"20234:38:13"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"20223:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20289:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"20298:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"20293:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"20360:122:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20393:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"20398:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20389:3:13"},"nodeType":"YulFunctionCall","src":"20389:11:13"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"20408:7:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"20402:5:13"},"nodeType":"YulFunctionCall","src":"20402:14:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20382:6:13"},"nodeType":"YulFunctionCall","src":"20382:35:13"},"nodeType":"YulExpressionStatement","src":"20382:35:13"},{"nodeType":"YulAssignment","src":"20438:26:13","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"20453:7:13"},{"kind":"number","nodeType":"YulLiteral","src":"20462:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20449:3:13"},"nodeType":"YulFunctionCall","src":"20449:15:13"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"20438:7:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20327:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"20330:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"20324:2:13"},"nodeType":"YulFunctionCall","src":"20324:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20338:21:13","statements":[{"nodeType":"YulAssignment","src":"20340:17:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20349:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"20352:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20345:3:13"},"nodeType":"YulFunctionCall","src":"20345:12:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20340:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"20320:3:13","statements":[]},"src":"20316:166:13"},{"nodeType":"YulAssignment","src":"20499:23:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20510:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"20515:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20506:3:13"},"nodeType":"YulFunctionCall","src":"20506:16:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20499:3:13"}]}]},"nodeType":"YulCase","src":"20159:377:13","value":{"kind":"number","nodeType":"YulLiteral","src":"20164:1:13","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"19967:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19978:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19963:3:13"},"nodeType":"YulFunctionCall","src":"19963:17:13"},"nodeType":"YulSwitch","src":"19956:580:13"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19709:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19716:3:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19724:3:13","type":""}],"src":"19621:925:13"},{"body":{"nodeType":"YulBlock","src":"20662:61:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20688:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"20696:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20684:3:13"},"nodeType":"YulFunctionCall","src":"20684:14:13"},{"hexValue":"204465677265652023","kind":"string","nodeType":"YulLiteral","src":"20700:11:13","type":"","value":" Degree #"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20677:6:13"},"nodeType":"YulFunctionCall","src":"20677:35:13"},"nodeType":"YulExpressionStatement","src":"20677:35:13"}]},"name":"store_literal_in_memory_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20654:6:13","type":""}],"src":"20556:167:13"},{"body":{"nodeType":"YulBlock","src":"20897:252:13","statements":[{"nodeType":"YulAssignment","src":"20911:91:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20995:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"21000:1:13","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20918:76:13"},"nodeType":"YulFunctionCall","src":"20918:84:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20911:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21104:3:13"}],"functionName":{"name":"store_literal_in_memory_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f","nodeType":"YulIdentifier","src":"21015:88:13"},"nodeType":"YulFunctionCall","src":"21015:93:13"},"nodeType":"YulExpressionStatement","src":"21015:93:13"},{"nodeType":"YulAssignment","src":"21121:18:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21132:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"21137:1:13","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21128:3:13"},"nodeType":"YulFunctionCall","src":"21128:11:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21121:3:13"}]}]},"name":"abi_encode_t_stringliteral_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20885:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20893:3:13","type":""}],"src":"20733:416:13"},{"body":{"nodeType":"YulBlock","src":"21265:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21291:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"21299:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21287:3:13"},"nodeType":"YulFunctionCall","src":"21287:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"21303:66:13","type":"","value":"0x222c000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21280:6:13"},"nodeType":"YulFunctionCall","src":"21280:90:13"},"nodeType":"YulExpressionStatement","src":"21280:90:13"}]},"name":"store_literal_in_memory_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21257:6:13","type":""}],"src":"21159:222:13"},{"body":{"nodeType":"YulBlock","src":"21555:252:13","statements":[{"nodeType":"YulAssignment","src":"21569:91:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21653:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"21658:1:13","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21576:76:13"},"nodeType":"YulFunctionCall","src":"21576:84:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21569:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21762:3:13"}],"functionName":{"name":"store_literal_in_memory_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","nodeType":"YulIdentifier","src":"21673:88:13"},"nodeType":"YulFunctionCall","src":"21673:93:13"},"nodeType":"YulExpressionStatement","src":"21673:93:13"},{"nodeType":"YulAssignment","src":"21779:18:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21790:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"21795:1:13","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21786:3:13"},"nodeType":"YulFunctionCall","src":"21786:11:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21779:3:13"}]}]},"name":"abi_encode_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21543:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21551:3:13","type":""}],"src":"21391:416:13"},{"body":{"nodeType":"YulBlock","src":"21923:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21949:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"21957:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21945:3:13"},"nodeType":"YulFunctionCall","src":"21945:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"21961:66:13","type":"","value":"0x22696d616765223a202200000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21938:6:13"},"nodeType":"YulFunctionCall","src":"21938:90:13"},"nodeType":"YulExpressionStatement","src":"21938:90:13"}]},"name":"store_literal_in_memory_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21915:6:13","type":""}],"src":"21817:222:13"},{"body":{"nodeType":"YulBlock","src":"22213:254:13","statements":[{"nodeType":"YulAssignment","src":"22227:92:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22311:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"22316:2:13","type":"","value":"10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22234:76:13"},"nodeType":"YulFunctionCall","src":"22234:85:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22227:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22421:3:13"}],"functionName":{"name":"store_literal_in_memory_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6","nodeType":"YulIdentifier","src":"22332:88:13"},"nodeType":"YulFunctionCall","src":"22332:93:13"},"nodeType":"YulExpressionStatement","src":"22332:93:13"},{"nodeType":"YulAssignment","src":"22438:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22449:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"22454:2:13","type":"","value":"10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22445:3:13"},"nodeType":"YulFunctionCall","src":"22445:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22438:3:13"}]}]},"name":"abi_encode_t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22201:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22209:3:13","type":""}],"src":"22049:418:13"},{"body":{"nodeType":"YulBlock","src":"22583:441:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22609:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"22617:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22605:3:13"},"nodeType":"YulFunctionCall","src":"22605:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"22621:66:13","type":"","value":"0x226465736372697074696f6e223a2022416e20617761726420636f6e66657272"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22598:6:13"},"nodeType":"YulFunctionCall","src":"22598:90:13"},"nodeType":"YulExpressionStatement","src":"22598:90:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22713:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"22721:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22709:3:13"},"nodeType":"YulFunctionCall","src":"22709:15:13"},{"hexValue":"6564206279206120636f6c6c656765206f7220756e6976657273697479207369","kind":"string","nodeType":"YulLiteral","src":"22726:34:13","type":"","value":"ed by a college or university si"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22702:6:13"},"nodeType":"YulFunctionCall","src":"22702:59:13"},"nodeType":"YulExpressionStatement","src":"22702:59:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22786:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"22794:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22782:3:13"},"nodeType":"YulFunctionCall","src":"22782:15:13"},{"hexValue":"676e696679696e6720746861742074686520726563697069656e742068617320","kind":"string","nodeType":"YulLiteral","src":"22799:34:13","type":"","value":"gnifying that the recipient has "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22775:6:13"},"nodeType":"YulFunctionCall","src":"22775:59:13"},"nodeType":"YulExpressionStatement","src":"22775:59:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22859:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"22867:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22855:3:13"},"nodeType":"YulFunctionCall","src":"22855:15:13"},{"hexValue":"7361746973666163746f72696c7920636f6d706c65746564206120636f757273","kind":"string","nodeType":"YulLiteral","src":"22872:34:13","type":"","value":"satisfactorily completed a cours"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22848:6:13"},"nodeType":"YulFunctionCall","src":"22848:59:13"},"nodeType":"YulExpressionStatement","src":"22848:59:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22932:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"22940:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22928:3:13"},"nodeType":"YulFunctionCall","src":"22928:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"22946:66:13","type":"","value":"0x65206f66207374756479222c0000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22921:6:13"},"nodeType":"YulFunctionCall","src":"22921:92:13"},"nodeType":"YulExpressionStatement","src":"22921:92:13"}]},"name":"store_literal_in_memory_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22575:6:13","type":""}],"src":"22477:547:13"},{"body":{"nodeType":"YulBlock","src":"23198:256:13","statements":[{"nodeType":"YulAssignment","src":"23212:93:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23296:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"23301:3:13","type":"","value":"140"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23219:76:13"},"nodeType":"YulFunctionCall","src":"23219:86:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23212:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23407:3:13"}],"functionName":{"name":"store_literal_in_memory_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428","nodeType":"YulIdentifier","src":"23318:88:13"},"nodeType":"YulFunctionCall","src":"23318:93:13"},"nodeType":"YulExpressionStatement","src":"23318:93:13"},{"nodeType":"YulAssignment","src":"23424:20:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23435:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"23440:3:13","type":"","value":"140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23431:3:13"},"nodeType":"YulFunctionCall","src":"23431:13:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23424:3:13"}]}]},"name":"abi_encode_t_stringliteral_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23186:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23194:3:13","type":""}],"src":"23034:420:13"},{"body":{"nodeType":"YulBlock","src":"23570:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23596:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"23604:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23592:3:13"},"nodeType":"YulFunctionCall","src":"23592:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"23608:66:13","type":"","value":"0x2261747472696275746573223a205b0000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23585:6:13"},"nodeType":"YulFunctionCall","src":"23585:90:13"},"nodeType":"YulExpressionStatement","src":"23585:90:13"}]},"name":"store_literal_in_memory_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23562:6:13","type":""}],"src":"23464:222:13"},{"body":{"nodeType":"YulBlock","src":"23860:254:13","statements":[{"nodeType":"YulAssignment","src":"23874:92:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23958:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"23963:2:13","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23881:76:13"},"nodeType":"YulFunctionCall","src":"23881:85:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23874:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24068:3:13"}],"functionName":{"name":"store_literal_in_memory_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c","nodeType":"YulIdentifier","src":"23979:88:13"},"nodeType":"YulFunctionCall","src":"23979:93:13"},"nodeType":"YulExpressionStatement","src":"23979:93:13"},{"nodeType":"YulAssignment","src":"24085:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24096:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"24101:2:13","type":"","value":"15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24092:3:13"},"nodeType":"YulFunctionCall","src":"24092:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24085:3:13"}]}]},"name":"abi_encode_t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23848:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23856:3:13","type":""}],"src":"23696:418:13"},{"body":{"nodeType":"YulBlock","src":"24230:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24256:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"24264:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24252:3:13"},"nodeType":"YulFunctionCall","src":"24252:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"24268:66:13","type":"","value":"0x2274726169742074797065223a202253636f7265222c00000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24245:6:13"},"nodeType":"YulFunctionCall","src":"24245:90:13"},"nodeType":"YulExpressionStatement","src":"24245:90:13"}]},"name":"store_literal_in_memory_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24222:6:13","type":""}],"src":"24124:222:13"},{"body":{"nodeType":"YulBlock","src":"24520:254:13","statements":[{"nodeType":"YulAssignment","src":"24534:92:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24618:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"24623:2:13","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24541:76:13"},"nodeType":"YulFunctionCall","src":"24541:85:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24534:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24728:3:13"}],"functionName":{"name":"store_literal_in_memory_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209","nodeType":"YulIdentifier","src":"24639:88:13"},"nodeType":"YulFunctionCall","src":"24639:93:13"},"nodeType":"YulExpressionStatement","src":"24639:93:13"},{"nodeType":"YulAssignment","src":"24745:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24756:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"24761:2:13","type":"","value":"22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24752:3:13"},"nodeType":"YulFunctionCall","src":"24752:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24745:3:13"}]}]},"name":"abi_encode_t_stringliteral_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24508:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24516:3:13","type":""}],"src":"24356:418:13"},{"body":{"nodeType":"YulBlock","src":"24890:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24916:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"24924:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24912:3:13"},"nodeType":"YulFunctionCall","src":"24912:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"24928:66:13","type":"","value":"0x2276616c7565223a200000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24905:6:13"},"nodeType":"YulFunctionCall","src":"24905:90:13"},"nodeType":"YulExpressionStatement","src":"24905:90:13"}]},"name":"store_literal_in_memory_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24882:6:13","type":""}],"src":"24784:222:13"},{"body":{"nodeType":"YulBlock","src":"25180:252:13","statements":[{"nodeType":"YulAssignment","src":"25194:91:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25278:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"25283:1:13","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25201:76:13"},"nodeType":"YulFunctionCall","src":"25201:84:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25194:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25387:3:13"}],"functionName":{"name":"store_literal_in_memory_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994","nodeType":"YulIdentifier","src":"25298:88:13"},"nodeType":"YulFunctionCall","src":"25298:93:13"},"nodeType":"YulExpressionStatement","src":"25298:93:13"},{"nodeType":"YulAssignment","src":"25404:18:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25415:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"25420:1:13","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25411:3:13"},"nodeType":"YulFunctionCall","src":"25411:11:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25404:3:13"}]}]},"name":"abi_encode_t_stringliteral_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25168:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25176:3:13","type":""}],"src":"25016:416:13"},{"body":{"nodeType":"YulBlock","src":"25548:53:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25574:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"25582:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25570:3:13"},"nodeType":"YulFunctionCall","src":"25570:14:13"},{"hexValue":"2c","kind":"string","nodeType":"YulLiteral","src":"25586:3:13","type":"","value":","}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25563:6:13"},"nodeType":"YulFunctionCall","src":"25563:27:13"},"nodeType":"YulExpressionStatement","src":"25563:27:13"}]},"name":"store_literal_in_memory_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25540:6:13","type":""}],"src":"25442:159:13"},{"body":{"nodeType":"YulBlock","src":"25775:252:13","statements":[{"nodeType":"YulAssignment","src":"25789:91:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25873:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"25878:1:13","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25796:76:13"},"nodeType":"YulFunctionCall","src":"25796:84:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25789:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25982:3:13"}],"functionName":{"name":"store_literal_in_memory_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb","nodeType":"YulIdentifier","src":"25893:88:13"},"nodeType":"YulFunctionCall","src":"25893:93:13"},"nodeType":"YulExpressionStatement","src":"25893:93:13"},{"nodeType":"YulAssignment","src":"25999:18:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26010:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"26015:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26006:3:13"},"nodeType":"YulFunctionCall","src":"26006:11:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25999:3:13"}]}]},"name":"abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25763:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25771:3:13","type":""}],"src":"25611:416:13"},{"body":{"nodeType":"YulBlock","src":"26143:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26169:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"26177:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26165:3:13"},"nodeType":"YulFunctionCall","src":"26165:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"26181:66:13","type":"","value":"0x226d61785f76616c7565223a2000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26158:6:13"},"nodeType":"YulFunctionCall","src":"26158:90:13"},"nodeType":"YulExpressionStatement","src":"26158:90:13"}]},"name":"store_literal_in_memory_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26135:6:13","type":""}],"src":"26037:222:13"},{"body":{"nodeType":"YulBlock","src":"26433:254:13","statements":[{"nodeType":"YulAssignment","src":"26447:92:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26531:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"26536:2:13","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26454:76:13"},"nodeType":"YulFunctionCall","src":"26454:85:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26447:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26641:3:13"}],"functionName":{"name":"store_literal_in_memory_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0","nodeType":"YulIdentifier","src":"26552:88:13"},"nodeType":"YulFunctionCall","src":"26552:93:13"},"nodeType":"YulExpressionStatement","src":"26552:93:13"},{"nodeType":"YulAssignment","src":"26658:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26669:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"26674:2:13","type":"","value":"13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26665:3:13"},"nodeType":"YulFunctionCall","src":"26665:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26658:3:13"}]}]},"name":"abi_encode_t_stringliteral_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26421:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26429:3:13","type":""}],"src":"26269:418:13"},{"body":{"nodeType":"YulBlock","src":"26803:46:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26825:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"26833:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26821:3:13"},"nodeType":"YulFunctionCall","src":"26821:14:13"},{"hexValue":"7d2c","kind":"string","nodeType":"YulLiteral","src":"26837:4:13","type":"","value":"},"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26814:6:13"},"nodeType":"YulFunctionCall","src":"26814:28:13"},"nodeType":"YulExpressionStatement","src":"26814:28:13"}]},"name":"store_literal_in_memory_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26795:6:13","type":""}],"src":"26697:152:13"},{"body":{"nodeType":"YulBlock","src":"27019:236:13","statements":[{"nodeType":"YulAssignment","src":"27029:91:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27113:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"27118:1:13","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27036:76:13"},"nodeType":"YulFunctionCall","src":"27036:84:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27029:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27218:3:13"}],"functionName":{"name":"store_literal_in_memory_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145","nodeType":"YulIdentifier","src":"27129:88:13"},"nodeType":"YulFunctionCall","src":"27129:93:13"},"nodeType":"YulExpressionStatement","src":"27129:93:13"},{"nodeType":"YulAssignment","src":"27231:18:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27242:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"27247:1:13","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27238:3:13"},"nodeType":"YulFunctionCall","src":"27238:11:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27231:3:13"}]}]},"name":"abi_encode_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27007:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27015:3:13","type":""}],"src":"26855:400:13"},{"body":{"nodeType":"YulBlock","src":"27367:108:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27389:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"27397:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27385:3:13"},"nodeType":"YulFunctionCall","src":"27385:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"27401:66:13","type":"","value":"0x2274726169742074797065223a20224d616a6f72222c00000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27378:6:13"},"nodeType":"YulFunctionCall","src":"27378:90:13"},"nodeType":"YulExpressionStatement","src":"27378:90:13"}]},"name":"store_literal_in_memory_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27359:6:13","type":""}],"src":"27261:214:13"},{"body":{"nodeType":"YulBlock","src":"27645:238:13","statements":[{"nodeType":"YulAssignment","src":"27655:92:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27739:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"27744:2:13","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27662:76:13"},"nodeType":"YulFunctionCall","src":"27662:85:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27655:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27845:3:13"}],"functionName":{"name":"store_literal_in_memory_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965","nodeType":"YulIdentifier","src":"27756:88:13"},"nodeType":"YulFunctionCall","src":"27756:93:13"},"nodeType":"YulExpressionStatement","src":"27756:93:13"},{"nodeType":"YulAssignment","src":"27858:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27869:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"27874:2:13","type":"","value":"22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27865:3:13"},"nodeType":"YulFunctionCall","src":"27865:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27858:3:13"}]}]},"name":"abi_encode_t_stringliteral_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27633:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27641:3:13","type":""}],"src":"27481:402:13"},{"body":{"nodeType":"YulBlock","src":"27995:108:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28017:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"28025:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28013:3:13"},"nodeType":"YulFunctionCall","src":"28013:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"28029:66:13","type":"","value":"0x2276616c7565223a202200000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28006:6:13"},"nodeType":"YulFunctionCall","src":"28006:90:13"},"nodeType":"YulExpressionStatement","src":"28006:90:13"}]},"name":"store_literal_in_memory_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27987:6:13","type":""}],"src":"27889:214:13"},{"body":{"nodeType":"YulBlock","src":"28273:238:13","statements":[{"nodeType":"YulAssignment","src":"28283:92:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28367:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"28372:2:13","type":"","value":"10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28290:76:13"},"nodeType":"YulFunctionCall","src":"28290:85:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28283:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28473:3:13"}],"functionName":{"name":"store_literal_in_memory_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7","nodeType":"YulIdentifier","src":"28384:88:13"},"nodeType":"YulFunctionCall","src":"28384:93:13"},"nodeType":"YulExpressionStatement","src":"28384:93:13"},{"nodeType":"YulAssignment","src":"28486:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28497:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"28502:2:13","type":"","value":"10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28493:3:13"},"nodeType":"YulFunctionCall","src":"28493:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28486:3:13"}]}]},"name":"abi_encode_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28261:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28269:3:13","type":""}],"src":"28109:402:13"},{"body":{"nodeType":"YulBlock","src":"28623:108:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28645:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"28653:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28641:3:13"},"nodeType":"YulFunctionCall","src":"28641:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"28657:66:13","type":"","value":"0x2200000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28634:6:13"},"nodeType":"YulFunctionCall","src":"28634:90:13"},"nodeType":"YulExpressionStatement","src":"28634:90:13"}]},"name":"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28615:6:13","type":""}],"src":"28517:214:13"},{"body":{"nodeType":"YulBlock","src":"28901:236:13","statements":[{"nodeType":"YulAssignment","src":"28911:91:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28995:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"29000:1:13","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28918:76:13"},"nodeType":"YulFunctionCall","src":"28918:84:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28911:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29100:3:13"}],"functionName":{"name":"store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","nodeType":"YulIdentifier","src":"29011:88:13"},"nodeType":"YulFunctionCall","src":"29011:93:13"},"nodeType":"YulExpressionStatement","src":"29011:93:13"},{"nodeType":"YulAssignment","src":"29113:18:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29124:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"29129:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29120:3:13"},"nodeType":"YulFunctionCall","src":"29120:11:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29113:3:13"}]}]},"name":"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28889:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28897:3:13","type":""}],"src":"28737:400:13"},{"body":{"nodeType":"YulBlock","src":"29249:108:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29271:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"29279:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29267:3:13"},"nodeType":"YulFunctionCall","src":"29267:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"29283:66:13","type":"","value":"0x2274726169742074797065223a202254797065206f6620646567726565222c00"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29260:6:13"},"nodeType":"YulFunctionCall","src":"29260:90:13"},"nodeType":"YulExpressionStatement","src":"29260:90:13"}]},"name":"store_literal_in_memory_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29241:6:13","type":""}],"src":"29143:214:13"},{"body":{"nodeType":"YulBlock","src":"29527:238:13","statements":[{"nodeType":"YulAssignment","src":"29537:92:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29621:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"29626:2:13","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29544:76:13"},"nodeType":"YulFunctionCall","src":"29544:85:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29537:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29727:3:13"}],"functionName":{"name":"store_literal_in_memory_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04","nodeType":"YulIdentifier","src":"29638:88:13"},"nodeType":"YulFunctionCall","src":"29638:93:13"},"nodeType":"YulExpressionStatement","src":"29638:93:13"},{"nodeType":"YulAssignment","src":"29740:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29751:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"29756:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29747:3:13"},"nodeType":"YulFunctionCall","src":"29747:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29740:3:13"}]}]},"name":"abi_encode_t_stringliteral_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29515:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29523:3:13","type":""}],"src":"29363:402:13"},{"body":{"nodeType":"YulBlock","src":"29877:37:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29895:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"29903:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29891:3:13"},"nodeType":"YulFunctionCall","src":"29891:14:13"},{"hexValue":"7d","kind":"string","nodeType":"YulLiteral","src":"29907:3:13","type":"","value":"}"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29884:6:13"},"nodeType":"YulFunctionCall","src":"29884:27:13"},"nodeType":"YulExpressionStatement","src":"29884:27:13"}]},"name":"store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29869:6:13","type":""}],"src":"29771:143:13"},{"body":{"nodeType":"YulBlock","src":"30080:220:13","statements":[{"nodeType":"YulAssignment","src":"30086:91:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30170:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"30175:1:13","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30093:76:13"},"nodeType":"YulFunctionCall","src":"30093:84:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30086:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30271:3:13"}],"functionName":{"name":"store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","nodeType":"YulIdentifier","src":"30182:88:13"},"nodeType":"YulFunctionCall","src":"30182:93:13"},"nodeType":"YulExpressionStatement","src":"30182:93:13"},{"nodeType":"YulAssignment","src":"30280:18:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30291:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"30296:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30287:3:13"},"nodeType":"YulFunctionCall","src":"30287:11:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30280:3:13"}]}]},"name":"abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30068:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30076:3:13","type":""}],"src":"29916:384:13"},{"body":{"nodeType":"YulBlock","src":"30408:37:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30426:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"30434:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30422:3:13"},"nodeType":"YulFunctionCall","src":"30422:14:13"},{"hexValue":"5d","kind":"string","nodeType":"YulLiteral","src":"30438:3:13","type":"","value":"]"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30415:6:13"},"nodeType":"YulFunctionCall","src":"30415:27:13"},"nodeType":"YulExpressionStatement","src":"30415:27:13"}]},"name":"store_literal_in_memory_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30400:6:13","type":""}],"src":"30302:143:13"},{"body":{"nodeType":"YulBlock","src":"30611:220:13","statements":[{"nodeType":"YulAssignment","src":"30617:91:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30701:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"30706:1:13","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30624:76:13"},"nodeType":"YulFunctionCall","src":"30624:84:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30617:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30802:3:13"}],"functionName":{"name":"store_literal_in_memory_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29","nodeType":"YulIdentifier","src":"30713:88:13"},"nodeType":"YulFunctionCall","src":"30713:93:13"},"nodeType":"YulExpressionStatement","src":"30713:93:13"},{"nodeType":"YulAssignment","src":"30811:18:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30822:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"30827:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30818:3:13"},"nodeType":"YulFunctionCall","src":"30818:11:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30811:3:13"}]}]},"name":"abi_encode_t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30599:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30607:3:13","type":""}],"src":"30447:384:13"},{"body":{"nodeType":"YulBlock","src":"33871:4949:13","statements":[{"nodeType":"YulAssignment","src":"33878:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34029:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"33885:142:13"},"nodeType":"YulFunctionCall","src":"33885:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33878:3:13"}]},{"nodeType":"YulAssignment","src":"34039:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34190:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34046:142:13"},"nodeType":"YulFunctionCall","src":"34046:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34039:3:13"}]},{"nodeType":"YulAssignment","src":"34200:99:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34286:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"34295:3:13"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34207:78:13"},"nodeType":"YulFunctionCall","src":"34207:92:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34200:3:13"}]},{"nodeType":"YulAssignment","src":"34305:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34456:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34312:142:13"},"nodeType":"YulFunctionCall","src":"34312:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34305:3:13"}]},{"nodeType":"YulAssignment","src":"34466:102:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34555:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"34564:3:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34473:81:13"},"nodeType":"YulFunctionCall","src":"34473:95:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34466:3:13"}]},{"nodeType":"YulAssignment","src":"34574:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34725:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34581:142:13"},"nodeType":"YulFunctionCall","src":"34581:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34574:3:13"}]},{"nodeType":"YulAssignment","src":"34735:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34886:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34742:142:13"},"nodeType":"YulFunctionCall","src":"34742:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34735:3:13"}]},{"nodeType":"YulAssignment","src":"34896:99:13","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34982:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"34991:3:13"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34903:78:13"},"nodeType":"YulFunctionCall","src":"34903:92:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34896:3:13"}]},{"nodeType":"YulAssignment","src":"35001:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35152:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35008:142:13"},"nodeType":"YulFunctionCall","src":"35008:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35001:3:13"}]},{"nodeType":"YulAssignment","src":"35162:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35313:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35169:142:13"},"nodeType":"YulFunctionCall","src":"35169:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35162:3:13"}]},{"nodeType":"YulAssignment","src":"35323:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35474:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35330:142:13"},"nodeType":"YulFunctionCall","src":"35330:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35323:3:13"}]},{"nodeType":"YulAssignment","src":"35484:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35635:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35491:142:13"},"nodeType":"YulFunctionCall","src":"35491:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35484:3:13"}]},{"nodeType":"YulAssignment","src":"35645:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35796:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35652:142:13"},"nodeType":"YulFunctionCall","src":"35652:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35645:3:13"}]},{"nodeType":"YulAssignment","src":"35806:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35957:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35813:142:13"},"nodeType":"YulFunctionCall","src":"35813:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35806:3:13"}]},{"nodeType":"YulAssignment","src":"35967:102:13","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"36056:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"36065:3:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35974:81:13"},"nodeType":"YulFunctionCall","src":"35974:95:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35967:3:13"}]},{"nodeType":"YulAssignment","src":"36075:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36226:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36082:142:13"},"nodeType":"YulFunctionCall","src":"36082:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36075:3:13"}]},{"nodeType":"YulAssignment","src":"36236:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36387:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36243:142:13"},"nodeType":"YulFunctionCall","src":"36243:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36236:3:13"}]},{"nodeType":"YulAssignment","src":"36397:102:13","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"36486:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"36495:3:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36404:81:13"},"nodeType":"YulFunctionCall","src":"36404:95:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36397:3:13"}]},{"nodeType":"YulAssignment","src":"36505:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36656:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36512:142:13"},"nodeType":"YulFunctionCall","src":"36512:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36505:3:13"}]},{"nodeType":"YulAssignment","src":"36666:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36817:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36673:142:13"},"nodeType":"YulFunctionCall","src":"36673:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36666:3:13"}]},{"nodeType":"YulAssignment","src":"36827:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36978:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36834:142:13"},"nodeType":"YulFunctionCall","src":"36834:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36827:3:13"}]},{"nodeType":"YulAssignment","src":"36988:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37139:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36995:142:13"},"nodeType":"YulFunctionCall","src":"36995:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36988:3:13"}]},{"nodeType":"YulAssignment","src":"37149:99:13","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"37235:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"37244:3:13"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37156:78:13"},"nodeType":"YulFunctionCall","src":"37156:92:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37149:3:13"}]},{"nodeType":"YulAssignment","src":"37254:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37405:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37261:142:13"},"nodeType":"YulFunctionCall","src":"37261:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37254:3:13"}]},{"nodeType":"YulAssignment","src":"37415:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37566:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37422:142:13"},"nodeType":"YulFunctionCall","src":"37422:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37415:3:13"}]},{"nodeType":"YulAssignment","src":"37576:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37727:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37583:142:13"},"nodeType":"YulFunctionCall","src":"37583:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37576:3:13"}]},{"nodeType":"YulAssignment","src":"37737:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37888:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37744:142:13"},"nodeType":"YulFunctionCall","src":"37744:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37737:3:13"}]},{"nodeType":"YulAssignment","src":"37898:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38049:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37905:142:13"},"nodeType":"YulFunctionCall","src":"37905:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37898:3:13"}]},{"nodeType":"YulAssignment","src":"38059:99:13","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"38145:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"38154:3:13"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38066:78:13"},"nodeType":"YulFunctionCall","src":"38066:92:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38059:3:13"}]},{"nodeType":"YulAssignment","src":"38164:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38315:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38171:142:13"},"nodeType":"YulFunctionCall","src":"38171:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38164:3:13"}]},{"nodeType":"YulAssignment","src":"38325:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38476:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38332:142:13"},"nodeType":"YulFunctionCall","src":"38332:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38325:3:13"}]},{"nodeType":"YulAssignment","src":"38486:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38637:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38493:142:13"},"nodeType":"YulFunctionCall","src":"38493:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38486:3:13"}]},{"nodeType":"YulAssignment","src":"38647:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38798:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38654:142:13"},"nodeType":"YulFunctionCall","src":"38654:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38647:3:13"}]},{"nodeType":"YulAssignment","src":"38808:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"38815:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38808:3:13"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37_t_string_storage_t_stringliteral_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6_t_string_storage_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428_t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209_t_stringliteral_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_stringliteral_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0_t_string_memory_ptr_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_t_string_storage_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_t_string_storage_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33802:3:13","type":""},{"name":"value6","nodeType":"YulTypedName","src":"33808:6:13","type":""},{"name":"value5","nodeType":"YulTypedName","src":"33816:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"33824:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33832:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33840:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33848:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33856:6:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33867:3:13","type":""}],"src":"30833:7987:13"},{"body":{"nodeType":"YulBlock","src":"38928:65:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38946:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"38954:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38942:3:13"},"nodeType":"YulFunctionCall","src":"38942:14:13"},{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","kind":"string","nodeType":"YulLiteral","src":"38958:31:13","type":"","value":"data:application/json;base64,"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38935:6:13"},"nodeType":"YulFunctionCall","src":"38935:55:13"},"nodeType":"YulExpressionStatement","src":"38935:55:13"}]},"name":"store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38920:6:13","type":""}],"src":"38822:171:13"},{"body":{"nodeType":"YulBlock","src":"39159:222:13","statements":[{"nodeType":"YulAssignment","src":"39165:92:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39249:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"39254:2:13","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39172:76:13"},"nodeType":"YulFunctionCall","src":"39172:85:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39165:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39351:3:13"}],"functionName":{"name":"store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","nodeType":"YulIdentifier","src":"39262:88:13"},"nodeType":"YulFunctionCall","src":"39262:93:13"},"nodeType":"YulExpressionStatement","src":"39262:93:13"},{"nodeType":"YulAssignment","src":"39360:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39371:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"39376:2:13","type":"","value":"29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39367:3:13"},"nodeType":"YulFunctionCall","src":"39367:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39360:3:13"}]}]},"name":"abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39147:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39155:3:13","type":""}],"src":"38995:386:13"},{"body":{"nodeType":"YulBlock","src":"39620:288:13","statements":[{"nodeType":"YulAssignment","src":"39627:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39778:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39634:142:13"},"nodeType":"YulFunctionCall","src":"39634:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39627:3:13"}]},{"nodeType":"YulAssignment","src":"39788:102:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39877:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"39886:3:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39795:81:13"},"nodeType":"YulFunctionCall","src":"39795:95:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39788:3:13"}]},{"nodeType":"YulAssignment","src":"39896:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"39903:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39896:3:13"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39599:3:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39605:6:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39616:3:13","type":""}],"src":"39383:525:13"},{"body":{"nodeType":"YulBlock","src":"40016:115:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40034:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"40042:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40030:3:13"},"nodeType":"YulFunctionCall","src":"40030:14:13"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"40046:34:13","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40023:6:13"},"nodeType":"YulFunctionCall","src":"40023:58:13"},"nodeType":"YulExpressionStatement","src":"40023:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40098:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"40106:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40094:3:13"},"nodeType":"YulFunctionCall","src":"40094:15:13"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"40111:16:13","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40087:6:13"},"nodeType":"YulFunctionCall","src":"40087:41:13"},"nodeType":"YulExpressionStatement","src":"40087:41:13"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40008:6:13","type":""}],"src":"39910:221:13"},{"body":{"nodeType":"YulBlock","src":"40279:204:13","statements":[{"nodeType":"YulAssignment","src":"40285:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40351:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"40356:2:13","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40292:58:13"},"nodeType":"YulFunctionCall","src":"40292:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40285:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40453:3:13"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"40364:88:13"},"nodeType":"YulFunctionCall","src":"40364:93:13"},"nodeType":"YulExpressionStatement","src":"40364:93:13"},{"nodeType":"YulAssignment","src":"40462:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40473:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"40478:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40469:3:13"},"nodeType":"YulFunctionCall","src":"40469:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40462:3:13"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40267:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40275:3:13","type":""}],"src":"40133:350:13"},{"body":{"nodeType":"YulBlock","src":"40656:232:13","statements":[{"nodeType":"YulAssignment","src":"40662:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40674:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"40685:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40670:3:13"},"nodeType":"YulFunctionCall","src":"40670:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40662:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40705:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"40716:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40701:3:13"},"nodeType":"YulFunctionCall","src":"40701:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40724:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"40730:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40720:3:13"},"nodeType":"YulFunctionCall","src":"40720:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40694:6:13"},"nodeType":"YulFunctionCall","src":"40694:47:13"},"nodeType":"YulExpressionStatement","src":"40694:47:13"},{"nodeType":"YulAssignment","src":"40746:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40880:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40754:124:13"},"nodeType":"YulFunctionCall","src":"40754:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40746:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40636:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40651:4:13","type":""}],"src":"40485:403:13"},{"body":{"nodeType":"YulBlock","src":"40996:61:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41014:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"41022:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41010:3:13"},"nodeType":"YulFunctionCall","src":"41010:14:13"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"41026:27:13","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41003:6:13"},"nodeType":"YulFunctionCall","src":"41003:51:13"},"nodeType":"YulExpressionStatement","src":"41003:51:13"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40988:6:13","type":""}],"src":"40890:167:13"},{"body":{"nodeType":"YulBlock","src":"41205:204:13","statements":[{"nodeType":"YulAssignment","src":"41211:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41277:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"41282:2:13","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41218:58:13"},"nodeType":"YulFunctionCall","src":"41218:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41211:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41379:3:13"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"41290:88:13"},"nodeType":"YulFunctionCall","src":"41290:93:13"},"nodeType":"YulExpressionStatement","src":"41290:93:13"},{"nodeType":"YulAssignment","src":"41388:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41399:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"41404:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41395:3:13"},"nodeType":"YulFunctionCall","src":"41395:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41388:3:13"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41193:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41201:3:13","type":""}],"src":"41059:350:13"},{"body":{"nodeType":"YulBlock","src":"41582:232:13","statements":[{"nodeType":"YulAssignment","src":"41588:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41600:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"41611:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41596:3:13"},"nodeType":"YulFunctionCall","src":"41596:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41588:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41631:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"41642:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41627:3:13"},"nodeType":"YulFunctionCall","src":"41627:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41650:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"41656:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41646:3:13"},"nodeType":"YulFunctionCall","src":"41646:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41620:6:13"},"nodeType":"YulFunctionCall","src":"41620:47:13"},"nodeType":"YulExpressionStatement","src":"41620:47:13"},{"nodeType":"YulAssignment","src":"41672:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41806:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41680:124:13"},"nodeType":"YulFunctionCall","src":"41680:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41672:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41562:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41577:4:13","type":""}],"src":"41411:403:13"},{"body":{"nodeType":"YulBlock","src":"41922:116:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41940:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"41948:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41936:3:13"},"nodeType":"YulFunctionCall","src":"41936:14:13"},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f","kind":"string","nodeType":"YulLiteral","src":"41952:34:13","type":"","value":"ERC721Metadata: URI query for no"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41929:6:13"},"nodeType":"YulFunctionCall","src":"41929:58:13"},"nodeType":"YulExpressionStatement","src":"41929:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42004:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"42012:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42000:3:13"},"nodeType":"YulFunctionCall","src":"42000:15:13"},{"hexValue":"6e6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"42017:17:13","type":"","value":"nexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41993:6:13"},"nodeType":"YulFunctionCall","src":"41993:42:13"},"nodeType":"YulExpressionStatement","src":"41993:42:13"}]},"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41914:6:13","type":""}],"src":"41816:222:13"},{"body":{"nodeType":"YulBlock","src":"42186:204:13","statements":[{"nodeType":"YulAssignment","src":"42192:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42258:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"42263:2:13","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42199:58:13"},"nodeType":"YulFunctionCall","src":"42199:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42192:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42360:3:13"}],"functionName":{"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nodeType":"YulIdentifier","src":"42271:88:13"},"nodeType":"YulFunctionCall","src":"42271:93:13"},"nodeType":"YulExpressionStatement","src":"42271:93:13"},{"nodeType":"YulAssignment","src":"42369:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42380:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"42385:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42376:3:13"},"nodeType":"YulFunctionCall","src":"42376:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42369:3:13"}]}]},"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42174:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42182:3:13","type":""}],"src":"42040:350:13"},{"body":{"nodeType":"YulBlock","src":"42563:232:13","statements":[{"nodeType":"YulAssignment","src":"42569:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42581:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"42592:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42577:3:13"},"nodeType":"YulFunctionCall","src":"42577:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42569:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42612:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"42623:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42608:3:13"},"nodeType":"YulFunctionCall","src":"42608:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42631:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"42637:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42627:3:13"},"nodeType":"YulFunctionCall","src":"42627:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42601:6:13"},"nodeType":"YulFunctionCall","src":"42601:47:13"},"nodeType":"YulExpressionStatement","src":"42601:47:13"},{"nodeType":"YulAssignment","src":"42653:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42787:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42661:124:13"},"nodeType":"YulFunctionCall","src":"42661:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42653:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42543:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42558:4:13","type":""}],"src":"42392:403:13"},{"body":{"nodeType":"YulBlock","src":"42840:174:13","statements":[{"nodeType":"YulAssignment","src":"42846:33:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42873:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"42855:17:13"},"nodeType":"YulFunctionCall","src":"42855:24:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"42846:5:13"}]},{"body":{"nodeType":"YulBlock","src":"42965:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"42967:16:13"},"nodeType":"YulFunctionCall","src":"42967:18:13"},"nodeType":"YulExpressionStatement","src":"42967:18:13"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"42890:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"42897:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"42887:2:13"},"nodeType":"YulFunctionCall","src":"42887:77:13"},"nodeType":"YulIf","src":"42884:103:13"},{"nodeType":"YulAssignment","src":"42992:20:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43003:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"43010:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42999:3:13"},"nodeType":"YulFunctionCall","src":"42999:13:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"42992:3:13"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"42826:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"42836:3:13","type":""}],"src":"42797:217:13"},{"body":{"nodeType":"YulBlock","src":"43044:136:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43057:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43060:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43050:6:13"},"nodeType":"YulFunctionCall","src":"43050:88:13"},"nodeType":"YulExpressionStatement","src":"43050:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43150:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"43153:4:13","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43143:6:13"},"nodeType":"YulFunctionCall","src":"43143:15:13"},"nodeType":"YulExpressionStatement","src":"43143:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43170:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43173:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43163:6:13"},"nodeType":"YulFunctionCall","src":"43163:15:13"},"nodeType":"YulExpressionStatement","src":"43163:15:13"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"43016:164:13"},{"body":{"nodeType":"YulBlock","src":"43224:123:13","statements":[{"nodeType":"YulAssignment","src":"43230:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43253:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43235:17:13"},"nodeType":"YulFunctionCall","src":"43235:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"43230:1:13"}]},{"nodeType":"YulAssignment","src":"43260:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43283:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43265:17:13"},"nodeType":"YulFunctionCall","src":"43265:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"43260:1:13"}]},{"body":{"nodeType":"YulBlock","src":"43303:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"43305:16:13"},"nodeType":"YulFunctionCall","src":"43305:18:13"},"nodeType":"YulExpressionStatement","src":"43305:18:13"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43300:1:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43293:6:13"},"nodeType":"YulFunctionCall","src":"43293:9:13"},"nodeType":"YulIf","src":"43290:35:13"},{"nodeType":"YulAssignment","src":"43331:14:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43340:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"43343:1:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"43336:3:13"},"nodeType":"YulFunctionCall","src":"43336:9:13"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"43331:1:13"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"43213:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"43216:1:13","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"43222:1:13","type":""}],"src":"43182:165:13"},{"body":{"nodeType":"YulBlock","src":"43377:136:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43390:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43393:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43383:6:13"},"nodeType":"YulFunctionCall","src":"43383:88:13"},"nodeType":"YulExpressionStatement","src":"43383:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43483:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"43486:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43476:6:13"},"nodeType":"YulFunctionCall","src":"43476:15:13"},"nodeType":"YulExpressionStatement","src":"43476:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43503:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43506:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43496:6:13"},"nodeType":"YulFunctionCall","src":"43496:15:13"},"nodeType":"YulExpressionStatement","src":"43496:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"43349:164:13"},{"body":{"nodeType":"YulBlock","src":"43560:126:13","statements":[{"nodeType":"YulAssignment","src":"43566:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43589:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43571:17:13"},"nodeType":"YulFunctionCall","src":"43571:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"43566:1:13"}]},{"nodeType":"YulAssignment","src":"43596:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43619:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43601:17:13"},"nodeType":"YulFunctionCall","src":"43601:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"43596:1:13"}]},{"body":{"nodeType":"YulBlock","src":"43639:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"43641:16:13"},"nodeType":"YulFunctionCall","src":"43641:18:13"},"nodeType":"YulExpressionStatement","src":"43641:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43633:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"43636:1:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43630:2:13"},"nodeType":"YulFunctionCall","src":"43630:8:13"},"nodeType":"YulIf","src":"43627:34:13"},{"nodeType":"YulAssignment","src":"43667:17:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43679:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"43682:1:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43675:3:13"},"nodeType":"YulFunctionCall","src":"43675:9:13"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"43667:4:13"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"43546:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"43549:1:13","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"43555:4:13","type":""}],"src":"43515:171:13"},{"body":{"nodeType":"YulBlock","src":"43722:122:13","statements":[{"nodeType":"YulAssignment","src":"43728:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43751:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43733:17:13"},"nodeType":"YulFunctionCall","src":"43733:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"43728:1:13"}]},{"nodeType":"YulAssignment","src":"43758:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43781:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"43763:17:13"},"nodeType":"YulFunctionCall","src":"43763:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"43758:1:13"}]},{"body":{"nodeType":"YulBlock","src":"43801:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"43803:16:13"},"nodeType":"YulFunctionCall","src":"43803:18:13"},"nodeType":"YulExpressionStatement","src":"43803:18:13"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"43798:1:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"43791:6:13"},"nodeType":"YulFunctionCall","src":"43791:9:13"},"nodeType":"YulIf","src":"43788:35:13"},{"nodeType":"YulAssignment","src":"43828:14:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"43837:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"43840:1:13"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"43833:3:13"},"nodeType":"YulFunctionCall","src":"43833:9:13"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"43828:1:13"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"43711:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"43714:1:13","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"43720:1:13","type":""}],"src":"43688:156:13"},{"body":{"nodeType":"YulBlock","src":"43874:136:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43887:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43890:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43880:6:13"},"nodeType":"YulFunctionCall","src":"43880:88:13"},"nodeType":"YulExpressionStatement","src":"43880:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43980:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"43983:4:13","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43973:6:13"},"nodeType":"YulFunctionCall","src":"43973:15:13"},"nodeType":"YulExpressionStatement","src":"43973:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44000:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"44003:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43993:6:13"},"nodeType":"YulFunctionCall","src":"43993:15:13"},"nodeType":"YulExpressionStatement","src":"43993:15:13"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"43846:164:13"},{"body":{"nodeType":"YulBlock","src":"44060:276:13","statements":[{"nodeType":"YulAssignment","src":"44066:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44089:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44071:17:13"},"nodeType":"YulFunctionCall","src":"44071:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"44066:1:13"}]},{"nodeType":"YulAssignment","src":"44096:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"44119:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"44101:17:13"},"nodeType":"YulFunctionCall","src":"44101:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"44096:1:13"}]},{"body":{"nodeType":"YulBlock","src":"44286:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"44288:16:13"},"nodeType":"YulFunctionCall","src":"44288:18:13"},"nodeType":"YulExpressionStatement","src":"44288:18:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44198:1:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"44191:6:13"},"nodeType":"YulFunctionCall","src":"44191:9:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"44184:6:13"},"nodeType":"YulFunctionCall","src":"44184:17:13"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"44206:1:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"44213:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"44281:1:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"44209:3:13"},"nodeType":"YulFunctionCall","src":"44209:74:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"44203:2:13"},"nodeType":"YulFunctionCall","src":"44203:81:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"44180:3:13"},"nodeType":"YulFunctionCall","src":"44180:105:13"},"nodeType":"YulIf","src":"44177:131:13"},{"nodeType":"YulAssignment","src":"44314:20:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"44329:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"44332:1:13"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"44325:3:13"},"nodeType":"YulFunctionCall","src":"44325:9:13"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"44314:7:13"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"44043:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"44046:1:13","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"44052:7:13","type":""}],"src":"44012:324:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Counters.Counter -> struct Counters.Counter\n    function abi_encode_t_struct$_Counter_$1711_memory_ptr_to_t_struct$_Counter_$1711_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x20)\n\n        {\n            // _value\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Counter_$1711_memory_ptr__to_t_struct$_Counter_$1711_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_struct$_Counter_$1711_memory_ptr_to_t_struct$_Counter_$1711_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approved query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not ow\")\n\n        mstore(add(memPtr, 32), \"ner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: owner query for nonexist\")\n\n        mstore(add(memPtr, 32), \"ent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: balance query for the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI query for \")\n\n        mstore(add(memPtr, 32), \"nonexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52(memPtr) {\n\n        mstore(add(memPtr, 0), \"{\")\n\n        }\n\n        function abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n            store_literal_in_memory_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52(pos)\n            end := add(pos, 1)\n        }\n\n        function store_literal_in_memory_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37(memPtr) {\n\n            mstore(add(memPtr, 0), 0x226e616d65223a20220000000000000000000000000000000000000000000000)\n\n        }\n\n        function abi_encode_t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n            store_literal_in_memory_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37(pos)\n            end := add(pos, 9)\n        }\n\n        function array_dataslot_t_string_storage(ptr) -> data {\n            data := ptr\n\n            mstore(0, ptr)\n            data := keccak256(0, 0x20)\n\n        }\n\n        // string -> string\n        function abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n            let slotValue := sload(value)\n            let length := extract_byte_array_length(slotValue)\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n            switch and(slotValue, 1)\n            case 0 {\n                // short byte array\n                mstore(pos, and(slotValue, not(0xff)))\n                ret := add(pos, length)\n            }\n            case 1 {\n                // long byte array\n                let dataPos := array_dataslot_t_string_storage(value)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) } {\n                    mstore(add(pos, i), sload(dataPos))\n                    dataPos := add(dataPos, 1)\n                }\n                ret := add(pos, length)\n            }\n        }\n\n        function store_literal_in_memory_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f(memPtr) {\n\n            mstore(add(memPtr, 0), \" Degree #\")\n\n        }\n\n        function abi_encode_t_stringliteral_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n            store_literal_in_memory_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f(pos)\n            end := add(pos, 9)\n        }\n\n        function store_literal_in_memory_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb(memPtr) {\n\n            mstore(add(memPtr, 0), 0x222c000000000000000000000000000000000000000000000000000000000000)\n\n        }\n\n        function abi_encode_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n            store_literal_in_memory_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb(pos)\n            end := add(pos, 2)\n        }\n\n        function store_literal_in_memory_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6(memPtr) {\n\n            mstore(add(memPtr, 0), 0x22696d616765223a202200000000000000000000000000000000000000000000)\n\n        }\n\n        function abi_encode_t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 10)\n            store_literal_in_memory_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6(pos)\n            end := add(pos, 10)\n        }\n\n        function store_literal_in_memory_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428(memPtr) {\n\n            mstore(add(memPtr, 0), 0x226465736372697074696f6e223a2022416e20617761726420636f6e66657272)\n\n            mstore(add(memPtr, 32), \"ed by a college or university si\")\n\n            mstore(add(memPtr, 64), \"gnifying that the recipient has \")\n\n            mstore(add(memPtr, 96), \"satisfactorily completed a cours\")\n\n            mstore(add(memPtr, 128), 0x65206f66207374756479222c0000000000000000000000000000000000000000)\n\n        }\n\n        function abi_encode_t_stringliteral_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 140)\n            store_literal_in_memory_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428(pos)\n            end := add(pos, 140)\n        }\n\n        function store_literal_in_memory_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c(memPtr) {\n\n            mstore(add(memPtr, 0), 0x2261747472696275746573223a205b0000000000000000000000000000000000)\n\n        }\n\n        function abi_encode_t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 15)\n            store_literal_in_memory_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c(pos)\n            end := add(pos, 15)\n        }\n\n        function store_literal_in_memory_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209(memPtr) {\n\n            mstore(add(memPtr, 0), 0x2274726169742074797065223a202253636f7265222c00000000000000000000)\n\n        }\n\n        function abi_encode_t_stringliteral_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 22)\n            store_literal_in_memory_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209(pos)\n            end := add(pos, 22)\n        }\n\n        function store_literal_in_memory_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994(memPtr) {\n\n            mstore(add(memPtr, 0), 0x2276616c7565223a200000000000000000000000000000000000000000000000)\n\n        }\n\n        function abi_encode_t_stringliteral_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n            store_literal_in_memory_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994(pos)\n            end := add(pos, 9)\n        }\n\n        function store_literal_in_memory_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb(memPtr) {\n\n            mstore(add(memPtr, 0), \",\")\n\n        }\n\n        function abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n            store_literal_in_memory_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb(pos)\n            end := add(pos, 1)\n        }\n\n        function store_literal_in_memory_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0(memPtr) {\n\n            mstore(add(memPtr, 0), 0x226d61785f76616c7565223a2000000000000000000000000000000000000000)\n\n        }\n\n        function abi_encode_t_stringliteral_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n            pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 13)\n            store_literal_in_memory_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0(pos)\n            end := add(pos, 13)\n        }\n\n        function store_literal_in_memory_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145(memPtr) {\n\n        mstore(add(memPtr, 0), \"},\")\n\n    }\n\n    function abi_encode_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145(pos)\n        end := add(pos, 2)\n    }\n\n    function store_literal_in_memory_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2274726169742074797065223a20224d616a6f72222c00000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 22)\n        store_literal_in_memory_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965(pos)\n        end := add(pos, 22)\n    }\n\n    function store_literal_in_memory_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2276616c7565223a202200000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 10)\n        store_literal_in_memory_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7(pos)\n        end := add(pos, 10)\n    }\n\n    function store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2200000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0(pos)\n        end := add(pos, 1)\n    }\n\n    function store_literal_in_memory_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2274726169742074797065223a202254797065206f6620646567726565222c00)\n\n    }\n\n    function abi_encode_t_stringliteral_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 31)\n        store_literal_in_memory_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04(pos)\n        end := add(pos, 31)\n    }\n\n    function store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff(memPtr) {\n\n    mstore(add(memPtr, 0), \"}\")\n\n}\n\nfunction abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n    pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n    store_literal_in_memory_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff(pos)\n    end := add(pos, 1)\n}\n\nfunction store_literal_in_memory_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29(memPtr) {\n\n    mstore(add(memPtr, 0), \"]\")\n\n}\n\nfunction abi_encode_t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n    pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n    store_literal_in_memory_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29(pos)\n    end := add(pos, 1)\n}\n\nfunction abi_encode_tuple_packed_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37_t_string_storage_t_stringliteral_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f_t_string_memory_ptr_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6_t_string_storage_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_t_stringliteral_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428_t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209_t_stringliteral_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_stringliteral_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0_t_string_memory_ptr_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_t_string_storage_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_t_stringliteral_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_t_string_storage_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value6, value5, value4, value3, value2, value1, value0) -> end {\n\n    pos := abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_92eb2af4325a1f29529688124f0869dc0de3154f09f2a84d73f5c6d33cc3af37_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n    pos := abi_encode_t_stringliteral_7d3dd302cd0248839df99af6cbf45c59306de9523c3e287f129d034620a1a22f_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n    pos := abi_encode_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n    pos := abi_encode_t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_d526ec34c107cf69dab1a8115f90fc9ba353259f8ad9e27504eae29f054fd428_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_a13ca81d2ab4c8e65fc3934d31ba83a6800c7c0be24e640c5e3648ebf4dae209_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_74a6c29bdc380ee73c2d83be3aa88ac9d7350b3ccba4ff9c310856e33cf3a994_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n\n    pos := abi_encode_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_d46bafbe22fda8e80c44e232e9c948b79487a33e5f0199d44c79df67cee401f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value4,  pos)\n\n    pos := abi_encode_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_4110ba95a809a20d1eabf06f8e5ad75807033ca5e9fadfe110e93cfea073b965_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value5,  pos)\n\n    pos := abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_a91eddf639b0b768929589c1a9fd21dcb0107199bdd82e55c5348018a1572f52_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_a43c4b31dab45a6c858019874fb8144a69f6df382e4e4b3aca19f4ab833c9e04_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_aa90f559ad9acc52b9317a7c2bf69bb4790b0d9f6e51af4a8478924f389e1cd7_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_string_storage_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value6,  pos)\n\n    pos := abi_encode_t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    end := pos\n}\n\nfunction store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa(memPtr) {\n\n    mstore(add(memPtr, 0), \"data:application/json;base64,\")\n\n}\n\nfunction abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n    pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 29)\n    store_literal_in_memory_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa(pos)\n    end := add(pos, 29)\n}\n\nfunction abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n    pos := abi_encode_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n    pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n    end := pos\n}\n\nfunction store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n    mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n    mstore(add(memPtr, 32), \"existent token\")\n\n}\n\nfunction abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n    pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n    store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n    end := add(pos, 64)\n}\n\nfunction abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n    tail := add(headStart, 32)\n\n    mstore(add(headStart, 0), sub(tail, headStart))\n    tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n}\n\nfunction store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n    mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n}\n\nfunction abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n    pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n    store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n    end := add(pos, 32)\n}\n\nfunction abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n    tail := add(headStart, 32)\n\n    mstore(add(headStart, 0), sub(tail, headStart))\n    tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n}\n\nfunction store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n    mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n    mstore(add(memPtr, 32), \"nexistent token\")\n\n}\n\nfunction abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n    pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n    store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n    end := add(pos, 64)\n}\n\nfunction abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n    tail := add(headStart, 32)\n\n    mstore(add(headStart, 0), sub(tail, headStart))\n    tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n}\n\nfunction increment_t_uint256(value) -> ret {\n    value := cleanup_t_uint256(value)\n    if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n    ret := add(value, 1)\n}\n\nfunction panic_error_0x12() {\n    mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n    mstore(4, 0x12)\n    revert(0, 0x24)\n}\n\nfunction checked_div_t_uint256(x, y) -> r {\n    x := cleanup_t_uint256(x)\n    y := cleanup_t_uint256(y)\n    if iszero(y) { panic_error_0x12() }\n\n    r := div(x, y)\n}\n\nfunction panic_error_0x41() {\n    mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n    mstore(4, 0x41)\n    revert(0, 0x24)\n}\n\nfunction checked_sub_t_uint256(x, y) -> diff {\n    x := cleanup_t_uint256(x)\n    y := cleanup_t_uint256(y)\n\n    if lt(x, y) { panic_error_0x11() }\n\n    diff := sub(x, y)\n}\n\nfunction mod_t_uint256(x, y) -> r {\n    x := cleanup_t_uint256(x)\n    y := cleanup_t_uint256(y)\n    if iszero(y) { panic_error_0x12() }\n    r := mod(x, y)\n}\n\nfunction panic_error_0x32() {\n    mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n    mstore(4, 0x32)\n    revert(0, 0x24)\n}\n\nfunction checked_mul_t_uint256(x, y) -> product {\n    x := cleanup_t_uint256(x)\n    y := cleanup_t_uint256(y)\n\n    // overflow, if x != 0 and y > (maxValue / x)\n    if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n    product := mul(x, y)\n}\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"25":[{"length":32,"start":3208},{"length":32,"start":4132}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101375760003560e01c8063723f5352116100b8578063c0888f871161007c578063c0888f8714610378578063c87b56dd14610396578063e985e9c5146103c6578063ee442ca7146103f6578063f2dbea3414610412578063fef87a3b1461043057610137565b8063723f5352146102d2578063893d20e8146102f057806395d89b411461030e578063a22cb4651461032c578063a42f34ce1461034857610137565b8063246bb8e6116100ff578063246bb8e6146101f45780633548d7a3146102245780636352211e146102545780636e02007d1461028457806370a08231146102a257610137565b806301ffc9a71461013c57806306fdde031461016c578063081812fc1461018a578063095ea7b3146101ba57806319097126146101d6575b600080fd5b61015660048036038101906101519190611ced565b61044e565b6040516101639190611d35565b60405180910390f35b610174610530565b6040516101819190611de9565b60405180910390f35b6101a4600480360381019061019f9190611e41565b6105c2565b6040516101b19190611eaf565b60405180910390f35b6101d460048036038101906101cf9190611ef6565b610647565b005b6101de61075f565b6040516101eb9190611de9565b60405180910390f35b61020e60048036038101906102099190611f36565b6107f1565b60405161021b9190611de9565b60405180910390f35b61023e60048036038101906102399190611f36565b6108c2565b60405161024b9190611f72565b60405180910390f35b61026e60048036038101906102699190611e41565b61090b565b60405161027b9190611eaf565b60405180910390f35b61028c6109bd565b6040516102999190611fb8565b60405180910390f35b6102bc60048036038101906102b79190611f36565b6109e1565b6040516102c99190611f72565b60405180910390f35b6102da610a99565b6040516102e79190611f72565b60405180910390f35b6102f8610c84565b6040516103059190611eaf565b60405180910390f35b610316610cac565b6040516103239190611de9565b60405180910390f35b61034660048036038101906103419190611fff565b610d3e565b005b610362600480360381019061035d9190611f36565b610d54565b60405161036f9190611d35565b60405180910390f35b610380610daa565b60405161038d9190611de9565b60405180910390f35b6103b060048036038101906103ab9190611e41565b610e3c565b6040516103bd9190611de9565b60405180910390f35b6103e060048036038101906103db919061203f565b610f8e565b6040516103ed9190611d35565b60405180910390f35b610410600480360381019061040b9190611ef6565b611022565b005b61041a6111ba565b6040516104279190611de9565b60405180910390f35b61043861124c565b6040516104459190611f72565b60405180910390f35b60007f591d4bc0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061051957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610529575061052882611256565b5b9050919050565b60606000805461053f906120ae565b80601f016020809104026020016040519081016040528092919081815260200182805461056b906120ae565b80156105b85780601f1061058d576101008083540402835291602001916105b8565b820191906000526020600020905b81548152906001019060200180831161059b57829003601f168201915b5050505050905090565b60006105cd826112c0565b61060c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060390612152565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106528261090b565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba906121e4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166106e261132c565b73ffffffffffffffffffffffffffffffffffffffff16148061071157506107108161070b61132c565b610f8e565b5b610750576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074790612276565b60405180910390fd5b61075a8383611334565b505050565b6060600a805461076e906120ae565b80601f016020809104026020016040519081016040528092919081815260200182805461079a906120ae565b80156107e75780601f106107bc576101008083540402835291602001916107e7565b820191906000526020600020905b8154815290600101906020018083116107ca57829003601f168201915b5050505050905090565b6060600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461083d906120ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610869906120ae565b80156108b65780601f1061088b576101008083540402835291602001916108b6565b820191906000526020600020905b81548152906001019060200180831161089957829003601f168201915b50505050509050919050565b6000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ab90612308565b60405180910390fd5b80915050919050565b6109c5611bda565b6007604051806020016040529081600082015481525050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a499061239a565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b1e576040517fbdaa602700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b2860076113ed565b6000610b346007611403565b9050610b403382611411565b6000610b8b82600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115eb565b9050610b97828261166c565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610c42929190611bed565b507f2d96a37fc0df820d14a130dc20cef776e701693d91f3b8087309137c53af29c53383604051610c749291906123ba565b60405180910390a1819250505090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b606060018054610cbb906120ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce7906120ae565b8015610d345780601f10610d0957610100808354040283529160200191610d34565b820191906000526020600020905b815481529060010190602001808311610d1757829003601f168201915b5050505050905090565b610d50610d4961132c565b83836116e0565b5050565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b606060098054610db9906120ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610de5906120ae565b8015610e325780601f10610e0757610100808354040283529160200191610e32565b820191906000526020600020905b815481529060010190602001808311610e1557829003601f168201915b5050505050905090565b6060610e47826112c0565b610e86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7d90612455565b60405180910390fd5b6000600660008481526020019081526020016000208054610ea6906120ae565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed2906120ae565b8015610f1f5780601f10610ef457610100808354040283529160200191610f1f565b820191906000526020600020905b815481529060010190602001808311610f0257829003601f168201915b505050505090506000610f3061184d565b9050600081511415610f46578192505050610f89565b600082511115610f7b578082604051602001610f639291906124b1565b60405160208183030381529060405292505050610f89565b610f8484611864565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110a7576040517f6213132300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6008548111156110e3576040517fce9037f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f3a8f9cec46c0521152fbc9136996c3d56edcad069320d3a56b7e97a0ec355cb8826040516111ae9190611eaf565b60405180910390a15050565b6060600b80546111c9906120ae565b80601f01602080910402602001604051908101604052809291908181526020018280546111f5906120ae565b80156112425780601f1061121757610100808354040283529160200191611242565b820191906000526020600020905b81548152906001019060200180831161122557829003601f168201915b5050505050905090565b6000600854905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166113a78361090b565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001816000016000828254019250508190555050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147890612521565b60405180910390fd5b61148a816112c0565b156114ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c19061258d565b60405180910390fd5b6114d66000838361190b565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461152691906125dc565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46115e760008383611910565b5050565b60606000600a6115fa85611915565b600961160586611915565b611610600854611915565b600a600b60405160200161162a9796959493929190612cb6565b604051602081830303815290604052905061164481611a76565b6040516020016116549190612e85565b60405160208183030381529060405291505092915050565b611675826112c0565b6116b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ab90612f19565b60405180910390fd5b806006600084815260200190815260200160002090805190602001906116db929190611bed565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561174f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174690612f85565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118409190611d35565b60405180910390a3505050565b606060405180602001604052806000815250905090565b606061186f826112c0565b6118ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a590613017565b60405180910390fd5b60006118b861184d565b905060008151116118d85760405180602001604052806000815250611903565b806118e284611915565b6040516020016118f39291906124b1565b6040516020818303038152906040525b915050919050565b505050565b505050565b6060600082141561195d576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611a71565b600082905060005b6000821461198f57808061197890613037565b915050600a8261198891906130af565b9150611965565b60008167ffffffffffffffff8111156119ab576119aa6130e0565b5b6040519080825280601f01601f1916602001820160405280156119dd5781602001600182028036833780820191505090505b5090505b60008514611a6a576001826119f6919061310f565b9150600a85611a059190613143565b6030611a1191906125dc565b60f81b818381518110611a2757611a26613174565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611a6391906130af565b94506119e1565b8093505050505b919050565b6060600082511415611a9957604051806020016040528060008152509050611bd5565b60006040518060600160405280604081526020016131fe6040913990506000600360028551611ac891906125dc565b611ad291906130af565b6004611ade91906131a3565b67ffffffffffffffff811115611af757611af66130e0565b5b6040519080825280601f01601f191660200182016040528015611b295781602001600182028036833780820191505090505b509050600182016020820185865187015b80821015611b95576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845360018401935050611b3a565b5050600386510660018114611bb15760028114611bc457611bcc565b603d6001830353603d6002830353611bcc565b603d60018303535b50505080925050505b919050565b6040518060200160405280600081525090565b828054611bf9906120ae565b90600052602060002090601f016020900481019282611c1b5760008555611c62565b82601f10611c3457805160ff1916838001178555611c62565b82800160010185558215611c62579182015b82811115611c61578251825591602001919060010190611c46565b5b509050611c6f9190611c73565b5090565b5b80821115611c8c576000816000905550600101611c74565b5090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611cca81611c95565b8114611cd557600080fd5b50565b600081359050611ce781611cc1565b92915050565b600060208284031215611d0357611d02611c90565b5b6000611d1184828501611cd8565b91505092915050565b60008115159050919050565b611d2f81611d1a565b82525050565b6000602082019050611d4a6000830184611d26565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d8a578082015181840152602081019050611d6f565b83811115611d99576000848401525b50505050565b6000601f19601f8301169050919050565b6000611dbb82611d50565b611dc58185611d5b565b9350611dd5818560208601611d6c565b611dde81611d9f565b840191505092915050565b60006020820190508181036000830152611e038184611db0565b905092915050565b6000819050919050565b611e1e81611e0b565b8114611e2957600080fd5b50565b600081359050611e3b81611e15565b92915050565b600060208284031215611e5757611e56611c90565b5b6000611e6584828501611e2c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e9982611e6e565b9050919050565b611ea981611e8e565b82525050565b6000602082019050611ec46000830184611ea0565b92915050565b611ed381611e8e565b8114611ede57600080fd5b50565b600081359050611ef081611eca565b92915050565b60008060408385031215611f0d57611f0c611c90565b5b6000611f1b85828601611ee1565b9250506020611f2c85828601611e2c565b9150509250929050565b600060208284031215611f4c57611f4b611c90565b5b6000611f5a84828501611ee1565b91505092915050565b611f6c81611e0b565b82525050565b6000602082019050611f876000830184611f63565b92915050565b611f9681611e0b565b82525050565b602082016000820151611fb26000850182611f8d565b50505050565b6000602082019050611fcd6000830184611f9c565b92915050565b611fdc81611d1a565b8114611fe757600080fd5b50565b600081359050611ff981611fd3565b92915050565b6000806040838503121561201657612015611c90565b5b600061202485828601611ee1565b925050602061203585828601611fea565b9150509250929050565b6000806040838503121561205657612055611c90565b5b600061206485828601611ee1565b925050602061207585828601611ee1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806120c657607f821691505b602082108114156120da576120d961207f565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b600061213c602c83611d5b565b9150612147826120e0565b604082019050919050565b6000602082019050818103600083015261216b8161212f565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006121ce602183611d5b565b91506121d982612172565b604082019050919050565b600060208201905081810360008301526121fd816121c1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b6000612260603883611d5b565b915061226b82612204565b604082019050919050565b6000602082019050818103600083015261228f81612253565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b60006122f2602983611d5b565b91506122fd82612296565b604082019050919050565b60006020820190508181036000830152612321816122e5565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000612384602a83611d5b565b915061238f82612328565b604082019050919050565b600060208201905081810360008301526123b381612377565b9050919050565b60006040820190506123cf6000830185611ea0565b6123dc6020830184611f63565b9392505050565b7f45524337323155524953746f726167653a2055524920717565727920666f722060008201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000602082015250565b600061243f603183611d5b565b915061244a826123e3565b604082019050919050565b6000602082019050818103600083015261246e81612432565b9050919050565b600081905092915050565b600061248b82611d50565b6124958185612475565b93506124a5818560208601611d6c565b80840191505092915050565b60006124bd8285612480565b91506124c98284612480565b91508190509392505050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b600061250b602083611d5b565b9150612516826124d5565b602082019050919050565b6000602082019050818103600083015261253a816124fe565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612577601c83611d5b565b915061258282612541565b602082019050919050565b600060208201905081810360008301526125a68161256a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006125e782611e0b565b91506125f283611e0b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612627576126266125ad565b5b828201905092915050565b7f7b00000000000000000000000000000000000000000000000000000000000000600082015250565b6000612668600183612475565b915061267382612632565b600182019050919050565b7f226e616d65223a20220000000000000000000000000000000000000000000000600082015250565b60006126b4600983612475565b91506126bf8261267e565b600982019050919050565b60008190508160005260206000209050919050565b600081546126ec816120ae565b6126f68186612475565b94506001821660008114612711576001811461272257612755565b60ff19831686528186019350612755565b61272b856126ca565b60005b8381101561274d5781548189015260018201915060208101905061272e565b838801955050505b50505092915050565b7f2044656772656520230000000000000000000000000000000000000000000000600082015250565b6000612794600983612475565b915061279f8261275e565b600982019050919050565b7f222c000000000000000000000000000000000000000000000000000000000000600082015250565b60006127e0600283612475565b91506127eb826127aa565b600282019050919050565b7f22696d616765223a202200000000000000000000000000000000000000000000600082015250565b600061282c600a83612475565b9150612837826127f6565b600a82019050919050565b7f226465736372697074696f6e223a2022416e20617761726420636f6e6665727260008201527f6564206279206120636f6c6c656765206f7220756e697665727369747920736960208201527f676e696679696e6720746861742074686520726563697069656e74206861732060408201527f7361746973666163746f72696c7920636f6d706c65746564206120636f75727360608201527f65206f66207374756479222c0000000000000000000000000000000000000000608082015250565b6000612910608c83612475565b915061291b82612842565b608c82019050919050565b7f2261747472696275746573223a205b0000000000000000000000000000000000600082015250565b600061295c600f83612475565b915061296782612926565b600f82019050919050565b7f2274726169742074797065223a202253636f7265222c00000000000000000000600082015250565b60006129a8601683612475565b91506129b382612972565b601682019050919050565b7f2276616c7565223a200000000000000000000000000000000000000000000000600082015250565b60006129f4600983612475565b91506129ff826129be565b600982019050919050565b7f2c00000000000000000000000000000000000000000000000000000000000000600082015250565b6000612a40600183612475565b9150612a4b82612a0a565b600182019050919050565b7f226d61785f76616c7565223a2000000000000000000000000000000000000000600082015250565b6000612a8c600d83612475565b9150612a9782612a56565b600d82019050919050565b7f7d2c000000000000000000000000000000000000000000000000000000000000600082015250565b6000612ad8600283612475565b9150612ae382612aa2565b600282019050919050565b7f2274726169742074797065223a20224d616a6f72222c00000000000000000000600082015250565b6000612b24601683612475565b9150612b2f82612aee565b601682019050919050565b7f2276616c7565223a202200000000000000000000000000000000000000000000600082015250565b6000612b70600a83612475565b9150612b7b82612b3a565b600a82019050919050565b7f2200000000000000000000000000000000000000000000000000000000000000600082015250565b6000612bbc600183612475565b9150612bc782612b86565b600182019050919050565b7f2274726169742074797065223a202254797065206f6620646567726565222c00600082015250565b6000612c08601f83612475565b9150612c1382612bd2565b601f82019050919050565b7f7d00000000000000000000000000000000000000000000000000000000000000600082015250565b6000612c54600183612475565b9150612c5f82612c1e565b600182019050919050565b7f5d00000000000000000000000000000000000000000000000000000000000000600082015250565b6000612ca0600183612475565b9150612cab82612c6a565b600182019050919050565b6000612cc18261265b565b9150612ccc826126a7565b9150612cd8828a6126df565b9150612ce382612787565b9150612cef8289612480565b9150612cfa826127d3565b9150612d058261281f565b9150612d1182886126df565b9150612d1c826127d3565b9150612d2782612903565b9150612d328261294f565b9150612d3d8261265b565b9150612d488261299b565b9150612d53826129e7565b9150612d5f8287612480565b9150612d6a82612a33565b9150612d7582612a7f565b9150612d818286612480565b9150612d8c82612acb565b9150612d978261265b565b9150612da282612b17565b9150612dad82612b63565b9150612db982856126df565b9150612dc482612baf565b9150612dcf82612acb565b9150612dda8261265b565b9150612de582612bfb565b9150612df082612b63565b9150612dfc82846126df565b9150612e0782612baf565b9150612e1282612c47565b9150612e1d82612c93565b9150612e2882612c47565b915081905098975050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000600082015250565b6000612e6f601d83612475565b9150612e7a82612e39565b601d82019050919050565b6000612e9082612e62565b9150612e9c8284612480565b915081905092915050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000612f03602e83611d5b565b9150612f0e82612ea7565b604082019050919050565b60006020820190508181036000830152612f3281612ef6565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612f6f601983611d5b565b9150612f7a82612f39565b602082019050919050565b60006020820190508181036000830152612f9e81612f62565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000613001602f83611d5b565b915061300c82612fa5565b604082019050919050565b6000602082019050818103600083015261303081612ff4565b9050919050565b600061304282611e0b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613075576130746125ad565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006130ba82611e0b565b91506130c583611e0b565b9250826130d5576130d4613080565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061311a82611e0b565b915061312583611e0b565b925082821015613138576131376125ad565b5b828203905092915050565b600061314e82611e0b565b915061315983611e0b565b92508261316957613168613080565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006131ae82611e0b565b91506131b983611e0b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156131f2576131f16125ad565b5b82820290509291505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220f04742fc4566b9d411dc747a415bf5e2ad811cc91ee884687ccf75ce7083d8cc64736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x723F5352 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC0888F87 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC0888F87 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xEE442CA7 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xF2DBEA34 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xFEF87A3B EQ PUSH2 0x430 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x723F5352 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xA42F34CE EQ PUSH2 0x348 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x246BB8E6 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x246BB8E6 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x3548D7A3 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A2 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x19097126 EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DE PUSH2 0x75F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28C PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH2 0xCAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1F36 JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x1EF6 JUMP JUMPDEST PUSH2 0x1022 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41A PUSH2 0x11BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x591D4BC000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x519 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x529 JUMPI POP PUSH2 0x528 DUP3 PUSH2 0x1256 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x53F SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x56B SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x58D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x59B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CD DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x603 SWAP1 PUSH2 0x2152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x652 DUP3 PUSH2 0x90B JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BA SWAP1 PUSH2 0x21E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6E2 PUSH2 0x132C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x711 JUMPI POP PUSH2 0x710 DUP2 PUSH2 0x70B PUSH2 0x132C JUMP JUMPDEST PUSH2 0xF8E JUMP JUMPDEST JUMPDEST PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x747 SWAP1 PUSH2 0x2276 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75A DUP4 DUP4 PUSH2 0x1334 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0x76E SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x79A SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x83D SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x869 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x88B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x899 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AB SWAP1 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C5 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA49 SWAP1 PUSH2 0x239A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0xBDAA602700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB28 PUSH1 0x7 PUSH2 0x13ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB34 PUSH1 0x7 PUSH2 0x1403 JUMP JUMPDEST SWAP1 POP PUSH2 0xB40 CALLER DUP3 PUSH2 0x1411 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB8B DUP3 PUSH1 0xD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x15EB JUMP JUMPDEST SWAP1 POP PUSH2 0xB97 DUP3 DUP3 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xC42 SWAP3 SWAP2 SWAP1 PUSH2 0x1BED JUMP JUMPDEST POP PUSH32 0x2D96A37FC0DF820D14A130DC20CEF776E701693D91F3B8087309137C53AF29C5 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0xC74 SWAP3 SWAP2 SWAP1 PUSH2 0x23BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xCBB SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCE7 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD34 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD09 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD34 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD17 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD50 PUSH2 0xD49 PUSH2 0x132C JUMP JUMPDEST DUP4 DUP4 PUSH2 0x16E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD PUSH2 0xDB9 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDE5 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE32 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE07 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE32 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE15 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE47 DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7D SWAP1 PUSH2 0x2455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0xEA6 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xED2 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEF4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xF30 PUSH2 0x184D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xF46 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xF89 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xF7B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF63 SWAP3 SWAP2 SWAP1 PUSH2 0x24B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xF89 JUMP JUMPDEST PUSH2 0xF84 DUP5 PUSH2 0x1864 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6213132300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO PUSH2 0x10E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCE9037F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x3A8F9CEC46C0521152FBC9136996C3D56EDCAD069320D3A56B7E97A0EC355CB8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11AE SWAP2 SWAP1 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0x11C9 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11F5 SWAP1 PUSH2 0x20AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1242 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1217 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1242 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1225 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A7 DUP4 PUSH2 0x90B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1481 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1478 SWAP1 PUSH2 0x2521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148A DUP2 PUSH2 0x12C0 JUMP JUMPDEST ISZERO PUSH2 0x14CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C1 SWAP1 PUSH2 0x258D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14D6 PUSH1 0x0 DUP4 DUP4 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1526 SWAP2 SWAP1 PUSH2 0x25DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x15E7 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1910 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA PUSH2 0x15FA DUP6 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x9 PUSH2 0x1605 DUP7 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x1610 PUSH1 0x8 SLOAD PUSH2 0x1915 JUMP JUMPDEST PUSH1 0xA PUSH1 0xB PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x162A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1644 DUP2 PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x2E85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1675 DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x16B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16AB SWAP1 PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x16DB SWAP3 SWAP2 SWAP1 PUSH2 0x1BED JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x174F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1746 SWAP1 PUSH2 0x2F85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1840 SWAP2 SWAP1 PUSH2 0x1D35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x186F DUP3 PUSH2 0x12C0 JUMP JUMPDEST PUSH2 0x18AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A5 SWAP1 PUSH2 0x3017 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18B8 PUSH2 0x184D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x18D8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1903 JUMP JUMPDEST DUP1 PUSH2 0x18E2 DUP5 PUSH2 0x1915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18F3 SWAP3 SWAP2 SWAP1 PUSH2 0x24B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x195D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1A71 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x198F JUMPI DUP1 DUP1 PUSH2 0x1978 SWAP1 PUSH2 0x3037 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1988 SWAP2 SWAP1 PUSH2 0x30AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1965 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19AB JUMPI PUSH2 0x19AA PUSH2 0x30E0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19DD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1A6A JUMPI PUSH1 0x1 DUP3 PUSH2 0x19F6 SWAP2 SWAP1 PUSH2 0x310F JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1A05 SWAP2 SWAP1 PUSH2 0x3143 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1A11 SWAP2 SWAP1 PUSH2 0x25DC JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A27 JUMPI PUSH2 0x1A26 PUSH2 0x3174 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1A63 SWAP2 SWAP1 PUSH2 0x30AF JUMP JUMPDEST SWAP5 POP PUSH2 0x19E1 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0x1A99 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1BD5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x31FE PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0x1AC8 SWAP2 SWAP1 PUSH2 0x25DC JUMP JUMPDEST PUSH2 0x1AD2 SWAP2 SWAP1 PUSH2 0x30AF JUMP JUMPDEST PUSH1 0x4 PUSH2 0x1ADE SWAP2 SWAP1 PUSH2 0x31A3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AF7 JUMPI PUSH2 0x1AF6 PUSH2 0x30E0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B29 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1B95 JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP POP PUSH2 0x1B3A JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x1BB1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1BC4 JUMPI PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP POP POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1BF9 SWAP1 PUSH2 0x20AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1C1B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1C62 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1C34 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1C62 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1C62 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1C61 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1C46 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1C6F SWAP2 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1C8C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1C74 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CCA DUP2 PUSH2 0x1C95 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CE7 DUP2 PUSH2 0x1CC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D03 JUMPI PUSH2 0x1D02 PUSH2 0x1C90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D11 DUP5 DUP3 DUP6 ADD PUSH2 0x1CD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D2F DUP2 PUSH2 0x1D1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D6F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D99 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DBB DUP3 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x1DC5 DUP2 DUP6 PUSH2 0x1D5B JUMP JUMPDEST SWAP4 POP PUSH2 0x1DD5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6C JUMP JUMPDEST PUSH2 0x1DDE DUP2 PUSH2 0x1D9F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E03 DUP2 DUP5 PUSH2 0x1DB0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E1E DUP2 PUSH2 0x1E0B JUMP JUMPDEST DUP2 EQ PUSH2 0x1E29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E3B DUP2 PUSH2 0x1E15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E57 JUMPI PUSH2 0x1E56 PUSH2 0x1C90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E65 DUP5 DUP3 DUP6 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E99 DUP3 PUSH2 0x1E6E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA9 DUP2 PUSH2 0x1E8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ED3 DUP2 PUSH2 0x1E8E JUMP JUMPDEST DUP2 EQ PUSH2 0x1EDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF0 DUP2 PUSH2 0x1ECA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F0D JUMPI PUSH2 0x1F0C PUSH2 0x1C90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F1B DUP6 DUP3 DUP7 ADD PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F2C DUP6 DUP3 DUP7 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F4C JUMPI PUSH2 0x1F4B PUSH2 0x1C90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F5A DUP5 DUP3 DUP6 ADD PUSH2 0x1EE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F6C DUP2 PUSH2 0x1E0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F87 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F96 DUP2 PUSH2 0x1E0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1FB2 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1F8D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FCD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FDC DUP2 PUSH2 0x1D1A JUMP JUMPDEST DUP2 EQ PUSH2 0x1FE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FF9 DUP2 PUSH2 0x1FD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2016 JUMPI PUSH2 0x2015 PUSH2 0x1C90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2024 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2035 DUP6 DUP3 DUP7 ADD PUSH2 0x1FEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2056 JUMPI PUSH2 0x2055 PUSH2 0x1C90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2064 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2075 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x20C6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x20DA JUMPI PUSH2 0x20D9 PUSH2 0x207F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213C PUSH1 0x2C DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x2147 DUP3 PUSH2 0x20E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x216B DUP2 PUSH2 0x212F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CE PUSH1 0x21 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x21D9 DUP3 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21FD DUP2 PUSH2 0x21C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2260 PUSH1 0x38 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x226B DUP3 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x228F DUP2 PUSH2 0x2253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F2 PUSH1 0x29 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x22FD DUP3 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2321 DUP2 PUSH2 0x22E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2384 PUSH1 0x2A DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x238F DUP3 PUSH2 0x2328 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23B3 DUP2 PUSH2 0x2377 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23CF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1EA0 JUMP JUMPDEST PUSH2 0x23DC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F63 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F6E6578697374656E7420746F6B656E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x243F PUSH1 0x31 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x244A DUP3 PUSH2 0x23E3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x246E DUP2 PUSH2 0x2432 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248B DUP3 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x2495 DUP2 DUP6 PUSH2 0x2475 JUMP JUMPDEST SWAP4 POP PUSH2 0x24A5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D6C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BD DUP3 DUP6 PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP PUSH2 0x24C9 DUP3 DUP5 PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250B PUSH1 0x20 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x2516 DUP3 PUSH2 0x24D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x253A DUP2 PUSH2 0x24FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2577 PUSH1 0x1C DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x2582 DUP3 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25A6 DUP2 PUSH2 0x256A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x25E7 DUP3 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP PUSH2 0x25F2 DUP4 PUSH2 0x1E0B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2627 JUMPI PUSH2 0x2626 PUSH2 0x25AD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7B00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2668 PUSH1 0x1 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2673 DUP3 PUSH2 0x2632 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x226E616D65223A20220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B4 PUSH1 0x9 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x26BF DUP3 PUSH2 0x267E JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x26EC DUP2 PUSH2 0x20AE JUMP JUMPDEST PUSH2 0x26F6 DUP2 DUP7 PUSH2 0x2475 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2711 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2722 JUMPI PUSH2 0x2755 JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH2 0x2755 JUMP JUMPDEST PUSH2 0x272B DUP6 PUSH2 0x26CA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x274D JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x272E JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2044656772656520230000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2794 PUSH1 0x9 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x279F DUP3 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x222C000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E0 PUSH1 0x2 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x27EB DUP3 PUSH2 0x27AA JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x22696D616765223A202200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282C PUSH1 0xA DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2837 DUP3 PUSH2 0x27F6 JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x226465736372697074696F6E223A2022416E20617761726420636F6E66657272 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564206279206120636F6C6C656765206F7220756E6976657273697479207369 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x676E696679696E6720746861742074686520726563697069656E742068617320 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7361746973666163746F72696C7920636F6D706C65746564206120636F757273 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x65206F66207374756479222C0000000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2910 PUSH1 0x8C DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x291B DUP3 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x8C DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A205B0000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295C PUSH1 0xF DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2967 DUP3 PUSH2 0x2926 JUMP JUMPDEST PUSH1 0xF DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2274726169742074797065223A202253636F7265222C00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29A8 PUSH1 0x16 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x29B3 DUP3 PUSH2 0x2972 JUMP JUMPDEST PUSH1 0x16 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2276616C7565223A200000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F4 PUSH1 0x9 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x29FF DUP3 PUSH2 0x29BE JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A40 PUSH1 0x1 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A4B DUP3 PUSH2 0x2A0A JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x226D61785F76616C7565223A2000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8C PUSH1 0xD DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A97 DUP3 PUSH2 0x2A56 JUMP JUMPDEST PUSH1 0xD DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7D2C000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AD8 PUSH1 0x2 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AE3 DUP3 PUSH2 0x2AA2 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2274726169742074797065223A20224D616A6F72222C00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B24 PUSH1 0x16 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B2F DUP3 PUSH2 0x2AEE JUMP JUMPDEST PUSH1 0x16 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2276616C7565223A202200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B70 PUSH1 0xA DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B7B DUP3 PUSH2 0x2B3A JUMP JUMPDEST PUSH1 0xA DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBC PUSH1 0x1 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC7 DUP3 PUSH2 0x2B86 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2274726169742074797065223A202254797065206F6620646567726565222C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C08 PUSH1 0x1F DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C13 DUP3 PUSH2 0x2BD2 JUMP JUMPDEST PUSH1 0x1F DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7D00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C54 PUSH1 0x1 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C5F DUP3 PUSH2 0x2C1E JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5D00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA0 PUSH1 0x1 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CAB DUP3 PUSH2 0x2C6A JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC1 DUP3 PUSH2 0x265B JUMP JUMPDEST SWAP2 POP PUSH2 0x2CCC DUP3 PUSH2 0x26A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD8 DUP3 DUP11 PUSH2 0x26DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2CE3 DUP3 PUSH2 0x2787 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEF DUP3 DUP10 PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFA DUP3 PUSH2 0x27D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D05 DUP3 PUSH2 0x281F JUMP JUMPDEST SWAP2 POP PUSH2 0x2D11 DUP3 DUP9 PUSH2 0x26DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2D1C DUP3 PUSH2 0x27D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D27 DUP3 PUSH2 0x2903 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D32 DUP3 PUSH2 0x294F JUMP JUMPDEST SWAP2 POP PUSH2 0x2D3D DUP3 PUSH2 0x265B JUMP JUMPDEST SWAP2 POP PUSH2 0x2D48 DUP3 PUSH2 0x299B JUMP JUMPDEST SWAP2 POP PUSH2 0x2D53 DUP3 PUSH2 0x29E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D5F DUP3 DUP8 PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D6A DUP3 PUSH2 0x2A33 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D75 DUP3 PUSH2 0x2A7F JUMP JUMPDEST SWAP2 POP PUSH2 0x2D81 DUP3 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D8C DUP3 PUSH2 0x2ACB JUMP JUMPDEST SWAP2 POP PUSH2 0x2D97 DUP3 PUSH2 0x265B JUMP JUMPDEST SWAP2 POP PUSH2 0x2DA2 DUP3 PUSH2 0x2B17 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DAD DUP3 PUSH2 0x2B63 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DB9 DUP3 DUP6 PUSH2 0x26DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2DC4 DUP3 PUSH2 0x2BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x2DCF DUP3 PUSH2 0x2ACB JUMP JUMPDEST SWAP2 POP PUSH2 0x2DDA DUP3 PUSH2 0x265B JUMP JUMPDEST SWAP2 POP PUSH2 0x2DE5 DUP3 PUSH2 0x2BFB JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF0 DUP3 PUSH2 0x2B63 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DFC DUP3 DUP5 PUSH2 0x26DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2E07 DUP3 PUSH2 0x2BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x2E12 DUP3 PUSH2 0x2C47 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E1D DUP3 PUSH2 0x2C93 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E28 DUP3 PUSH2 0x2C47 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E6F PUSH1 0x1D DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7A DUP3 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x1D DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E90 DUP3 PUSH2 0x2E62 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E9C DUP3 DUP5 PUSH2 0x2480 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F03 PUSH1 0x2E DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x2F0E DUP3 PUSH2 0x2EA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F32 DUP2 PUSH2 0x2EF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6F PUSH1 0x19 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x2F7A DUP3 PUSH2 0x2F39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F9E DUP2 PUSH2 0x2F62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3001 PUSH1 0x2F DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x300C DUP3 PUSH2 0x2FA5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3030 DUP2 PUSH2 0x2FF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3042 DUP3 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3075 JUMPI PUSH2 0x3074 PUSH2 0x25AD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30BA DUP3 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP PUSH2 0x30C5 DUP4 PUSH2 0x1E0B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x30D5 JUMPI PUSH2 0x30D4 PUSH2 0x3080 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x311A DUP3 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP PUSH2 0x3125 DUP4 PUSH2 0x1E0B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3138 JUMPI PUSH2 0x3137 PUSH2 0x25AD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x314E DUP3 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP PUSH2 0x3159 DUP4 PUSH2 0x1E0B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3169 JUMPI PUSH2 0x3168 PUSH2 0x3080 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x31AE DUP3 PUSH2 0x1E0B JUMP JUMPDEST SWAP2 POP PUSH2 0x31B9 DUP4 PUSH2 0x1E0B JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x31F2 JUMPI PUSH2 0x31F1 PUSH2 0x25AD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 CREATE SELFBALANCE TIMESTAMP 0xFC GASLIMIT PUSH7 0xB9D411DC747A41 JUMPDEST CREATE2 0xE2 0xAD DUP2 SHR 0xC9 0x1E 0xE8 DUP5 PUSH9 0x7CCF75CE7083D8CC64 PUSH20 0x6F6C634300080A00330000000000000000000000 ","sourceMap":"945:4903:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1579:321:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2646:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4306:274;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3829:411;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5637:101:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4751:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4912:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2287:292:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5303:108:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1964:261:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2744:654:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5212:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2815:104:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4652:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5063:141:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5528:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;486:732:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4903:189:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2425:311:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5746:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5419:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1579:321:3;1697:4;1749:25;1734:40;;;:11;:40;;;;:105;;;;1806:33;1791:48;;;:11;:48;;;;1734:105;:158;;;;1856:36;1880:11;1856:23;:36::i;:::-;1734:158;1714:178;;1579:321;;;:::o;2646:100::-;2700:13;2733:5;2726:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2646:100;:::o;4306:274::-;4398:7;4440:16;4448:7;4440;:16::i;:::-;4418:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;4548:15;:24;4564:7;4548:24;;;;;;;;;;;;;;;;;;;;;4541:31;;4306:274;;;:::o;3829:411::-;3910:13;3926:23;3941:7;3926:14;:23::i;:::-;3910:39;;3974:5;3968:11;;:2;:11;;;;3960:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4068:5;4052:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;4077:37;4094:5;4101:12;:10;:12::i;:::-;4077:16;:37::i;:::-;4052:62;4030:168;;;;;;;;;;;;:::i;:::-;;;;;;;;;4211:21;4220:2;4224:7;4211:8;:21::i;:::-;3899:341;3829:411;;:::o;5637:101:0:-;5684:13;5717;5710:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5637:101;:::o;4751:153::-;4837:13;4870:17;:26;4888:7;4870:26;;;;;;;;;;;;;;;4863:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4751:153;;;:::o;4912:143::-;4995:7;5022:16;:25;5039:7;5022:25;;;;;;;;;;;;;;;;5015:32;;4912:143;;;:::o;2287:292:3:-;2375:7;2395:13;2411:7;:16;2419:7;2411:16;;;;;;;;;;;;;;;;;;;;;2395:32;;2477:1;2460:19;;:5;:19;;;;2438:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;2566:5;2559:12;;;2287:292;;;:::o;5303:108:0:-;5351:23;;:::i;:::-;5394:9;5387:16;;;;;;;;;;;;;;;;;;;5303:108;:::o;1964:261:3:-;2052:7;2111:1;2094:19;;:5;:19;;;;2072:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;2201:9;:16;2211:5;2201:16;;;;;;;;;;;;;;;;2194:23;;1964:261;;;:::o;2744:654:0:-;2783:7;2808:15;:27;2824:10;2808:27;;;;;;;;;;;;;;;;;;;;;;;;;2803:107;;2859:39;;;;;;;;;;;;;;2803:107;2922:21;:9;:19;:21::i;:::-;2954:17;2974:19;:9;:17;:19::i;:::-;2954:39;;3004:28;3010:10;3022:9;3004:5;:28::i;:::-;3045:22;3070:94;3101:9;3125:16;:28;3142:10;3125:28;;;;;;;;;;;;;;;;3070:16;:94::i;:::-;3045:119;;3175:33;3188:9;3199:8;3175:12;:33::i;:::-;3251:5;3221:15;:27;3237:10;3221:27;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;3299:8;3267:17;:29;3285:10;3267:29;;;;;;;;;;;;;;;:40;;;;;;;;;;;;:::i;:::-;;3325:36;3339:10;3351:9;3325:36;;;;;;;:::i;:::-;;;;;;;;3381:9;3374:16;;;;2744:654;:::o;5212:83::-;5253:7;5280;5273:14;;5212:83;:::o;2815:104:3:-;2871:13;2904:7;2897:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2815:104;:::o;4652:180::-;4772:52;4791:12;:10;:12::i;:::-;4805:8;4815;4772:18;:52::i;:::-;4652:180;;:::o;5063:141:0:-;5148:4;5172:15;:24;5188:7;5172:24;;;;;;;;;;;;;;;;;;;;;;;;;5165:31;;5063:141;;;:::o;5528:101::-;5575:13;5608;5601:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5528:101;:::o;486:732:4:-;575:13;623:16;631:7;623;:16::i;:::-;601:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;729:23;755:10;:19;766:7;755:19;;;;;;;;;;;729:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;785:18;806:10;:8;:10::i;:::-;785:31;;914:1;898:4;892:18;:23;888:72;;;939:9;932:16;;;;;;888:72;1090:1;1070:9;1064:23;:27;1060:108;;;1139:4;1145:9;1122:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1108:48;;;;;;1060:108;1187:23;1202:7;1187:14;:23::i;:::-;1180:30;;;;486:732;;;;:::o;4903:189:3:-;5025:4;5049:18;:25;5068:5;5049:25;;;;;;;;;;;;;;;:35;5075:8;5049:35;;;;;;;;;;;;;;;;;;;;;;;;;5042:42;;4903:189;;;;:::o;2425:311:0:-;1915:7;1901:21;;:10;:21;;;1897:89;;1946:28;;;;;;;;;;;;;;1897:89;2520:16:::1;;2512:5;:24;2508:96;;;2560:32;;;;;;;;;;;;;;2508:96;2641:4;2614:15;:24;2630:7;2614:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2684:5;2656:16;:25;2673:7;2656:25;;;;;;;;;;;;;;;:33;;;;2707:21;2720:7;2707:21;;;;;;:::i;:::-;;;;;;;;2425:311:::0;;:::o;5746:99::-;5792:13;5825:12;5818:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5746:99;:::o;5419:101::-;5469:7;5496:16;;5489:23;;5419:101;:::o;855:173:2:-;956:4;995:25;980:40;;;:11;:40;;;;973:47;;855:173;;;:::o;7857:127:3:-;7922:4;7974:1;7946:30;;:7;:16;7954:7;7946:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7939:37;;7857:127;;;:::o;657:98:1:-;710:7;737:10;730:17;;657:98;:::o;12185:174:3:-;12287:2;12260:15;:24;12276:7;12260:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12343:7;12339:2;12305:46;;12314:23;12329:7;12314:14;:23::i;:::-;12305:46;;;;;;;;;;;;12185:174;;:::o;971:127:11:-;1078:1;1060:7;:14;;;:19;;;;;;;;;;;971:127;:::o;849:114::-;914:7;941;:14;;;934:21;;849:114;;;:::o;9923:439:3:-;10017:1;10003:16;;:2;:16;;;;9995:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;10076:16;10084:7;10076;:16::i;:::-;10075:17;10067:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;10138:45;10167:1;10171:2;10175:7;10138:20;:45::i;:::-;10213:1;10196:9;:13;10206:2;10196:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10244:2;10225:7;:16;10233:7;10225:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10289:7;10285:2;10264:33;;10281:1;10264:33;;;;;;;;;;;;10310:44;10338:1;10342:2;10346:7;10310:19;:44::i;:::-;9923:439;;:::o;3406:1321:0:-;3511:13;3537:20;3626:13;3654:18;:7;:16;:18::i;:::-;3711:13;4044:16;:5;:14;:16::i;:::-;4109:27;:16;;:25;:27::i;:::-;4281:13;4453:12;3560:987;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3537:1010;;4671:22;4685:7;4671:13;:22::i;:::-;4586:122;;;;;;;;:::i;:::-;;;;;;;;;;;;;4558:161;;;3406:1321;;;;:::o;1374:279:4:-;1513:16;1521:7;1513;:16::i;:::-;1491:112;;;;;;;;;;;;:::i;:::-;;;;;;;;;1636:9;1614:10;:19;1625:7;1614:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1374:279;;:::o;12501:315:3:-;12656:8;12647:17;;:5;:17;;;;12639:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;12743:8;12705:18;:25;12724:5;12705:25;;;;;;;;;;;;;;;:35;12731:8;12705:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;12789:8;12767:41;;12782:5;12767:41;;;12799:8;12767:41;;;;;;:::i;:::-;;;;;;;;12501:315;;;:::o;3673:94::-;3724:13;3750:9;;;;;;;;;;;;;;3673:94;:::o;2990:434::-;3079:13;3127:16;3135:7;3127;:16::i;:::-;3105:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;3231:21;3255:10;:8;:10::i;:::-;3231:34;;3320:1;3302:7;3296:21;:25;:120;;;;;;;;;;;;;;;;;3365:7;3374:18;:7;:16;:18::i;:::-;3348:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3296:120;3276:140;;;2990:434;;;:::o;14933:126::-;;;;:::o;15444:125::-;;;;:::o;343:723:12:-;399:13;629:1;620:5;:10;616:53;;;647:10;;;;;;;;;;;;;;;;;;;;;616:53;679:12;694:5;679:20;;710:14;735:78;750:1;742:4;:9;735:78;;768:8;;;;;:::i;:::-;;;;799:2;791:10;;;;;:::i;:::-;;;735:78;;;823:19;855:6;845:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;823:39;;873:154;889:1;880:5;:10;873:154;;917:1;907:11;;;;;:::i;:::-;;;984:2;976:5;:10;;;;:::i;:::-;963:2;:24;;;;:::i;:::-;950:39;;933:6;940;933:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1013:2;1004:11;;;;;:::i;:::-;;;873:154;;;1051:6;1037:21;;;;;343:723;;;;:::o;493:3097:10:-;551:13;803:1;788:4;:11;:16;784:31;;;806:9;;;;;;;;;;;;;;;;784:31;868:19;890:6;;;;;;;;;;;;;;;;;868:28;;1307:20;1366:1;1361;1347:4;:11;:15;;;;:::i;:::-;1346:21;;;;:::i;:::-;1341:1;:27;;;;:::i;:::-;1330:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1307:62;;1549:1;1542:5;1538:13;1653:2;1645:6;1641:15;1764:4;1816;1810:11;1804:4;1800:22;1726:1432;1850:6;1841:7;1838:19;1726:1432;;;1956:1;1947:7;1943:15;1932:26;;1995:7;1989:14;2648:4;2640:5;2636:2;2632:14;2628:25;2618:8;2614:40;2608:47;2597:9;2589:67;2702:1;2691:9;2687:17;2674:30;;2794:4;2786:5;2782:2;2778:14;2774:25;2764:8;2760:40;2754:47;2743:9;2735:67;2848:1;2837:9;2833:17;2820:30;;2939:4;2931:5;2928:1;2924:13;2920:24;2910:8;2906:39;2900:46;2889:9;2881:66;2993:1;2982:9;2978:17;2965:30;;3076:4;3069:5;3065:16;3055:8;3051:31;3045:38;3034:9;3026:58;3130:1;3119:9;3115:17;3102:30;;1877:1281;1726:1432;;;1730:107;;3320:1;3313:4;3307:11;3303:19;3341:1;3336:123;;;;3478:1;3473:73;;;;3296:250;;3336:123;3389:4;3385:1;3374:9;3370:17;3362:32;3439:4;3435:1;3424:9;3420:17;3412:32;3336:123;;3473:73;3526:4;3522:1;3511:9;3507:17;3499:32;3296:250;;1435:2122;;3576:6;3569:13;;;;493:3097;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:13:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:329::-;4997:6;5046:2;5034:9;5025:7;5021:23;5017:32;5014:119;;;5052:79;;:::i;:::-;5014:119;5172:1;5197:53;5242:7;5233:6;5222:9;5218:22;5197:53;:::i;:::-;5187:63;;5143:117;4938:329;;;;:::o;5273:118::-;5360:24;5378:5;5360:24;:::i;:::-;5355:3;5348:37;5273:118;;:::o;5397:222::-;5490:4;5528:2;5517:9;5513:18;5505:26;;5541:71;5609:1;5598:9;5594:17;5585:6;5541:71;:::i;:::-;5397:222;;;;:::o;5625:108::-;5702:24;5720:5;5702:24;:::i;:::-;5697:3;5690:37;5625:108;;:::o;5797:335::-;5944:4;5939:3;5935:14;6033:4;6026:5;6022:16;6016:23;6052:63;6109:4;6104:3;6100:14;6086:12;6052:63;:::i;:::-;5959:166;5913:219;5797:335;;:::o;6138:322::-;6281:4;6319:2;6308:9;6304:18;6296:26;;6332:121;6450:1;6439:9;6435:17;6426:6;6332:121;:::i;:::-;6138:322;;;;:::o;6466:116::-;6536:21;6551:5;6536:21;:::i;:::-;6529:5;6526:32;6516:60;;6572:1;6569;6562:12;6516:60;6466:116;:::o;6588:133::-;6631:5;6669:6;6656:20;6647:29;;6685:30;6709:5;6685:30;:::i;:::-;6588:133;;;;:::o;6727:468::-;6792:6;6800;6849:2;6837:9;6828:7;6824:23;6820:32;6817:119;;;6855:79;;:::i;:::-;6817:119;6975:1;7000:53;7045:7;7036:6;7025:9;7021:22;7000:53;:::i;:::-;6990:63;;6946:117;7102:2;7128:50;7170:7;7161:6;7150:9;7146:22;7128:50;:::i;:::-;7118:60;;7073:115;6727:468;;;;;:::o;7201:474::-;7269:6;7277;7326:2;7314:9;7305:7;7301:23;7297:32;7294:119;;;7332:79;;:::i;:::-;7294:119;7452:1;7477:53;7522:7;7513:6;7502:9;7498:22;7477:53;:::i;:::-;7467:63;;7423:117;7579:2;7605:53;7650:7;7641:6;7630:9;7626:22;7605:53;:::i;:::-;7595:63;;7550:118;7201:474;;;;;:::o;7681:180::-;7729:77;7726:1;7719:88;7826:4;7823:1;7816:15;7850:4;7847:1;7840:15;7867:320;7911:6;7948:1;7942:4;7938:12;7928:22;;7995:1;7989:4;7985:12;8016:18;8006:81;;8072:4;8064:6;8060:17;8050:27;;8006:81;8134:2;8126:6;8123:14;8103:18;8100:38;8097:84;;;8153:18;;:::i;:::-;8097:84;7918:269;7867:320;;;:::o;8193:231::-;8333:34;8329:1;8321:6;8317:14;8310:58;8402:14;8397:2;8389:6;8385:15;8378:39;8193:231;:::o;8430:366::-;8572:3;8593:67;8657:2;8652:3;8593:67;:::i;:::-;8586:74;;8669:93;8758:3;8669:93;:::i;:::-;8787:2;8782:3;8778:12;8771:19;;8430:366;;;:::o;8802:419::-;8968:4;9006:2;8995:9;8991:18;8983:26;;9055:9;9049:4;9045:20;9041:1;9030:9;9026:17;9019:47;9083:131;9209:4;9083:131;:::i;:::-;9075:139;;8802:419;;;:::o;9227:220::-;9367:34;9363:1;9355:6;9351:14;9344:58;9436:3;9431:2;9423:6;9419:15;9412:28;9227:220;:::o;9453:366::-;9595:3;9616:67;9680:2;9675:3;9616:67;:::i;:::-;9609:74;;9692:93;9781:3;9692:93;:::i;:::-;9810:2;9805:3;9801:12;9794:19;;9453:366;;;:::o;9825:419::-;9991:4;10029:2;10018:9;10014:18;10006:26;;10078:9;10072:4;10068:20;10064:1;10053:9;10049:17;10042:47;10106:131;10232:4;10106:131;:::i;:::-;10098:139;;9825:419;;;:::o;10250:243::-;10390:34;10386:1;10378:6;10374:14;10367:58;10459:26;10454:2;10446:6;10442:15;10435:51;10250:243;:::o;10499:366::-;10641:3;10662:67;10726:2;10721:3;10662:67;:::i;:::-;10655:74;;10738:93;10827:3;10738:93;:::i;:::-;10856:2;10851:3;10847:12;10840:19;;10499:366;;;:::o;10871:419::-;11037:4;11075:2;11064:9;11060:18;11052:26;;11124:9;11118:4;11114:20;11110:1;11099:9;11095:17;11088:47;11152:131;11278:4;11152:131;:::i;:::-;11144:139;;10871:419;;;:::o;11296:228::-;11436:34;11432:1;11424:6;11420:14;11413:58;11505:11;11500:2;11492:6;11488:15;11481:36;11296:228;:::o;11530:366::-;11672:3;11693:67;11757:2;11752:3;11693:67;:::i;:::-;11686:74;;11769:93;11858:3;11769:93;:::i;:::-;11887:2;11882:3;11878:12;11871:19;;11530:366;;;:::o;11902:419::-;12068:4;12106:2;12095:9;12091:18;12083:26;;12155:9;12149:4;12145:20;12141:1;12130:9;12126:17;12119:47;12183:131;12309:4;12183:131;:::i;:::-;12175:139;;11902:419;;;:::o;12327:229::-;12467:34;12463:1;12455:6;12451:14;12444:58;12536:12;12531:2;12523:6;12519:15;12512:37;12327:229;:::o;12562:366::-;12704:3;12725:67;12789:2;12784:3;12725:67;:::i;:::-;12718:74;;12801:93;12890:3;12801:93;:::i;:::-;12919:2;12914:3;12910:12;12903:19;;12562:366;;;:::o;12934:419::-;13100:4;13138:2;13127:9;13123:18;13115:26;;13187:9;13181:4;13177:20;13173:1;13162:9;13158:17;13151:47;13215:131;13341:4;13215:131;:::i;:::-;13207:139;;12934:419;;;:::o;13359:332::-;13480:4;13518:2;13507:9;13503:18;13495:26;;13531:71;13599:1;13588:9;13584:17;13575:6;13531:71;:::i;:::-;13612:72;13680:2;13669:9;13665:18;13656:6;13612:72;:::i;:::-;13359:332;;;;;:::o;13697:236::-;13837:34;13833:1;13825:6;13821:14;13814:58;13906:19;13901:2;13893:6;13889:15;13882:44;13697:236;:::o;13939:366::-;14081:3;14102:67;14166:2;14161:3;14102:67;:::i;:::-;14095:74;;14178:93;14267:3;14178:93;:::i;:::-;14296:2;14291:3;14287:12;14280:19;;13939:366;;;:::o;14311:419::-;14477:4;14515:2;14504:9;14500:18;14492:26;;14564:9;14558:4;14554:20;14550:1;14539:9;14535:17;14528:47;14592:131;14718:4;14592:131;:::i;:::-;14584:139;;14311:419;;;:::o;14736:148::-;14838:11;14875:3;14860:18;;14736:148;;;;:::o;14890:377::-;14996:3;15024:39;15057:5;15024:39;:::i;:::-;15079:89;15161:6;15156:3;15079:89;:::i;:::-;15072:96;;15177:52;15222:6;15217:3;15210:4;15203:5;15199:16;15177:52;:::i;:::-;15254:6;15249:3;15245:16;15238:23;;15000:267;14890:377;;;;:::o;15273:435::-;15453:3;15475:95;15566:3;15557:6;15475:95;:::i;:::-;15468:102;;15587:95;15678:3;15669:6;15587:95;:::i;:::-;15580:102;;15699:3;15692:10;;15273:435;;;;;:::o;15714:182::-;15854:34;15850:1;15842:6;15838:14;15831:58;15714:182;:::o;15902:366::-;16044:3;16065:67;16129:2;16124:3;16065:67;:::i;:::-;16058:74;;16141:93;16230:3;16141:93;:::i;:::-;16259:2;16254:3;16250:12;16243:19;;15902:366;;;:::o;16274:419::-;16440:4;16478:2;16467:9;16463:18;16455:26;;16527:9;16521:4;16517:20;16513:1;16502:9;16498:17;16491:47;16555:131;16681:4;16555:131;:::i;:::-;16547:139;;16274:419;;;:::o;16699:178::-;16839:30;16835:1;16827:6;16823:14;16816:54;16699:178;:::o;16883:366::-;17025:3;17046:67;17110:2;17105:3;17046:67;:::i;:::-;17039:74;;17122:93;17211:3;17122:93;:::i;:::-;17240:2;17235:3;17231:12;17224:19;;16883:366;;;:::o;17255:419::-;17421:4;17459:2;17448:9;17444:18;17436:26;;17508:9;17502:4;17498:20;17494:1;17483:9;17479:17;17472:47;17536:131;17662:4;17536:131;:::i;:::-;17528:139;;17255:419;;;:::o;17680:180::-;17728:77;17725:1;17718:88;17825:4;17822:1;17815:15;17849:4;17846:1;17839:15;17866:305;17906:3;17925:20;17943:1;17925:20;:::i;:::-;17920:25;;17959:20;17977:1;17959:20;:::i;:::-;17954:25;;18113:1;18045:66;18041:74;18038:1;18035:81;18032:107;;;18119:18;;:::i;:::-;18032:107;18163:1;18160;18156:9;18149:16;;17866:305;;;;:::o;18177:155::-;18317:3;18313:1;18305:6;18301:14;18294:27;18177:155;:::o;18342:416::-;18502:3;18527:84;18609:1;18604:3;18527:84;:::i;:::-;18520:91;;18624:93;18713:3;18624:93;:::i;:::-;18746:1;18741:3;18737:11;18730:18;;18342:416;;;:::o;18768:222::-;18912:66;18908:1;18900:6;18896:14;18889:90;18768:222;:::o;19000:416::-;19160:3;19185:84;19267:1;19262:3;19185:84;:::i;:::-;19178:91;;19282:93;19371:3;19282:93;:::i;:::-;19404:1;19399:3;19395:11;19388:18;;19000:416;;;:::o;19426:157::-;19475:4;19502:3;19494:11;;19529:3;19526:1;19519:14;19567:4;19564:1;19554:18;19546:26;;19426:157;;;:::o;19621:925::-;19724:3;19765:5;19759:12;19798:36;19824:9;19798:36;:::i;:::-;19854:89;19936:6;19931:3;19854:89;:::i;:::-;19847:96;;19978:1;19967:9;19963:17;19998:1;19993:153;;;;20164:1;20159:377;;;;19956:580;;19993:153;20085:4;20081:9;20070;20066:25;20061:3;20054:38;20125:6;20120:3;20116:16;20109:23;;19993:153;;20159:377;20234:38;20266:5;20234:38;:::i;:::-;20298:1;20316:166;20330:6;20327:1;20324:13;20316:166;;;20408:7;20402:14;20398:1;20393:3;20389:11;20382:35;20462:1;20453:7;20449:15;20438:26;;20352:4;20349:1;20345:12;20340:17;;20316:166;;;20515:6;20510:3;20506:16;20499:23;;20166:370;;19956:580;;19728:818;;19621:925;;;;:::o;20556:167::-;20700:11;20696:1;20688:6;20684:14;20677:35;20556:167;:::o;20733:416::-;20893:3;20918:84;21000:1;20995:3;20918:84;:::i;:::-;20911:91;;21015:93;21104:3;21015:93;:::i;:::-;21137:1;21132:3;21128:11;21121:18;;20733:416;;;:::o;21159:222::-;21303:66;21299:1;21291:6;21287:14;21280:90;21159:222;:::o;21391:416::-;21551:3;21576:84;21658:1;21653:3;21576:84;:::i;:::-;21569:91;;21673:93;21762:3;21673:93;:::i;:::-;21795:1;21790:3;21786:11;21779:18;;21391:416;;;:::o;21817:222::-;21961:66;21957:1;21949:6;21945:14;21938:90;21817:222;:::o;22049:418::-;22209:3;22234:85;22316:2;22311:3;22234:85;:::i;:::-;22227:92;;22332:93;22421:3;22332:93;:::i;:::-;22454:2;22449:3;22445:12;22438:19;;22049:418;;;:::o;22477:547::-;22621:66;22617:1;22609:6;22605:14;22598:90;22726:34;22721:2;22713:6;22709:15;22702:59;22799:34;22794:2;22786:6;22782:15;22775:59;22872:34;22867:2;22859:6;22855:15;22848:59;22946:66;22940:3;22932:6;22928:16;22921:92;22477:547;:::o;23034:420::-;23194:3;23219:86;23301:3;23296;23219:86;:::i;:::-;23212:93;;23318;23407:3;23318:93;:::i;:::-;23440:3;23435;23431:13;23424:20;;23034:420;;;:::o;23464:222::-;23608:66;23604:1;23596:6;23592:14;23585:90;23464:222;:::o;23696:418::-;23856:3;23881:85;23963:2;23958:3;23881:85;:::i;:::-;23874:92;;23979:93;24068:3;23979:93;:::i;:::-;24101:2;24096:3;24092:12;24085:19;;23696:418;;;:::o;24124:222::-;24268:66;24264:1;24256:6;24252:14;24245:90;24124:222;:::o;24356:418::-;24516:3;24541:85;24623:2;24618:3;24541:85;:::i;:::-;24534:92;;24639:93;24728:3;24639:93;:::i;:::-;24761:2;24756:3;24752:12;24745:19;;24356:418;;;:::o;24784:222::-;24928:66;24924:1;24916:6;24912:14;24905:90;24784:222;:::o;25016:416::-;25176:3;25201:84;25283:1;25278:3;25201:84;:::i;:::-;25194:91;;25298:93;25387:3;25298:93;:::i;:::-;25420:1;25415:3;25411:11;25404:18;;25016:416;;;:::o;25442:159::-;25586:3;25582:1;25574:6;25570:14;25563:27;25442:159;:::o;25611:416::-;25771:3;25796:84;25878:1;25873:3;25796:84;:::i;:::-;25789:91;;25893:93;25982:3;25893:93;:::i;:::-;26015:1;26010:3;26006:11;25999:18;;25611:416;;;:::o;26037:222::-;26181:66;26177:1;26169:6;26165:14;26158:90;26037:222;:::o;26269:418::-;26429:3;26454:85;26536:2;26531:3;26454:85;:::i;:::-;26447:92;;26552:93;26641:3;26552:93;:::i;:::-;26674:2;26669:3;26665:12;26658:19;;26269:418;;;:::o;26697:152::-;26837:4;26833:1;26825:6;26821:14;26814:28;26697:152;:::o;26855:400::-;27015:3;27036:84;27118:1;27113:3;27036:84;:::i;:::-;27029:91;;27129:93;27218:3;27129:93;:::i;:::-;27247:1;27242:3;27238:11;27231:18;;26855:400;;;:::o;27261:214::-;27401:66;27397:1;27389:6;27385:14;27378:90;27261:214;:::o;27481:402::-;27641:3;27662:85;27744:2;27739:3;27662:85;:::i;:::-;27655:92;;27756:93;27845:3;27756:93;:::i;:::-;27874:2;27869:3;27865:12;27858:19;;27481:402;;;:::o;27889:214::-;28029:66;28025:1;28017:6;28013:14;28006:90;27889:214;:::o;28109:402::-;28269:3;28290:85;28372:2;28367:3;28290:85;:::i;:::-;28283:92;;28384:93;28473:3;28384:93;:::i;:::-;28502:2;28497:3;28493:12;28486:19;;28109:402;;;:::o;28517:214::-;28657:66;28653:1;28645:6;28641:14;28634:90;28517:214;:::o;28737:400::-;28897:3;28918:84;29000:1;28995:3;28918:84;:::i;:::-;28911:91;;29011:93;29100:3;29011:93;:::i;:::-;29129:1;29124:3;29120:11;29113:18;;28737:400;;;:::o;29143:214::-;29283:66;29279:1;29271:6;29267:14;29260:90;29143:214;:::o;29363:402::-;29523:3;29544:85;29626:2;29621:3;29544:85;:::i;:::-;29537:92;;29638:93;29727:3;29638:93;:::i;:::-;29756:2;29751:3;29747:12;29740:19;;29363:402;;;:::o;29771:143::-;29907:3;29903:1;29895:6;29891:14;29884:27;29771:143;:::o;29916:384::-;30076:3;30093:84;30175:1;30170:3;30093:84;:::i;:::-;30086:91;;30182:93;30271:3;30182:93;:::i;:::-;30296:1;30291:3;30287:11;30280:18;;29916:384;;;:::o;30302:143::-;30438:3;30434:1;30426:6;30422:14;30415:27;30302:143;:::o;30447:384::-;30607:3;30624:84;30706:1;30701:3;30624:84;:::i;:::-;30617:91;;30713:93;30802:3;30713:93;:::i;:::-;30827:1;30822:3;30818:11;30811:18;;30447:384;;;:::o;30833:7987::-;33867:3;33885:148;34029:3;33885:148;:::i;:::-;33878:155;;34046:148;34190:3;34046:148;:::i;:::-;34039:155;;34207:92;34295:3;34286:6;34207:92;:::i;:::-;34200:99;;34312:148;34456:3;34312:148;:::i;:::-;34305:155;;34473:95;34564:3;34555:6;34473:95;:::i;:::-;34466:102;;34581:148;34725:3;34581:148;:::i;:::-;34574:155;;34742:148;34886:3;34742:148;:::i;:::-;34735:155;;34903:92;34991:3;34982:6;34903:92;:::i;:::-;34896:99;;35008:148;35152:3;35008:148;:::i;:::-;35001:155;;35169:148;35313:3;35169:148;:::i;:::-;35162:155;;35330:148;35474:3;35330:148;:::i;:::-;35323:155;;35491:148;35635:3;35491:148;:::i;:::-;35484:155;;35652:148;35796:3;35652:148;:::i;:::-;35645:155;;35813:148;35957:3;35813:148;:::i;:::-;35806:155;;35974:95;36065:3;36056:6;35974:95;:::i;:::-;35967:102;;36082:148;36226:3;36082:148;:::i;:::-;36075:155;;36243:148;36387:3;36243:148;:::i;:::-;36236:155;;36404:95;36495:3;36486:6;36404:95;:::i;:::-;36397:102;;36512:148;36656:3;36512:148;:::i;:::-;36505:155;;36673:148;36817:3;36673:148;:::i;:::-;36666:155;;36834:148;36978:3;36834:148;:::i;:::-;36827:155;;36995:148;37139:3;36995:148;:::i;:::-;36988:155;;37156:92;37244:3;37235:6;37156:92;:::i;:::-;37149:99;;37261:148;37405:3;37261:148;:::i;:::-;37254:155;;37422:148;37566:3;37422:148;:::i;:::-;37415:155;;37583:148;37727:3;37583:148;:::i;:::-;37576:155;;37744:148;37888:3;37744:148;:::i;:::-;37737:155;;37905:148;38049:3;37905:148;:::i;:::-;37898:155;;38066:92;38154:3;38145:6;38066:92;:::i;:::-;38059:99;;38171:148;38315:3;38171:148;:::i;:::-;38164:155;;38332:148;38476:3;38332:148;:::i;:::-;38325:155;;38493:148;38637:3;38493:148;:::i;:::-;38486:155;;38654:148;38798:3;38654:148;:::i;:::-;38647:155;;38815:3;38808:10;;30833:7987;;;;;;;;;;:::o;38822:171::-;38958:31;38954:1;38946:6;38942:14;38935:55;38822:171;:::o;38995:386::-;39155:3;39172:85;39254:2;39249:3;39172:85;:::i;:::-;39165:92;;39262:93;39351:3;39262:93;:::i;:::-;39376:2;39371:3;39367:12;39360:19;;38995:386;;;:::o;39383:525::-;39616:3;39634:148;39778:3;39634:148;:::i;:::-;39627:155;;39795:95;39886:3;39877:6;39795:95;:::i;:::-;39788:102;;39903:3;39896:10;;39383:525;;;;:::o;39910:221::-;40046:34;40042:1;40034:6;40030:14;40023:58;40111:16;40106:2;40098:6;40094:15;40087:41;39910:221;:::o;40133:350::-;40275:3;40292:67;40356:2;40351:3;40292:67;:::i;:::-;40285:74;;40364:93;40453:3;40364:93;:::i;:::-;40478:2;40473:3;40469:12;40462:19;;40133:350;;;:::o;40485:403::-;40651:4;40685:2;40674:9;40670:18;40662:26;;40730:9;40724:4;40720:20;40716:1;40705:9;40701:17;40694:47;40754:131;40880:4;40754:131;:::i;:::-;40746:139;;40485:403;;;:::o;40890:167::-;41026:27;41022:1;41014:6;41010:14;41003:51;40890:167;:::o;41059:350::-;41201:3;41218:67;41282:2;41277:3;41218:67;:::i;:::-;41211:74;;41290:93;41379:3;41290:93;:::i;:::-;41404:2;41399:3;41395:12;41388:19;;41059:350;;;:::o;41411:403::-;41577:4;41611:2;41600:9;41596:18;41588:26;;41656:9;41650:4;41646:20;41642:1;41631:9;41627:17;41620:47;41680:131;41806:4;41680:131;:::i;:::-;41672:139;;41411:403;;;:::o;41816:222::-;41952:34;41948:1;41940:6;41936:14;41929:58;42017:17;42012:2;42004:6;42000:15;41993:42;41816:222;:::o;42040:350::-;42182:3;42199:67;42263:2;42258:3;42199:67;:::i;:::-;42192:74;;42271:93;42360:3;42271:93;:::i;:::-;42385:2;42380:3;42376:12;42369:19;;42040:350;;;:::o;42392:403::-;42558:4;42592:2;42581:9;42577:18;42569:26;;42637:9;42631:4;42627:20;42623:1;42612:9;42608:17;42601:47;42661:131;42787:4;42661:131;:::i;:::-;42653:139;;42392:403;;;:::o;42797:217::-;42836:3;42855:24;42873:5;42855:24;:::i;:::-;42846:33;;42897:66;42890:5;42887:77;42884:103;;;42967:18;;:::i;:::-;42884:103;43010:1;43003:5;42999:13;42992:20;;42797:217;;;:::o;43016:164::-;43060:77;43057:1;43050:88;43153:4;43150:1;43143:15;43173:4;43170:1;43163:15;43182:165;43222:1;43235:20;43253:1;43235:20;:::i;:::-;43230:25;;43265:20;43283:1;43265:20;:::i;:::-;43260:25;;43300:1;43290:35;;43305:18;;:::i;:::-;43290:35;43343:1;43340;43336:9;43331:14;;43182:165;;;;:::o;43349:164::-;43393:77;43390:1;43383:88;43486:4;43483:1;43476:15;43506:4;43503:1;43496:15;43515:171;43555:4;43571:20;43589:1;43571:20;:::i;:::-;43566:25;;43601:20;43619:1;43601:20;:::i;:::-;43596:25;;43636:1;43633;43630:8;43627:34;;;43641:18;;:::i;:::-;43627:34;43682:1;43679;43675:9;43667:17;;43515:171;;;;:::o;43688:156::-;43720:1;43733:20;43751:1;43733:20;:::i;:::-;43728:25;;43763:20;43781:1;43763:20;:::i;:::-;43758:25;;43798:1;43788:35;;43803:18;;:::i;:::-;43788:35;43840:1;43837;43833:9;43828:14;;43688:156;;;;:::o;43846:164::-;43890:77;43887:1;43880:88;43983:4;43980:1;43973:15;44003:4;44000:1;43993:15;44012:324;44052:7;44071:20;44089:1;44071:20;:::i;:::-;44066:25;;44101:20;44119:1;44101:20;:::i;:::-;44096:25;;44281:1;44213:66;44209:74;44206:1;44203:81;44198:1;44191:9;44184:17;44180:105;44177:131;;;44288:18;;:::i;:::-;44177:131;44332:1;44329;44325:9;44314:20;;44012:324;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2583000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2990","checkDegreeOfStudent(address)":"infinite","checkScoreOfStudent(address)":"2886","claimDegree()":"infinite","getApproved(uint256)":"5228","getDegreeImage()":"infinite","getDegreeMajor()":"infinite","getDegreeMaxScore()":"2569","getDegreeType()":"infinite","getOwner()":"infinite","getTokenCounter()":"2702","isApprovedForAll(address,address)":"infinite","isStudentDegreeIssued(address)":"2994","issueDegree(address,uint256)":"infinite","name()":"infinite","ownerOf(uint256)":"3044","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite"},"internal":{"generateTokenURI(uint256,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkDegreeOfStudent(address)":"246bb8e6","checkScoreOfStudent(address)":"3548d7a3","claimDegree()":"723f5352","getApproved(uint256)":"081812fc","getDegreeImage()":"c0888f87","getDegreeMajor()":"19097126","getDegreeMaxScore()":"fef87a3b","getDegreeType()":"f2dbea34","getOwner()":"893d20e8","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","isStudentDegreeIssued(address)":"a42f34ce","issueDegree(address,uint256)":"ee442ca7","name()":"06fdde03","ownerOf(uint256)":"6352211e","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"degreeMaxScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"degreeImage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"degreeMajor\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"degreeType\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"UniversityDegree__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UniversityDegree__ScoreTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UniversityDegree__YourDegreeNotIssued\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"degreeClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"}],\"name\":\"degreeIssued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"}],\"name\":\"checkDegreeOfStudent\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"}],\"name\":\"checkScoreOfStudent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimDegree\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDegreeImage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDegreeMajor\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDegreeMaxScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDegreeType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"internalType\":\"struct Counters.Counter\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"}],\"name\":\"isStudentDegreeIssued\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"student\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"issueDegree\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ghaieth BEN MOUSSA\",\"details\":\"This contract is used to award degrees to students who graduated in two steps: 1. Only the owner of the contract can issue degrees with the function `issueDegree(address to, uint256 score)` 2. Then, the student can claim the degree with the function `claimDegree()` This type of token is called a Soul Bound Token because once the token  has been claimed by the student, it can not be transfered to anyone else.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"}},\"title\":\"UniversityDegree\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Non-transferable Soul Bound Token (NFT) smart contract for university degrees and diplomas\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UniversityDegree.sol\":\"UniversityDegree\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/UniversityDegree.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./dependancies/ERC721URIStorage.sol\\\";\\r\\nimport \\\"./dependancies/librairies/Counters.sol\\\";\\r\\nimport \\\"./dependancies/librairies/Base64.sol\\\";\\r\\n\\r\\nerror UniversityDegree__NotOwner();\\r\\nerror UniversityDegree__YourDegreeNotIssued();\\r\\nerror UniversityDegree__ScoreTooHigh();\\r\\n\\r\\n/**\\r\\n * @title UniversityDegree\\r\\n * @author Ghaieth BEN MOUSSA\\r\\n * @notice Non-transferable Soul Bound Token (NFT) smart contract for university degrees and diplomas\\r\\n * @dev This contract is used to award degrees to students who graduated in two steps:\\r\\n * 1. Only the owner of the contract can issue degrees with the function `issueDegree(address to, uint256 score)`\\r\\n * 2. Then, the student can claim the degree with the function `claimDegree()`\\r\\n * This type of token is called a Soul Bound Token because once the token \\r\\n * has been claimed by the student, it can not be transfered to anyone else.\\r\\n */\\r\\ncontract UniversityDegree is ERC721URIStorage {\\r\\n    using Strings for uint256;\\r\\n    // ERC721 Variables:\\r\\n    using Counters for Counters.Counter;\\r\\n    Counters.Counter private _tokenIds;\\r\\n\\r\\n    // Degree Variables:\\r\\n    address private immutable i_owner; // Issuer of the degrees (the university)\\r\\n    uint256 internal s_degreeMaxScore; // Maximum score of the degree (usualy /20)\\r\\n    string internal s_degreeImage; // Image of the degree hosted on IPFS\\r\\n    string internal s_degreeMajor; // Major of the degree\\r\\n    string internal s_degreeType; // Type of the degree (bachelor, masters, etc)\\r\\n    mapping(address => bool) internal s_issuedDegrees;\\r\\n    mapping(address => uint256) internal s_studentToScore;\\r\\n    mapping(address => string) internal s_studentToDegree;\\r\\n\\r\\n    // Events:\\r\\n    event degreeIssued(address student);\\r\\n    event degreeClaimed(address student, uint256 tokenId);\\r\\n\\r\\n    // Modifiers:\\r\\n    modifier onlyOwner() {\\r\\n        if (msg.sender != i_owner) {\\r\\n            revert UniversityDegree__NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(\\r\\n        uint256 degreeMaxScore,\\r\\n        string memory degreeImage,\\r\\n        string memory degreeMajor,\\r\\n        string memory degreeType\\r\\n    ) ERC721(\\\"UniversityDegreeSoulBoundToken\\\", \\\"UDSBT\\\") {\\r\\n        i_owner = msg.sender;\\r\\n        s_degreeMaxScore = degreeMaxScore;\\r\\n        s_degreeImage = degreeImage;\\r\\n        s_degreeMajor = degreeMajor;\\r\\n        s_degreeType = degreeType;\\r\\n    }\\r\\n\\r\\n    function issueDegree(address student, uint256 score) external onlyOwner {\\r\\n        if (score > s_degreeMaxScore) {\\r\\n            revert UniversityDegree__ScoreTooHigh();\\r\\n        }\\r\\n        s_issuedDegrees[student] = true;\\r\\n        s_studentToScore[student] = score;\\r\\n\\r\\n        emit degreeIssued(student);\\r\\n    }\\r\\n\\r\\n    function claimDegree() public returns (uint256) {\\r\\n        if (!s_issuedDegrees[msg.sender]) {\\r\\n            revert UniversityDegree__YourDegreeNotIssued();\\r\\n        }\\r\\n\\r\\n        _tokenIds.increment();\\r\\n        uint256 newItemId = _tokenIds.current();\\r\\n        _mint(msg.sender, newItemId);\\r\\n\\r\\n        string memory tokenURI = generateTokenURI(\\r\\n            newItemId,\\r\\n            s_studentToScore[msg.sender]\\r\\n        );\\r\\n        _setTokenURI(newItemId, tokenURI);\\r\\n\\r\\n        s_issuedDegrees[msg.sender] = false;\\r\\n        s_studentToDegree[msg.sender] = tokenURI;\\r\\n\\r\\n        emit degreeClaimed(msg.sender, newItemId);\\r\\n\\r\\n        return newItemId;\\r\\n    }\\r\\n\\r\\n    function generateTokenURI(\\r\\n        uint256 tokenId,\\r\\n        uint256 score\\r\\n    ) private view returns (string memory) {\\r\\n        bytes memory dataURI = abi.encodePacked(\\r\\n            '{',\\r\\n                '\\\"name\\\": \\\"', s_degreeMajor, ' Degree #', tokenId.toString(), '\\\",',\\r\\n                '\\\"image\\\": \\\"', s_degreeImage, '\\\",',\\r\\n                '\\\"description\\\": \\\"An award conferred by a college or university signifying that the recipient has satisfactorily completed a course of study\\\",',\\r\\n                '\\\"attributes\\\": [',\\r\\n                    '{',\\r\\n                        '\\\"trait type\\\": \\\"Score\\\",',\\r\\n                        '\\\"value\\\": ', score.toString(), ',',\\r\\n                        '\\\"max_value\\\": ', s_degreeMaxScore.toString(),\\r\\n                    '},',\\r\\n                    '{',\\r\\n                        '\\\"trait type\\\": \\\"Major\\\",',\\r\\n                        '\\\"value\\\": \\\"', s_degreeMajor, '\\\"',\\r\\n                    '},',\\r\\n                    '{',\\r\\n                        '\\\"trait type\\\": \\\"Type of degree\\\",',\\r\\n                        '\\\"value\\\": \\\"', s_degreeType, '\\\"',\\r\\n                    '}',\\r\\n                ']',\\r\\n            '}'\\r\\n        );\\r\\n        return string(\\r\\n            abi.encodePacked(\\r\\n                \\\"data:application/json;base64,\\\",\\r\\n                Base64.encode(dataURI)\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // Getters\\r\\n    function checkDegreeOfStudent(\\r\\n        address student\\r\\n    ) external view returns (string memory) {\\r\\n        return s_studentToDegree[student];\\r\\n    }\\r\\n\\r\\n    function checkScoreOfStudent(\\r\\n        address student\\r\\n    ) public view returns (uint256) {\\r\\n        return s_studentToScore[student];\\r\\n    }\\r\\n\\r\\n    function isStudentDegreeIssued(\\r\\n        address student\\r\\n    ) public view returns (bool) {\\r\\n        return s_issuedDegrees[student];\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns (address) {\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getTokenCounter() public view returns (Counters.Counter memory) {\\r\\n        return _tokenIds;\\r\\n    }\\r\\n\\r\\n    function getDegreeMaxScore() public view returns (uint256) {\\r\\n        return s_degreeMaxScore;\\r\\n    }\\r\\n\\r\\n    function getDegreeImage() public view returns (string memory) {\\r\\n        return s_degreeImage;\\r\\n    }\\r\\n\\r\\n    function getDegreeMajor() public view returns (string memory) {\\r\\n        return s_degreeMajor;\\r\\n    }\\r\\n\\r\\n    function getDegreeType() public view returns (string memory) {\\r\\n        return s_degreeType;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x63022bc92eaf0f04ccbf8bc6663d115c1ab135e6f5983f7ab26cbf1c8deff15d\",\"license\":\"MIT\"},\"contracts/dependancies/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa4c79103a9f511b1ba6dde6524b16f0a385103526201d50658c67f160141c495\",\"license\":\"MIT\"},\"contracts/dependancies/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC165.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC165} interface.\\r\\n *\\r\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\r\\n * for the additional interface id that will be supported. For example:\\r\\n *\\r\\n * ```solidity\\r\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\r\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\r\\n * }\\r\\n * ```\\r\\n *\\r\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\r\\n */\\r\\nabstract contract ERC165 is IERC165 {\\r\\n    /**\\r\\n     * @dev See {IERC165-supportsInterface}.\\r\\n     */\\r\\n    function supportsInterface(\\r\\n        bytes4 interfaceId\\r\\n    ) public view virtual override returns (bool) {\\r\\n        return interfaceId == type(IERC165).interfaceId;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x595ffa968dc588f6d779ef9f73f26144dc29cb8c771a41aa0b79c834d86fc18b\",\"license\":\"MIT\"},\"contracts/dependancies/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./Context.sol\\\";\\r\\nimport \\\"./ERC165.sol\\\";\\r\\nimport \\\"./IERC721.sol\\\";\\r\\nimport \\\"./IERC721Metadata.sol\\\";\\r\\nimport \\\"./IERC721Receiver.sol\\\";\\r\\nimport \\\"./librairies/Address.sol\\\";\\r\\nimport \\\"./librairies/Strings.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\\r\\n\\r\\n/**\\r\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\r\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\r\\n * {ERC721Enumerable}.\\r\\n */\\r\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\r\\n    using Address for address;\\r\\n    using Strings for uint256;\\r\\n\\r\\n    // Token name\\r\\n    string private _name;\\r\\n\\r\\n    // Token symbol\\r\\n    string private _symbol;\\r\\n\\r\\n    // Mapping from token ID to owner address\\r\\n    mapping(uint256 => address) private _owners;\\r\\n\\r\\n    // Mapping owner address to token count\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    // Mapping from token ID to approved address\\r\\n    mapping(uint256 => address) private _tokenApprovals;\\r\\n\\r\\n    // Mapping from owner to operator approvals\\r\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\r\\n     */\\r\\n    constructor(string memory name_, string memory symbol_) {\\r\\n        _name = name_;\\r\\n        _symbol = symbol_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC165-supportsInterface}.\\r\\n     */\\r\\n    function supportsInterface(\\r\\n        bytes4 interfaceId\\r\\n    ) public view virtual override(ERC165, IERC165) returns (bool) {\\r\\n        return\\r\\n            interfaceId == type(IERC721).interfaceId ||\\r\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\r\\n            super.supportsInterface(interfaceId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(\\r\\n        address owner\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        require(\\r\\n            owner != address(0),\\r\\n            \\\"ERC721: balance query for the zero address\\\"\\r\\n        );\\r\\n        return _balances[owner];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-ownerOf}.\\r\\n     */\\r\\n    function ownerOf(\\r\\n        uint256 tokenId\\r\\n    ) public view virtual override returns (address) {\\r\\n        address owner = _owners[tokenId];\\r\\n        require(\\r\\n            owner != address(0),\\r\\n            \\\"ERC721: owner query for nonexistent token\\\"\\r\\n        );\\r\\n        return owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721Metadata-name}.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721Metadata-symbol}.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721Metadata-tokenURI}.\\r\\n     */\\r\\n    function tokenURI(\\r\\n        uint256 tokenId\\r\\n    ) public view virtual override returns (string memory) {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721Metadata: URI query for nonexistent token\\\"\\r\\n        );\\r\\n\\r\\n        string memory baseURI = _baseURI();\\r\\n        return\\r\\n            bytes(baseURI).length > 0\\r\\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\\r\\n                : \\\"\\\";\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\r\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\r\\n     * by default, can be overridden in child contracts.\\r\\n     */\\r\\n    function _baseURI() internal view virtual returns (string memory) {\\r\\n        return \\\"\\\";\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-approve}.\\r\\n     */\\r\\n    function approve(address to, uint256 tokenId) public virtual override {\\r\\n        address owner = ERC721.ownerOf(tokenId);\\r\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\r\\n\\r\\n        require(\\r\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\r\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\r\\n        );\\r\\n\\r\\n        _approve(to, tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-getApproved}.\\r\\n     */\\r\\n    function getApproved(\\r\\n        uint256 tokenId\\r\\n    ) public view virtual override returns (address) {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721: approved query for nonexistent token\\\"\\r\\n        );\\r\\n\\r\\n        return _tokenApprovals[tokenId];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-setApprovalForAll}.\\r\\n     */\\r\\n    function setApprovalForAll(\\r\\n        address operator,\\r\\n        bool approved\\r\\n    ) public virtual override {\\r\\n        _setApprovalForAll(_msgSender(), operator, approved);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-isApprovedForAll}.\\r\\n     */\\r\\n    function isApprovedForAll(\\r\\n        address owner,\\r\\n        address operator\\r\\n    ) public view virtual override returns (bool) {\\r\\n        return _operatorApprovals[owner][operator];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-transferFrom}.\\r\\n     */\\r\\n    // function transferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) public virtual override {\\r\\n    //     //solhint-disable-next-line max-line-length\\r\\n    //     require(\\r\\n    //         _isApprovedOrOwner(_msgSender(), tokenId),\\r\\n    //         \\\"ERC721: transfer caller is not owner nor approved\\\"\\r\\n    //     );\\r\\n\\r\\n    //     _transfer(from, to, tokenId);\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-safeTransferFrom}.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) public virtual override {\\r\\n    //     safeTransferFrom(from, to, tokenId, \\\"\\\");\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-safeTransferFrom}.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId,\\r\\n    //     bytes memory _data\\r\\n    // ) public virtual override {\\r\\n    //     require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\r\\n    //     _safeTransfer(from, to, tokenId, _data);\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\r\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\r\\n     *\\r\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\r\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function _safeTransfer(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId,\\r\\n    //     bytes memory _data\\r\\n    // ) internal virtual {\\r\\n    //     _transfer(from, to, tokenId);\\r\\n    //     require(\\r\\n    //         _checkOnERC721Received(from, to, tokenId, _data),\\r\\n    //         \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns whether `tokenId` exists.\\r\\n     *\\r\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\r\\n     *\\r\\n     * Tokens start existing when they are minted (`_mint`),\\r\\n     * and stop existing when they are burned (`_burn`).\\r\\n     */\\r\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\r\\n        return _owners[tokenId] != address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function _isApprovedOrOwner(\\r\\n        address spender,\\r\\n        uint256 tokenId\\r\\n    ) internal view virtual returns (bool) {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721: operator query for nonexistent token\\\"\\r\\n        );\\r\\n        address owner = ERC721.ownerOf(tokenId);\\r\\n        return (spender == owner ||\\r\\n            isApprovedForAll(owner, spender) ||\\r\\n            getApproved(tokenId) == spender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must not exist.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\r\\n        _safeMint(to, tokenId, \\\"\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\r\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\r\\n     */\\r\\n    function _safeMint(\\r\\n        address to,\\r\\n        uint256 tokenId,\\r\\n        bytes memory _data\\r\\n    ) internal virtual {\\r\\n        _mint(to, tokenId);\\r\\n        require(\\r\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\r\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints `tokenId` and transfers it to `to`.\\r\\n     *\\r\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must not exist.\\r\\n     * - `to` cannot be the zero address.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function _mint(address to, uint256 tokenId) internal virtual {\\r\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\r\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), to, tokenId);\\r\\n\\r\\n        _balances[to] += 1;\\r\\n        _owners[tokenId] = to;\\r\\n\\r\\n        emit Transfer(address(0), to, tokenId);\\r\\n\\r\\n        _afterTokenTransfer(address(0), to, tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `tokenId`.\\r\\n     * The approval is cleared when the token is burned.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function _burn(uint256 tokenId) internal virtual {\\r\\n        address owner = ERC721.ownerOf(tokenId);\\r\\n\\r\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\r\\n\\r\\n        // Clear approvals\\r\\n        _approve(address(0), tokenId);\\r\\n\\r\\n        _balances[owner] -= 1;\\r\\n        delete _owners[tokenId];\\r\\n\\r\\n        emit Transfer(owner, address(0), tokenId);\\r\\n\\r\\n        _afterTokenTransfer(owner, address(0), tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers `tokenId` from `from` to `to`.\\r\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must be owned by `from`.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function _transfer(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) internal virtual {\\r\\n    //     require(\\r\\n    //         ERC721.ownerOf(tokenId) == from,\\r\\n    //         \\\"ERC721: transfer from incorrect owner\\\"\\r\\n    //     );\\r\\n    //     require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\r\\n\\r\\n    //     _beforeTokenTransfer(from, to, tokenId);\\r\\n\\r\\n    //     // Clear approvals from the previous owner\\r\\n    //     _approve(address(0), tokenId);\\r\\n\\r\\n    //     _balances[from] -= 1;\\r\\n    //     _balances[to] += 1;\\r\\n    //     _owners[tokenId] = to;\\r\\n\\r\\n    //     emit Transfer(from, to, tokenId);\\r\\n\\r\\n    //     _afterTokenTransfer(from, to, tokenId);\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev Approve `to` to operate on `tokenId`\\r\\n     *\\r\\n     * Emits a {Approval} event.\\r\\n     */\\r\\n    function _approve(address to, uint256 tokenId) internal virtual {\\r\\n        _tokenApprovals[tokenId] = to;\\r\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\r\\n     *\\r\\n     * Emits a {ApprovalForAll} event.\\r\\n     */\\r\\n    function _setApprovalForAll(\\r\\n        address owner,\\r\\n        address operator,\\r\\n        bool approved\\r\\n    ) internal virtual {\\r\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\r\\n        _operatorApprovals[owner][operator] = approved;\\r\\n        emit ApprovalForAll(owner, operator, approved);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\r\\n     * The call is not executed if the target address is not a contract.\\r\\n     *\\r\\n     * @param from address representing the previous owner of the given token ID\\r\\n     * @param to target address that will receive the tokens\\r\\n     * @param tokenId uint256 ID of the token to be transferred\\r\\n     * @param _data bytes optional data to send along with the call\\r\\n     * @return bool whether the call correctly returned the expected magic value\\r\\n     */\\r\\n    function _checkOnERC721Received(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 tokenId,\\r\\n        bytes memory _data\\r\\n    ) private returns (bool) {\\r\\n        if (to.isContract()) {\\r\\n            try\\r\\n                IERC721Receiver(to).onERC721Received(\\r\\n                    _msgSender(),\\r\\n                    from,\\r\\n                    tokenId,\\r\\n                    _data\\r\\n                )\\r\\n            returns (bytes4 retval) {\\r\\n                return retval == IERC721Receiver.onERC721Received.selector;\\r\\n            } catch (bytes memory reason) {\\r\\n                if (reason.length == 0) {\\r\\n                    revert(\\r\\n                        \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\r\\n                    );\\r\\n                } else {\\r\\n                    assembly {\\r\\n                        revert(add(32, reason), mload(reason))\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            return true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any token transfer. This includes minting\\r\\n     * and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\r\\n     * transferred to `to`.\\r\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\r\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 tokenId\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 tokenId\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0xa0634ee7808dc3d6a6d5a2f2911545a56717baacee73e1ffd128397995050ad8\",\"license\":\"MIT\"},\"contracts/dependancies/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./ERC721.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721URIStorage.sol)\\r\\n\\r\\n/**\\r\\n * @dev ERC721 token with storage based token URI management.\\r\\n */\\r\\nabstract contract ERC721URIStorage is ERC721 {\\r\\n    using Strings for uint256;\\r\\n\\r\\n    // Optional mapping for token URIs\\r\\n    mapping(uint256 => string) private _tokenURIs;\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721Metadata-tokenURI}.\\r\\n     */\\r\\n    function tokenURI(\\r\\n        uint256 tokenId\\r\\n    ) public view virtual override returns (string memory) {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721URIStorage: URI query for nonexistent token\\\"\\r\\n        );\\r\\n\\r\\n        string memory _tokenURI = _tokenURIs[tokenId];\\r\\n        string memory base = _baseURI();\\r\\n\\r\\n        // If there is no base URI, return the token URI.\\r\\n        if (bytes(base).length == 0) {\\r\\n            return _tokenURI;\\r\\n        }\\r\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\r\\n        if (bytes(_tokenURI).length > 0) {\\r\\n            return string(abi.encodePacked(base, _tokenURI));\\r\\n        }\\r\\n\\r\\n        return super.tokenURI(tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function _setTokenURI(\\r\\n        uint256 tokenId,\\r\\n        string memory _tokenURI\\r\\n    ) internal virtual {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721URIStorage: URI set of nonexistent token\\\"\\r\\n        );\\r\\n        _tokenURIs[tokenId] = _tokenURI;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `tokenId`.\\r\\n     * The approval is cleared when the token is burned.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function _burn(uint256 tokenId) internal virtual override {\\r\\n        super._burn(tokenId);\\r\\n\\r\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\r\\n            delete _tokenURIs[tokenId];\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2fc499d3754f7c7d10c8dcaa5ebf2cf618e433334c47a834ff0f1854c7bb9cb3\",\"license\":\"MIT\"},\"contracts/dependancies/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC165 standard, as defined in the\\r\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\r\\n *\\r\\n * Implementers can declare support of contract interfaces, which can then be\\r\\n * queried by others ({ERC165Checker}).\\r\\n *\\r\\n * For an implementation, see {ERC165}.\\r\\n */\\r\\ninterface IERC165 {\\r\\n    /**\\r\\n     * @dev Returns true if this contract implements the interface defined by\\r\\n     * `interfaceId`. See the corresponding\\r\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\r\\n     * to learn more about how these ids are created.\\r\\n     *\\r\\n     * This function call must use less than 30 000 gas.\\r\\n     */\\r\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x7010fc6285f84bdfacd656dfeef7fce93d06146958a5d6c252e30e7721a84e02\",\"license\":\"MIT\"},\"contracts/dependancies/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC165.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\\r\\n\\r\\n/**\\r\\n * @dev Required interface of an ERC721 compliant contract.\\r\\n */\\r\\ninterface IERC721 is IERC165 {\\r\\n    /**\\r\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\r\\n     */\\r\\n    event Transfer(\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 indexed tokenId\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\r\\n     */\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed approved,\\r\\n        uint256 indexed tokenId\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\r\\n     */\\r\\n    event ApprovalForAll(\\r\\n        address indexed owner,\\r\\n        address indexed operator,\\r\\n        bool approved\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of tokens in ``owner``'s account.\\r\\n     */\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the owner of the `tokenId` token.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId,\\r\\n    //     bytes calldata data\\r\\n    // ) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\r\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\r\\n     *\\r\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function transferFrom(address from, address to, uint256 tokenId) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\r\\n     * The approval is cleared when the token is transferred.\\r\\n     *\\r\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The caller must own the token or be an approved operator.\\r\\n     * - `tokenId` must exist.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address to, uint256 tokenId) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Approve or remove `operator` as an operator for the caller.\\r\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The `operator` cannot be the caller.\\r\\n     *\\r\\n     * Emits an {ApprovalForAll} event.\\r\\n     */\\r\\n    function setApprovalForAll(address operator, bool _approved) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the account approved for `tokenId` token.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function getApproved(\\r\\n        uint256 tokenId\\r\\n    ) external view returns (address operator);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\r\\n     *\\r\\n     * See {setApprovalForAll}\\r\\n     */\\r\\n    function isApprovedForAll(\\r\\n        address owner,\\r\\n        address operator\\r\\n    ) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x1fbda1b7ffe59460857ad50d5ef1400c7675b30582fefd900e6511458e20c25e\",\"license\":\"MIT\"},\"contracts/dependancies/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC721.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\r\\n\\r\\n/**\\r\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\r\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\r\\n */\\r\\ninterface IERC721Metadata is IERC721 {\\r\\n    /**\\r\\n     * @dev Returns the token collection name.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the token collection symbol.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\r\\n     */\\r\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0xe44454c2c617086390b509b63edfb9c893977095e1034660901356a648a523f5\",\"license\":\"MIT\"},\"contracts/dependancies/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\r\\n\\r\\n/**\\r\\n * @title ERC721 token receiver interface\\r\\n * @dev Interface for any contract that wants to support safeTransfers\\r\\n * from ERC721 asset contracts.\\r\\n */\\r\\ninterface IERC721Receiver {\\r\\n    /**\\r\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\r\\n     * by `operator` from `from`, this function is called.\\r\\n     *\\r\\n     * It must return its Solidity selector to confirm the token transfer.\\r\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\r\\n     *\\r\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\r\\n     */\\r\\n    function onERC721Received(\\r\\n        address operator,\\r\\n        address from,\\r\\n        uint256 tokenId,\\r\\n        bytes calldata data\\r\\n    ) external returns (bytes4);\\r\\n}\\r\\n\",\"keccak256\":\"0x61b8fcb968bcdd451f6122f4ff06d5086a4eca98b6111e3c20a581fa17c4e5b4\",\"license\":\"MIT\"},\"contracts/dependancies/librairies/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\r\\n\\r\\n/**\\r\\n * @dev Collection of functions related to the address type\\r\\n */\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\r\\n     *\\r\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\r\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\r\\n     * constructor.\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // This method relies on extcodesize/address.code.length, which returns 0\\r\\n        // for contracts in construction, since the code is only stored at the end\\r\\n        // of the constructor execution.\\r\\n\\r\\n        return account.code.length > 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(\\r\\n            address(this).balance >= amount,\\r\\n            \\\"Address: insufficient balance\\\"\\r\\n        );\\r\\n\\r\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\r\\n        require(\\r\\n            success,\\r\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain `call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data\\r\\n    ) internal returns (bytes memory) {\\r\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value\\r\\n    ) internal returns (bytes memory) {\\r\\n        return\\r\\n            functionCallWithValue(\\r\\n                target,\\r\\n                data,\\r\\n                value,\\r\\n                \\\"Address: low-level call with value failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(\\r\\n            address(this).balance >= value,\\r\\n            \\\"Address: insufficient balance for call\\\"\\r\\n        );\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.call{value: value}(\\r\\n            data\\r\\n        );\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(\\r\\n        address target,\\r\\n        bytes memory data\\r\\n    ) internal view returns (bytes memory) {\\r\\n        return\\r\\n            functionStaticCall(\\r\\n                target,\\r\\n                data,\\r\\n                \\\"Address: low-level static call failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal view returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function functionDelegateCall(\\r\\n        address target,\\r\\n        bytes memory data\\r\\n    ) internal returns (bytes memory) {\\r\\n        return\\r\\n            functionDelegateCall(\\r\\n                target,\\r\\n                data,\\r\\n                \\\"Address: low-level delegate call failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function functionDelegateCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\r\\n     * revert reason using the provided one.\\r\\n     *\\r\\n     * _Available since v4.3._\\r\\n     */\\r\\n    function verifyCallResult(\\r\\n        bool success,\\r\\n        bytes memory returndata,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x05b5c90d9e116a41a67fc07deaf6c7bc24b0996e43ee07460e340e6a50bc40c6\",\"license\":\"MIT\"},\"contracts/dependancies/librairies/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\\r\\n\\r\\n/**\\r\\n * @dev Provides a set of functions to operate with Base64 strings.\\r\\n */\\r\\nlibrary Base64 {\\r\\n    /**\\r\\n     * @dev Base64 Encoding/Decoding Table\\r\\n     */\\r\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\r\\n     */\\r\\n    function encode(bytes memory data) internal pure returns (string memory) {\\r\\n        /**\\r\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\r\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\r\\n         */\\r\\n        if (data.length == 0) return \\\"\\\";\\r\\n\\r\\n        // Loads the table into memory\\r\\n        string memory table = _TABLE;\\r\\n\\r\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\r\\n        // and split into 4 numbers of 6 bits.\\r\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\r\\n        // - `data.length + 2`  -> Round up\\r\\n        // - `/ 3`              -> Number of 3-bytes chunks\\r\\n        // - `4 *`              -> 4 characters for each chunk\\r\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\r\\n\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\r\\n            let tablePtr := add(table, 1)\\r\\n\\r\\n            // Prepare result pointer, jump over length\\r\\n            let resultPtr := add(result, 32)\\r\\n\\r\\n            // Run over the input, 3 bytes at a time\\r\\n            for {\\r\\n                let dataPtr := data\\r\\n                let endPtr := add(data, mload(data))\\r\\n            } lt(dataPtr, endPtr) {\\r\\n\\r\\n            } {\\r\\n                // Advance 3 bytes\\r\\n                dataPtr := add(dataPtr, 3)\\r\\n                let input := mload(dataPtr)\\r\\n\\r\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\r\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\r\\n                // and apply logical AND with 0x3F which is the number of\\r\\n                // the previous character in the ASCII table prior to the Base64 Table\\r\\n                // The result is then added to the table to get the character to write,\\r\\n                // and finally write it in the result pointer but with a left shift\\r\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\r\\n\\r\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\r\\n                resultPtr := add(resultPtr, 1) // Advance\\r\\n\\r\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\r\\n                resultPtr := add(resultPtr, 1) // Advance\\r\\n\\r\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\r\\n                resultPtr := add(resultPtr, 1) // Advance\\r\\n\\r\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\r\\n                resultPtr := add(resultPtr, 1) // Advance\\r\\n            }\\r\\n\\r\\n            // When data `bytes` is not exactly 3 bytes long\\r\\n            // it is padded with `=` characters at the end\\r\\n            switch mod(mload(data), 3)\\r\\n            case 1 {\\r\\n                mstore8(sub(resultPtr, 1), 0x3d)\\r\\n                mstore8(sub(resultPtr, 2), 0x3d)\\r\\n            }\\r\\n            case 2 {\\r\\n                mstore8(sub(resultPtr, 1), 0x3d)\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa4334bfed288f5b9edd1adf7bd19238cfd43ecd10bc039669470bad71545d525\",\"license\":\"MIT\"},\"contracts/dependancies/librairies/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\r\\n\\r\\n/**\\r\\n * @title Counters\\r\\n * @author Matt Condon (@shrugs)\\r\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\r\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\r\\n *\\r\\n * Include with `using Counters for Counters.Counter;`\\r\\n */\\r\\nlibrary Counters {\\r\\n    struct Counter {\\r\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\r\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\r\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\r\\n        uint256 _value; // default: 0\\r\\n    }\\r\\n\\r\\n    function current(Counter storage counter) internal view returns (uint256) {\\r\\n        return counter._value;\\r\\n    }\\r\\n\\r\\n    function increment(Counter storage counter) internal {\\r\\n        unchecked {\\r\\n            counter._value += 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function decrement(Counter storage counter) internal {\\r\\n        uint256 value = counter._value;\\r\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\r\\n        unchecked {\\r\\n            counter._value = value - 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function reset(Counter storage counter) internal {\\r\\n        counter._value = 0;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x317787127117c79d1617d600100541ad8d14a29d7474309464c5ce39933c79eb\",\"license\":\"MIT\"},\"contracts/dependancies/librairies/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\r\\n\\r\\n/**\\r\\n * @dev String operations.\\r\\n */\\r\\nlibrary Strings {\\r\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\r\\n     */\\r\\n    function toString(uint256 value) internal pure returns (string memory) {\\r\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\r\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\r\\n\\r\\n        if (value == 0) {\\r\\n            return \\\"0\\\";\\r\\n        }\\r\\n        uint256 temp = value;\\r\\n        uint256 digits;\\r\\n        while (temp != 0) {\\r\\n            digits++;\\r\\n            temp /= 10;\\r\\n        }\\r\\n        bytes memory buffer = new bytes(digits);\\r\\n        while (value != 0) {\\r\\n            digits -= 1;\\r\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\r\\n            value /= 10;\\r\\n        }\\r\\n        return string(buffer);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\r\\n     */\\r\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\r\\n        if (value == 0) {\\r\\n            return \\\"0x00\\\";\\r\\n        }\\r\\n        uint256 temp = value;\\r\\n        uint256 length = 0;\\r\\n        while (temp != 0) {\\r\\n            length++;\\r\\n            temp >>= 8;\\r\\n        }\\r\\n        return toHexString(value, length);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\r\\n     */\\r\\n    function toHexString(\\r\\n        uint256 value,\\r\\n        uint256 length\\r\\n    ) internal pure returns (string memory) {\\r\\n        bytes memory buffer = new bytes(2 * length + 2);\\r\\n        buffer[0] = \\\"0\\\";\\r\\n        buffer[1] = \\\"x\\\";\\r\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\r\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\r\\n            value >>= 4;\\r\\n        }\\r\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\r\\n        return string(buffer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x86cea98eee2d178706fccf2e034533666d219b3e9db5bd9b9d582fbfaa4f068c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":434,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":436,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":440,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":444,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":448,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":454,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1107,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":23,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"_tokenIds","offset":0,"slot":"7","type":"t_struct(Counter)1711_storage"},{"astId":27,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"s_degreeMaxScore","offset":0,"slot":"8","type":"t_uint256"},{"astId":29,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"s_degreeImage","offset":0,"slot":"9","type":"t_string_storage"},{"astId":31,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"s_degreeMajor","offset":0,"slot":"10","type":"t_string_storage"},{"astId":33,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"s_degreeType","offset":0,"slot":"11","type":"t_string_storage"},{"astId":37,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"s_issuedDegrees","offset":0,"slot":"12","type":"t_mapping(t_address,t_bool)"},{"astId":41,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"s_studentToScore","offset":0,"slot":"13","type":"t_mapping(t_address,t_uint256)"},{"astId":45,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"s_studentToDegree","offset":0,"slot":"14","type":"t_mapping(t_address,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_string_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)1711_storage":{"encoding":"inplace","label":"struct Counters.Counter","members":[{"astId":1710,"contract":"contracts/UniversityDegree.sol:UniversityDegree","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"notice":"Non-transferable Soul Bound Token (NFT) smart contract for university degrees and diplomas","version":1}}},"contracts/dependancies/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependancies/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependancies/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa4c79103a9f511b1ba6dde6524b16f0a385103526201d50658c67f160141c495\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependancies/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependancies/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependancies/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC165.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC165} interface.\\r\\n *\\r\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\r\\n * for the additional interface id that will be supported. For example:\\r\\n *\\r\\n * ```solidity\\r\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\r\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\r\\n * }\\r\\n * ```\\r\\n *\\r\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\r\\n */\\r\\nabstract contract ERC165 is IERC165 {\\r\\n    /**\\r\\n     * @dev See {IERC165-supportsInterface}.\\r\\n     */\\r\\n    function supportsInterface(\\r\\n        bytes4 interfaceId\\r\\n    ) public view virtual override returns (bool) {\\r\\n        return interfaceId == type(IERC165).interfaceId;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x595ffa968dc588f6d779ef9f73f26144dc29cb8c771a41aa0b79c834d86fc18b\",\"license\":\"MIT\"},\"contracts/dependancies/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC165 standard, as defined in the\\r\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\r\\n *\\r\\n * Implementers can declare support of contract interfaces, which can then be\\r\\n * queried by others ({ERC165Checker}).\\r\\n *\\r\\n * For an implementation, see {ERC165}.\\r\\n */\\r\\ninterface IERC165 {\\r\\n    /**\\r\\n     * @dev Returns true if this contract implements the interface defined by\\r\\n     * `interfaceId`. See the corresponding\\r\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\r\\n     * to learn more about how these ids are created.\\r\\n     *\\r\\n     * This function call must use less than 30 000 gas.\\r\\n     */\\r\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x7010fc6285f84bdfacd656dfeef7fce93d06146958a5d6c252e30e7721a84e02\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependancies/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_471":{"entryPoint":null,"id":471,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"423:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:13"},"nodeType":"YulFunctionCall","src":"433:12:13"},"nodeType":"YulExpressionStatement","src":"433:12:13"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:13"},{"body":{"nodeType":"YulBlock","src":"546:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:13"},"nodeType":"YulFunctionCall","src":"556:12:13"},"nodeType":"YulExpressionStatement","src":"556:12:13"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:13"},{"body":{"nodeType":"YulBlock","src":"628:54:13","statements":[{"nodeType":"YulAssignment","src":"638:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:13"},"nodeType":"YulFunctionCall","src":"652:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:13"},"nodeType":"YulFunctionCall","src":"668:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:13"},"nodeType":"YulFunctionCall","src":"648:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:13","type":""}],"src":"580:102:13"},{"body":{"nodeType":"YulBlock","src":"716:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:13"},"nodeType":"YulFunctionCall","src":"726:88:13"},"nodeType":"YulExpressionStatement","src":"726:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:13"},"nodeType":"YulFunctionCall","src":"823:15:13"},"nodeType":"YulExpressionStatement","src":"823:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:13"},"nodeType":"YulFunctionCall","src":"847:15:13"},"nodeType":"YulExpressionStatement","src":"847:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:13"},{"body":{"nodeType":"YulBlock","src":"917:238:13","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:13"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:13"},"nodeType":"YulFunctionCall","src":"957:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:13"},"nodeType":"YulFunctionCall","src":"945:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:13"},"nodeType":"YulFunctionCall","src":"1098:18:13"},"nodeType":"YulExpressionStatement","src":"1098:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:13"},"nodeType":"YulFunctionCall","src":"1036:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:13"},"nodeType":"YulFunctionCall","src":"1072:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:13"},"nodeType":"YulFunctionCall","src":"1033:62:13"},"nodeType":"YulIf","src":"1030:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:13"},"nodeType":"YulFunctionCall","src":"1127:22:13"},"nodeType":"YulExpressionStatement","src":"1127:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:13","type":""}],"src":"874:281:13"},{"body":{"nodeType":"YulBlock","src":"1202:88:13","statements":[{"nodeType":"YulAssignment","src":"1212:30:13","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:13"},"nodeType":"YulFunctionCall","src":"1222:20:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:13"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:13"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:13"},"nodeType":"YulFunctionCall","src":"1251:33:13"},"nodeType":"YulExpressionStatement","src":"1251:33:13"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:13","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:13","type":""}],"src":"1161:129:13"},{"body":{"nodeType":"YulBlock","src":"1363:241:13","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:13"},"nodeType":"YulFunctionCall","src":"1470:18:13"},"nodeType":"YulExpressionStatement","src":"1470:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:13"},"nodeType":"YulFunctionCall","src":"1437:30:13"},"nodeType":"YulIf","src":"1434:56:13"},{"nodeType":"YulAssignment","src":"1500:37:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:13"},"nodeType":"YulFunctionCall","src":"1508:29:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:13"}]},{"nodeType":"YulAssignment","src":"1574:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:13"},"nodeType":"YulFunctionCall","src":"1582:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:13"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:13","type":""}],"src":"1296:308:13"},{"body":{"nodeType":"YulBlock","src":"1659:258:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:13"},"nodeType":"YulFunctionCall","src":"1759:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:13"},"nodeType":"YulFunctionCall","src":"1778:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:13"},"nodeType":"YulFunctionCall","src":"1772:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:13"},"nodeType":"YulFunctionCall","src":"1752:39:13"},"nodeType":"YulExpressionStatement","src":"1752:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:13"},"nodeType":"YulFunctionCall","src":"1696:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:13","statements":[{"nodeType":"YulAssignment","src":"1712:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:13"},"nodeType":"YulFunctionCall","src":"1717:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:13","statements":[]},"src":"1688:113:13"},{"body":{"nodeType":"YulBlock","src":"1835:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:13"},"nodeType":"YulFunctionCall","src":"1881:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:13"},"nodeType":"YulFunctionCall","src":"1874:27:13"},"nodeType":"YulExpressionStatement","src":"1874:27:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:13"},"nodeType":"YulFunctionCall","src":"1813:13:13"},"nodeType":"YulIf","src":"1810:101:13"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:13","type":""}],"src":"1610:307:13"},{"body":{"nodeType":"YulBlock","src":"2018:326:13","statements":[{"nodeType":"YulAssignment","src":"2028:75:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:13"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:13"},"nodeType":"YulFunctionCall","src":"2053:49:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:13"},"nodeType":"YulFunctionCall","src":"2037:66:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:13"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:13"},"nodeType":"YulFunctionCall","src":"2112:21:13"},"nodeType":"YulExpressionStatement","src":"2112:21:13"},{"nodeType":"YulVariableDeclaration","src":"2142:27:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:13"},"nodeType":"YulFunctionCall","src":"2153:16:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:13"},"nodeType":"YulFunctionCall","src":"2209:79:13"},"nodeType":"YulExpressionStatement","src":"2209:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:13"},"nodeType":"YulFunctionCall","src":"2184:16:13"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:13"},"nodeType":"YulFunctionCall","src":"2181:25:13"},"nodeType":"YulIf","src":"2178:112:13"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:13"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:13"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:13"},"nodeType":"YulFunctionCall","src":"2299:39:13"},"nodeType":"YulExpressionStatement","src":"2299:39:13"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:13","type":""}],"src":"1923:421:13"},{"body":{"nodeType":"YulBlock","src":"2437:282:13","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:13"},"nodeType":"YulFunctionCall","src":"2488:79:13"},"nodeType":"YulExpressionStatement","src":"2488:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:13"},"nodeType":"YulFunctionCall","src":"2461:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:13"},"nodeType":"YulFunctionCall","src":"2457:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:13"},"nodeType":"YulFunctionCall","src":"2450:35:13"},"nodeType":"YulIf","src":"2447:122:13"},{"nodeType":"YulVariableDeclaration","src":"2578:27:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:13"},"nodeType":"YulFunctionCall","src":"2592:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:13"},"nodeType":"YulFunctionCall","src":"2682:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:13"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:13"},"nodeType":"YulFunctionCall","src":"2623:90:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:13"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:13","type":""}],"src":"2364:355:13"},{"body":{"nodeType":"YulBlock","src":"2839:739:13","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:13"},"nodeType":"YulFunctionCall","src":"2887:79:13"},"nodeType":"YulExpressionStatement","src":"2887:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:13"},"nodeType":"YulFunctionCall","src":"2856:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:13"},"nodeType":"YulFunctionCall","src":"2852:32:13"},"nodeType":"YulIf","src":"2849:119:13"},{"nodeType":"YulBlock","src":"2978:291:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:13"},"nodeType":"YulFunctionCall","src":"3013:17:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:13"},"nodeType":"YulFunctionCall","src":"3007:24:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:13"},"nodeType":"YulFunctionCall","src":"3080:79:13"},"nodeType":"YulExpressionStatement","src":"3080:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:13"},"nodeType":"YulFunctionCall","src":"3047:30:13"},"nodeType":"YulIf","src":"3044:117:13"},{"nodeType":"YulAssignment","src":"3175:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:13"},"nodeType":"YulFunctionCall","src":"3227:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:13"},"nodeType":"YulFunctionCall","src":"3185:74:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:13"}]}]},{"nodeType":"YulBlock","src":"3279:292:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:13"},"nodeType":"YulFunctionCall","src":"3314:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:13"},"nodeType":"YulFunctionCall","src":"3308:25:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:13"},"nodeType":"YulFunctionCall","src":"3382:79:13"},"nodeType":"YulExpressionStatement","src":"3382:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:13"},"nodeType":"YulFunctionCall","src":"3349:30:13"},"nodeType":"YulIf","src":"3346:117:13"},{"nodeType":"YulAssignment","src":"3477:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:13"},"nodeType":"YulFunctionCall","src":"3529:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:13"},"nodeType":"YulFunctionCall","src":"3487:74:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:13"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:13","type":""}],"src":"2725:853:13"},{"body":{"nodeType":"YulBlock","src":"3612:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:13"},"nodeType":"YulFunctionCall","src":"3622:88:13"},"nodeType":"YulExpressionStatement","src":"3622:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:13"},"nodeType":"YulFunctionCall","src":"3719:15:13"},"nodeType":"YulExpressionStatement","src":"3719:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:13"},"nodeType":"YulFunctionCall","src":"3743:15:13"},"nodeType":"YulExpressionStatement","src":"3743:15:13"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:13"},{"body":{"nodeType":"YulBlock","src":"3821:269:13","statements":[{"nodeType":"YulAssignment","src":"3831:22:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:13","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:13"},"nodeType":"YulFunctionCall","src":"3841:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:13"},"nodeType":"YulFunctionCall","src":"3888:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:13","statements":[{"nodeType":"YulAssignment","src":"3953:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:13"},"nodeType":"YulFunctionCall","src":"3963:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:13"},"nodeType":"YulFunctionCall","src":"3912:26:13"},"nodeType":"YulIf","src":"3909:81:13"},{"body":{"nodeType":"YulBlock","src":"4042:42:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:13"},"nodeType":"YulFunctionCall","src":"4056:18:13"},"nodeType":"YulExpressionStatement","src":"4056:18:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:13"},"nodeType":"YulFunctionCall","src":"4026:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:13"},"nodeType":"YulFunctionCall","src":"4003:38:13"},"nodeType":"YulIf","src":"4000:84:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:13","type":""}],"src":"3770:320:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001b3238038062001b328339818101604052810190620000379190620002be565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61177a80620003b86000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461016d57806395d89b411461019d578063a22cb465146101bb578063c87b56dd146101d7578063e985e9c5146102075761009e565b806301ffc9a7146100a357806306fdde03146100d3578063081812fc146100f1578063095ea7b3146101215780636352211e1461013d575b600080fd5b6100bd60048036038101906100b89190610d6e565b610237565b6040516100ca9190610db6565b60405180910390f35b6100db610319565b6040516100e89190610e6a565b60405180910390f35b61010b60048036038101906101069190610ec2565b6103ab565b6040516101189190610f30565b60405180910390f35b61013b60048036038101906101369190610f77565b610430565b005b61015760048036038101906101529190610ec2565b610548565b6040516101649190610f30565b60405180910390f35b61018760048036038101906101829190610fb7565b6105fa565b6040516101949190610ff3565b60405180910390f35b6101a56106b2565b6040516101b29190610e6a565b60405180910390f35b6101d560048036038101906101d0919061103a565b610744565b005b6101f160048036038101906101ec9190610ec2565b61075a565b6040516101fe9190610e6a565b60405180910390f35b610221600480360381019061021c919061107a565b610801565b60405161022e9190610db6565b60405180910390f35b60007f591d4bc0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061030257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610312575061031182610895565b5b9050919050565b606060008054610328906110e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610354906110e9565b80156103a15780601f10610376576101008083540402835291602001916103a1565b820191906000526020600020905b81548152906001019060200180831161038457829003601f168201915b5050505050905090565b60006103b6826108ff565b6103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec9061118d565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061043b82610548565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a39061121f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166104cb61096b565b73ffffffffffffffffffffffffffffffffffffffff1614806104fa57506104f9816104f461096b565b610801565b5b610539576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610530906112b1565b60405180910390fd5b6105438383610973565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890611343565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561066b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610662906113d5565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546106c1906110e9565b80601f01602080910402602001604051908101604052809291908181526020018280546106ed906110e9565b801561073a5780601f1061070f5761010080835404028352916020019161073a565b820191906000526020600020905b81548152906001019060200180831161071d57829003601f168201915b5050505050905090565b61075661074f61096b565b8383610a2c565b5050565b6060610765826108ff565b6107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b90611467565b60405180910390fd5b60006107ae610b99565b905060008151116107ce57604051806020016040528060008152506107f9565b806107d884610bb0565b6040516020016107e99291906114c3565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166109e683610548565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9290611533565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610b8c9190610db6565b60405180910390a3505050565b606060405180602001604052806000815250905090565b60606000821415610bf8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610d0c565b600082905060005b60008214610c2a578080610c1390611582565b915050600a82610c2391906115fa565b9150610c00565b60008167ffffffffffffffff811115610c4657610c4561162b565b5b6040519080825280601f01601f191660200182016040528015610c785781602001600182028036833780820191505090505b5090505b60008514610d0557600182610c91919061165a565b9150600a85610ca0919061168e565b6030610cac91906116bf565b60f81b818381518110610cc257610cc1611715565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610cfe91906115fa565b9450610c7c565b8093505050505b919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610d4b81610d16565b8114610d5657600080fd5b50565b600081359050610d6881610d42565b92915050565b600060208284031215610d8457610d83610d11565b5b6000610d9284828501610d59565b91505092915050565b60008115159050919050565b610db081610d9b565b82525050565b6000602082019050610dcb6000830184610da7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e0b578082015181840152602081019050610df0565b83811115610e1a576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e3c82610dd1565b610e468185610ddc565b9350610e56818560208601610ded565b610e5f81610e20565b840191505092915050565b60006020820190508181036000830152610e848184610e31565b905092915050565b6000819050919050565b610e9f81610e8c565b8114610eaa57600080fd5b50565b600081359050610ebc81610e96565b92915050565b600060208284031215610ed857610ed7610d11565b5b6000610ee684828501610ead565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f1a82610eef565b9050919050565b610f2a81610f0f565b82525050565b6000602082019050610f456000830184610f21565b92915050565b610f5481610f0f565b8114610f5f57600080fd5b50565b600081359050610f7181610f4b565b92915050565b60008060408385031215610f8e57610f8d610d11565b5b6000610f9c85828601610f62565b9250506020610fad85828601610ead565b9150509250929050565b600060208284031215610fcd57610fcc610d11565b5b6000610fdb84828501610f62565b91505092915050565b610fed81610e8c565b82525050565b60006020820190506110086000830184610fe4565b92915050565b61101781610d9b565b811461102257600080fd5b50565b6000813590506110348161100e565b92915050565b6000806040838503121561105157611050610d11565b5b600061105f85828601610f62565b925050602061107085828601611025565b9150509250929050565b6000806040838503121561109157611090610d11565b5b600061109f85828601610f62565b92505060206110b085828601610f62565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061110157607f821691505b60208210811415611115576111146110ba565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000611177602c83610ddc565b91506111828261111b565b604082019050919050565b600060208201905081810360008301526111a68161116a565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611209602183610ddc565b9150611214826111ad565b604082019050919050565b60006020820190508181036000830152611238816111fc565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b600061129b603883610ddc565b91506112a68261123f565b604082019050919050565b600060208201905081810360008301526112ca8161128e565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b600061132d602983610ddc565b9150611338826112d1565b604082019050919050565b6000602082019050818103600083015261135c81611320565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b60006113bf602a83610ddc565b91506113ca82611363565b604082019050919050565b600060208201905081810360008301526113ee816113b2565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000611451602f83610ddc565b915061145c826113f5565b604082019050919050565b6000602082019050818103600083015261148081611444565b9050919050565b600081905092915050565b600061149d82610dd1565b6114a78185611487565b93506114b7818560208601610ded565b80840191505092915050565b60006114cf8285611492565b91506114db8284611492565b91508190509392505050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061151d601983610ddc565b9150611528826114e7565b602082019050919050565b6000602082019050818103600083015261154c81611510565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061158d82610e8c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115c0576115bf611553565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061160582610e8c565b915061161083610e8c565b9250826116205761161f6115cb565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061166582610e8c565b915061167083610e8c565b92508282101561168357611682611553565b5b828203905092915050565b600061169982610e8c565b91506116a483610e8c565b9250826116b4576116b36115cb565b5b828206905092915050565b60006116ca82610e8c565b91506116d583610e8c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561170a57611709611553565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122095b1ee18bc45980c028bdd63a668cd2a74e1da20bab13b0018fc3afb8472e8aa64736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B32 CODESIZE SUB DUP1 PUSH3 0x1B32 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x177A DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x207 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH2 0x744 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x591D4BC000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x302 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x312 JUMPI POP PUSH2 0x311 DUP3 PUSH2 0x895 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x328 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x354 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x376 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x384 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B6 DUP3 PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0x118D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x548 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4CB PUSH2 0x96B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x4FA JUMPI POP PUSH2 0x4F9 DUP2 PUSH2 0x4F4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST JUMPDEST PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x530 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x543 DUP4 DUP4 PUSH2 0x973 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x662 SWAP1 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x6C1 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6ED SWAP1 PUSH2 0x10E9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x70F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x71D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x756 PUSH2 0x74F PUSH2 0x96B JUMP JUMPDEST DUP4 DUP4 PUSH2 0xA2C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x765 DUP3 PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP1 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7AE PUSH2 0xB99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F9 JUMP JUMPDEST DUP1 PUSH2 0x7D8 DUP5 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7E9 SWAP3 SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E6 DUP4 PUSH2 0x548 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA92 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB8C SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0xC2A JUMPI DUP1 DUP1 PUSH2 0xC13 SWAP1 PUSH2 0x1582 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0xC23 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST SWAP2 POP PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC46 JUMPI PUSH2 0xC45 PUSH2 0x162B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC78 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0xD05 JUMPI PUSH1 0x1 DUP3 PUSH2 0xC91 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0xCA0 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH1 0x30 PUSH2 0xCAC SWAP2 SWAP1 PUSH2 0x16BF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCC2 JUMPI PUSH2 0xCC1 PUSH2 0x1715 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0xCFE SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST SWAP5 POP PUSH2 0xC7C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4B DUP2 PUSH2 0xD16 JUMP JUMPDEST DUP2 EQ PUSH2 0xD56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD68 DUP2 PUSH2 0xD42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD83 PUSH2 0xD11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD92 DUP5 DUP3 DUP6 ADD PUSH2 0xD59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB0 DUP2 PUSH2 0xD9B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDF0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE1A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3C DUP3 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xE46 DUP2 DUP6 PUSH2 0xDDC JUMP JUMPDEST SWAP4 POP PUSH2 0xE56 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE5F DUP2 PUSH2 0xE20 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE84 DUP2 DUP5 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE9F DUP2 PUSH2 0xE8C JUMP JUMPDEST DUP2 EQ PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEBC DUP2 PUSH2 0xE96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED8 JUMPI PUSH2 0xED7 PUSH2 0xD11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE6 DUP5 DUP3 DUP6 ADD PUSH2 0xEAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1A DUP3 PUSH2 0xEEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF2A DUP2 PUSH2 0xF0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF45 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF54 DUP2 PUSH2 0xF0F JUMP JUMPDEST DUP2 EQ PUSH2 0xF5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF71 DUP2 PUSH2 0xF4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF8E JUMPI PUSH2 0xF8D PUSH2 0xD11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF9C DUP6 DUP3 DUP7 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFAD DUP6 DUP3 DUP7 ADD PUSH2 0xEAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCD JUMPI PUSH2 0xFCC PUSH2 0xD11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFDB DUP5 DUP3 DUP6 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFED DUP2 PUSH2 0xE8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1008 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1017 DUP2 PUSH2 0xD9B JUMP JUMPDEST DUP2 EQ PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1034 DUP2 PUSH2 0x100E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1050 PUSH2 0xD11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x105F DUP6 DUP3 DUP7 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1070 DUP6 DUP3 DUP7 ADD PUSH2 0x1025 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1091 JUMPI PUSH2 0x1090 PUSH2 0xD11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x109F DUP6 DUP3 DUP7 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10B0 DUP6 DUP3 DUP7 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1101 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1115 JUMPI PUSH2 0x1114 PUSH2 0x10BA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1177 PUSH1 0x2C DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x1182 DUP3 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11A6 DUP2 PUSH2 0x116A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1209 PUSH1 0x21 DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x1214 DUP3 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1238 DUP2 PUSH2 0x11FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129B PUSH1 0x38 DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x12A6 DUP3 PUSH2 0x123F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12CA DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132D PUSH1 0x29 DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x1338 DUP3 PUSH2 0x12D1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x135C DUP2 PUSH2 0x1320 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BF PUSH1 0x2A DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x13CA DUP3 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13EE DUP2 PUSH2 0x13B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1451 PUSH1 0x2F DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x145C DUP3 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1480 DUP2 PUSH2 0x1444 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149D DUP3 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0x14A7 DUP2 DUP6 PUSH2 0x1487 JUMP JUMPDEST SWAP4 POP PUSH2 0x14B7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDED JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CF DUP3 DUP6 PUSH2 0x1492 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DB DUP3 DUP5 PUSH2 0x1492 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151D PUSH1 0x19 DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x1528 DUP3 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x154C DUP2 PUSH2 0x1510 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x158D DUP3 PUSH2 0xE8C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x15C0 JUMPI PUSH2 0x15BF PUSH2 0x1553 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1605 DUP3 PUSH2 0xE8C JUMP JUMPDEST SWAP2 POP PUSH2 0x1610 DUP4 PUSH2 0xE8C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1620 JUMPI PUSH2 0x161F PUSH2 0x15CB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1665 DUP3 PUSH2 0xE8C JUMP JUMPDEST SWAP2 POP PUSH2 0x1670 DUP4 PUSH2 0xE8C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1682 PUSH2 0x1553 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1699 DUP3 PUSH2 0xE8C JUMP JUMPDEST SWAP2 POP PUSH2 0x16A4 DUP4 PUSH2 0xE8C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0x15CB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CA DUP3 PUSH2 0xE8C JUMP JUMPDEST SWAP2 POP PUSH2 0x16D5 DUP4 PUSH2 0xE8C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x170A JUMPI PUSH2 0x1709 PUSH2 0x1553 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xB1 0xEE XOR 0xBC GASLIMIT SWAP9 0xC MUL DUP12 0xDD PUSH4 0xA668CD2A PUSH21 0xE1DA20BAB13B0018FC3AFB8472E8AA64736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"604:14968:3:-:0;;;1391:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1466:5;1458;:13;;;;;;;;;;;;:::i;:::-;;1492:7;1482;:17;;;;;;;;;;;;:::i;:::-;;1391:116;;604:14968;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;604:14968:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_977":{"entryPoint":2419,"id":977,"parameterSlots":2,"returnSlots":0},"@_baseURI_625":{"entryPoint":2969,"id":625,"parameterSlots":0,"returnSlots":1},"@_exists_742":{"entryPoint":2303,"id":742,"parameterSlots":1,"returnSlots":1},"@_msgSender_374":{"entryPoint":2411,"id":374,"parameterSlots":0,"returnSlots":1},"@_setApprovalForAll_1009":{"entryPoint":2604,"id":1009,"parameterSlots":3,"returnSlots":0},"@approve_668":{"entryPoint":1072,"id":668,"parameterSlots":2,"returnSlots":0},"@balanceOf_526":{"entryPoint":1530,"id":526,"parameterSlots":1,"returnSlots":1},"@getApproved_689":{"entryPoint":939,"id":689,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_724":{"entryPoint":2049,"id":724,"parameterSlots":2,"returnSlots":1},"@name_564":{"entryPoint":793,"id":564,"parameterSlots":0,"returnSlots":1},"@ownerOf_554":{"entryPoint":1352,"id":554,"parameterSlots":1,"returnSlots":1},"@setApprovalForAll_706":{"entryPoint":1860,"id":706,"parameterSlots":2,"returnSlots":0},"@supportsInterface_407":{"entryPoint":2197,"id":407,"parameterSlots":1,"returnSlots":1},"@supportsInterface_502":{"entryPoint":567,"id":502,"parameterSlots":1,"returnSlots":1},"@symbol_574":{"entryPoint":1714,"id":574,"parameterSlots":0,"returnSlots":1},"@toString_1864":{"entryPoint":2992,"id":1864,"parameterSlots":1,"returnSlots":1},"@tokenURI_616":{"entryPoint":1882,"id":616,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3938,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":4133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":3417,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3757,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4218,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_bool":{"entryPoint":4154,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3959,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3438,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3778,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3873,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3495,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":5392,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack":{"entryPoint":4750,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack":{"entryPoint":5042,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack":{"entryPoint":4896,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack":{"entryPoint":4458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack":{"entryPoint":5188,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":4604,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4068,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5315,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3888,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3690,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5427,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4785,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5077,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4931,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5223,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4639,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4083,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3537,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3548,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5255,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5823,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5626,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5722,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3855,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3483,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":3350,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3823,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3724,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":3565,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4329,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":5506,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":5774,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5459,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":5579,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4282,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5909,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5675,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3345,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3616,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":5351,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d":{"entryPoint":4671,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba":{"entryPoint":4963,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397":{"entryPoint":4817,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d":{"entryPoint":4379,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb":{"entryPoint":5109,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":4525,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3915,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":4110,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":3394,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3734,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17372:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"378:105:13","statements":[{"nodeType":"YulAssignment","src":"388:89:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:13","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:13"},"nodeType":"YulFunctionCall","src":"399:78:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:13"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:13","type":""}],"src":"334:149:13"},{"body":{"nodeType":"YulBlock","src":"531:78:13","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:13"},"nodeType":"YulFunctionCall","src":"589:12:13"},"nodeType":"YulExpressionStatement","src":"589:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:13"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:13"},"nodeType":"YulFunctionCall","src":"561:23:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:13"},"nodeType":"YulFunctionCall","src":"551:34:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:13"},"nodeType":"YulFunctionCall","src":"544:42:13"},"nodeType":"YulIf","src":"541:62:13"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:13","type":""}],"src":"489:120:13"},{"body":{"nodeType":"YulBlock","src":"666:86:13","statements":[{"nodeType":"YulAssignment","src":"676:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:13"},"nodeType":"YulFunctionCall","src":"685:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:13"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:13"},"nodeType":"YulFunctionCall","src":"714:32:13"},"nodeType":"YulExpressionStatement","src":"714:32:13"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:13","type":""}],"src":"615:137:13"},{"body":{"nodeType":"YulBlock","src":"823:262:13","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:13"},"nodeType":"YulFunctionCall","src":"871:79:13"},"nodeType":"YulExpressionStatement","src":"871:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:13"},"nodeType":"YulFunctionCall","src":"840:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:13"},"nodeType":"YulFunctionCall","src":"836:32:13"},"nodeType":"YulIf","src":"833:119:13"},{"nodeType":"YulBlock","src":"962:116:13","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:13"},"nodeType":"YulFunctionCall","src":"1036:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:13"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:13"},"nodeType":"YulFunctionCall","src":"1016:52:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:13"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:13","type":""}],"src":"758:327:13"},{"body":{"nodeType":"YulBlock","src":"1133:48:13","statements":[{"nodeType":"YulAssignment","src":"1143:32:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:13"},"nodeType":"YulFunctionCall","src":"1161:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:13"},"nodeType":"YulFunctionCall","src":"1154:21:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:13"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:13","type":""}],"src":"1091:90:13"},{"body":{"nodeType":"YulBlock","src":"1246:50:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:13"},"nodeType":"YulFunctionCall","src":"1268:21:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:13"},"nodeType":"YulFunctionCall","src":"1256:34:13"},"nodeType":"YulExpressionStatement","src":"1256:34:13"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:13","type":""}],"src":"1187:109:13"},{"body":{"nodeType":"YulBlock","src":"1394:118:13","statements":[{"nodeType":"YulAssignment","src":"1404:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:13"},"nodeType":"YulFunctionCall","src":"1412:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:13"},"nodeType":"YulFunctionCall","src":"1487:17:13"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:13"},"nodeType":"YulFunctionCall","src":"1440:65:13"},"nodeType":"YulExpressionStatement","src":"1440:65:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:13","type":""}],"src":"1302:210:13"},{"body":{"nodeType":"YulBlock","src":"1577:40:13","statements":[{"nodeType":"YulAssignment","src":"1588:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:13"},"nodeType":"YulFunctionCall","src":"1598:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:13"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:13","type":""}],"src":"1518:99:13"},{"body":{"nodeType":"YulBlock","src":"1719:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:13"},"nodeType":"YulFunctionCall","src":"1729:19:13"},"nodeType":"YulExpressionStatement","src":"1729:19:13"},{"nodeType":"YulAssignment","src":"1757:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:13"},"nodeType":"YulFunctionCall","src":"1772:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:13","type":""}],"src":"1623:169:13"},{"body":{"nodeType":"YulBlock","src":"1847:258:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:13"},"nodeType":"YulFunctionCall","src":"1947:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:13"},"nodeType":"YulFunctionCall","src":"1966:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:13"},"nodeType":"YulFunctionCall","src":"1960:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:13"},"nodeType":"YulFunctionCall","src":"1940:39:13"},"nodeType":"YulExpressionStatement","src":"1940:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:13"},"nodeType":"YulFunctionCall","src":"1884:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:13","statements":[{"nodeType":"YulAssignment","src":"1900:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:13"},"nodeType":"YulFunctionCall","src":"1905:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:13","statements":[]},"src":"1876:113:13"},{"body":{"nodeType":"YulBlock","src":"2023:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:13"},"nodeType":"YulFunctionCall","src":"2069:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:13"},"nodeType":"YulFunctionCall","src":"2062:27:13"},"nodeType":"YulExpressionStatement","src":"2062:27:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:13"},"nodeType":"YulFunctionCall","src":"2001:13:13"},"nodeType":"YulIf","src":"1998:101:13"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:13","type":""}],"src":"1798:307:13"},{"body":{"nodeType":"YulBlock","src":"2159:54:13","statements":[{"nodeType":"YulAssignment","src":"2169:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:13"},"nodeType":"YulFunctionCall","src":"2183:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:13"},"nodeType":"YulFunctionCall","src":"2199:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:13"},"nodeType":"YulFunctionCall","src":"2179:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:13","type":""}],"src":"2111:102:13"},{"body":{"nodeType":"YulBlock","src":"2311:272:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:13"},"nodeType":"YulFunctionCall","src":"2335:39:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:13"},"nodeType":"YulFunctionCall","src":"2390:71:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:13"},"nodeType":"YulFunctionCall","src":"2492:16:13"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:13"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:13"},"nodeType":"YulFunctionCall","src":"2470:52:13"},"nodeType":"YulExpressionStatement","src":"2470:52:13"},{"nodeType":"YulAssignment","src":"2531:46:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:13"},"nodeType":"YulFunctionCall","src":"2547:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:13"},"nodeType":"YulFunctionCall","src":"2538:39:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:13"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:13","type":""}],"src":"2219:364:13"},{"body":{"nodeType":"YulBlock","src":"2707:195:13","statements":[{"nodeType":"YulAssignment","src":"2717:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:13"},"nodeType":"YulFunctionCall","src":"2725:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:13"},"nodeType":"YulFunctionCall","src":"2760:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:13"},"nodeType":"YulFunctionCall","src":"2779:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:13"},"nodeType":"YulFunctionCall","src":"2753:47:13"},"nodeType":"YulExpressionStatement","src":"2753:47:13"},{"nodeType":"YulAssignment","src":"2809:86:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:13"},"nodeType":"YulFunctionCall","src":"2817:78:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:13","type":""}],"src":"2589:313:13"},{"body":{"nodeType":"YulBlock","src":"2953:32:13","statements":[{"nodeType":"YulAssignment","src":"2963:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:13","type":""}],"src":"2908:77:13"},{"body":{"nodeType":"YulBlock","src":"3034:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:13"},"nodeType":"YulFunctionCall","src":"3093:12:13"},"nodeType":"YulExpressionStatement","src":"3093:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:13"},"nodeType":"YulFunctionCall","src":"3064:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:13"},"nodeType":"YulFunctionCall","src":"3054:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:13"},"nodeType":"YulFunctionCall","src":"3047:43:13"},"nodeType":"YulIf","src":"3044:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:13","type":""}],"src":"2991:122:13"},{"body":{"nodeType":"YulBlock","src":"3171:87:13","statements":[{"nodeType":"YulAssignment","src":"3181:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:13"},"nodeType":"YulFunctionCall","src":"3190:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:13"},"nodeType":"YulFunctionCall","src":"3219:33:13"},"nodeType":"YulExpressionStatement","src":"3219:33:13"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:13","type":""}],"src":"3119:139:13"},{"body":{"nodeType":"YulBlock","src":"3330:263:13","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:13"},"nodeType":"YulFunctionCall","src":"3378:79:13"},"nodeType":"YulExpressionStatement","src":"3378:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:13"},"nodeType":"YulFunctionCall","src":"3347:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:13"},"nodeType":"YulFunctionCall","src":"3343:32:13"},"nodeType":"YulIf","src":"3340:119:13"},{"nodeType":"YulBlock","src":"3469:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:13"},"nodeType":"YulFunctionCall","src":"3544:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:13"},"nodeType":"YulFunctionCall","src":"3523:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:13"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:13","type":""}],"src":"3264:329:13"},{"body":{"nodeType":"YulBlock","src":"3644:81:13","statements":[{"nodeType":"YulAssignment","src":"3654:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:13"},"nodeType":"YulFunctionCall","src":"3665:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:13","type":""}],"src":"3599:126:13"},{"body":{"nodeType":"YulBlock","src":"3776:51:13","statements":[{"nodeType":"YulAssignment","src":"3786:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:13"},"nodeType":"YulFunctionCall","src":"3797:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:13","type":""}],"src":"3731:96:13"},{"body":{"nodeType":"YulBlock","src":"3898:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:13"},"nodeType":"YulFunctionCall","src":"3920:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:13"},"nodeType":"YulFunctionCall","src":"3908:37:13"},"nodeType":"YulExpressionStatement","src":"3908:37:13"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:13","type":""}],"src":"3833:118:13"},{"body":{"nodeType":"YulBlock","src":"4055:124:13","statements":[{"nodeType":"YulAssignment","src":"4065:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:13"},"nodeType":"YulFunctionCall","src":"4073:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:13"},"nodeType":"YulFunctionCall","src":"4154:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:13"},"nodeType":"YulFunctionCall","src":"4101:71:13"},"nodeType":"YulExpressionStatement","src":"4101:71:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:13","type":""}],"src":"3957:222:13"},{"body":{"nodeType":"YulBlock","src":"4228:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:13"},"nodeType":"YulFunctionCall","src":"4287:12:13"},"nodeType":"YulExpressionStatement","src":"4287:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:13"},"nodeType":"YulFunctionCall","src":"4258:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:13"},"nodeType":"YulFunctionCall","src":"4248:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:13"},"nodeType":"YulFunctionCall","src":"4241:43:13"},"nodeType":"YulIf","src":"4238:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:13","type":""}],"src":"4185:122:13"},{"body":{"nodeType":"YulBlock","src":"4365:87:13","statements":[{"nodeType":"YulAssignment","src":"4375:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:13"},"nodeType":"YulFunctionCall","src":"4384:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:13"},"nodeType":"YulFunctionCall","src":"4413:33:13"},"nodeType":"YulExpressionStatement","src":"4413:33:13"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:13","type":""}],"src":"4313:139:13"},{"body":{"nodeType":"YulBlock","src":"4541:391:13","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:13"},"nodeType":"YulFunctionCall","src":"4589:79:13"},"nodeType":"YulExpressionStatement","src":"4589:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:13"},"nodeType":"YulFunctionCall","src":"4558:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:13"},"nodeType":"YulFunctionCall","src":"4554:32:13"},"nodeType":"YulIf","src":"4551:119:13"},{"nodeType":"YulBlock","src":"4680:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:13"},"nodeType":"YulFunctionCall","src":"4755:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:13"},"nodeType":"YulFunctionCall","src":"4734:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:13"}]}]},{"nodeType":"YulBlock","src":"4807:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:13"},"nodeType":"YulFunctionCall","src":"4883:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:13"},"nodeType":"YulFunctionCall","src":"4862:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:13","type":""}],"src":"4458:474:13"},{"body":{"nodeType":"YulBlock","src":"5004:263:13","statements":[{"body":{"nodeType":"YulBlock","src":"5050:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5052:77:13"},"nodeType":"YulFunctionCall","src":"5052:79:13"},"nodeType":"YulExpressionStatement","src":"5052:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5025:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5034:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5021:3:13"},"nodeType":"YulFunctionCall","src":"5021:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"5046:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5017:3:13"},"nodeType":"YulFunctionCall","src":"5017:32:13"},"nodeType":"YulIf","src":"5014:119:13"},{"nodeType":"YulBlock","src":"5143:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5158:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5172:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5162:6:13","type":""}]},{"nodeType":"YulAssignment","src":"5187:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5222:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"5233:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5218:3:13"},"nodeType":"YulFunctionCall","src":"5218:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5242:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5197:20:13"},"nodeType":"YulFunctionCall","src":"5197:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5187:6:13"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4974:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4985:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4997:6:13","type":""}],"src":"4938:329:13"},{"body":{"nodeType":"YulBlock","src":"5338:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5355:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5378:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5360:17:13"},"nodeType":"YulFunctionCall","src":"5360:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5348:6:13"},"nodeType":"YulFunctionCall","src":"5348:37:13"},"nodeType":"YulExpressionStatement","src":"5348:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5326:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5333:3:13","type":""}],"src":"5273:118:13"},{"body":{"nodeType":"YulBlock","src":"5495:124:13","statements":[{"nodeType":"YulAssignment","src":"5505:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5517:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5528:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5513:3:13"},"nodeType":"YulFunctionCall","src":"5513:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5505:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5585:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5598:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5609:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5594:3:13"},"nodeType":"YulFunctionCall","src":"5594:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5541:43:13"},"nodeType":"YulFunctionCall","src":"5541:71:13"},"nodeType":"YulExpressionStatement","src":"5541:71:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5467:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5479:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5490:4:13","type":""}],"src":"5397:222:13"},{"body":{"nodeType":"YulBlock","src":"5665:76:13","statements":[{"body":{"nodeType":"YulBlock","src":"5719:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5728:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5731:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5721:6:13"},"nodeType":"YulFunctionCall","src":"5721:12:13"},"nodeType":"YulExpressionStatement","src":"5721:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5688:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5710:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5695:14:13"},"nodeType":"YulFunctionCall","src":"5695:21:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5685:2:13"},"nodeType":"YulFunctionCall","src":"5685:32:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5678:6:13"},"nodeType":"YulFunctionCall","src":"5678:40:13"},"nodeType":"YulIf","src":"5675:60:13"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5658:5:13","type":""}],"src":"5625:116:13"},{"body":{"nodeType":"YulBlock","src":"5796:84:13","statements":[{"nodeType":"YulAssignment","src":"5806:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5828:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5815:12:13"},"nodeType":"YulFunctionCall","src":"5815:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5806:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5868:5:13"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"5844:23:13"},"nodeType":"YulFunctionCall","src":"5844:30:13"},"nodeType":"YulExpressionStatement","src":"5844:30:13"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5774:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"5782:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5790:5:13","type":""}],"src":"5747:133:13"},{"body":{"nodeType":"YulBlock","src":"5966:388:13","statements":[{"body":{"nodeType":"YulBlock","src":"6012:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6014:77:13"},"nodeType":"YulFunctionCall","src":"6014:79:13"},"nodeType":"YulExpressionStatement","src":"6014:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5987:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"5996:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5983:3:13"},"nodeType":"YulFunctionCall","src":"5983:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"6008:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5979:3:13"},"nodeType":"YulFunctionCall","src":"5979:32:13"},"nodeType":"YulIf","src":"5976:119:13"},{"nodeType":"YulBlock","src":"6105:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6120:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6134:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6124:6:13","type":""}]},{"nodeType":"YulAssignment","src":"6149:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6184:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"6195:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6180:3:13"},"nodeType":"YulFunctionCall","src":"6180:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6204:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6159:20:13"},"nodeType":"YulFunctionCall","src":"6159:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6149:6:13"}]}]},{"nodeType":"YulBlock","src":"6232:115:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6247:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6261:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6251:6:13","type":""}]},{"nodeType":"YulAssignment","src":"6277:60:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6309:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"6320:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6305:3:13"},"nodeType":"YulFunctionCall","src":"6305:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6329:7:13"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6287:17:13"},"nodeType":"YulFunctionCall","src":"6287:50:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6277:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5928:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5939:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5951:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5959:6:13","type":""}],"src":"5886:468:13"},{"body":{"nodeType":"YulBlock","src":"6443:391:13","statements":[{"body":{"nodeType":"YulBlock","src":"6489:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6491:77:13"},"nodeType":"YulFunctionCall","src":"6491:79:13"},"nodeType":"YulExpressionStatement","src":"6491:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6464:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"6473:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6460:3:13"},"nodeType":"YulFunctionCall","src":"6460:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"6485:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6456:3:13"},"nodeType":"YulFunctionCall","src":"6456:32:13"},"nodeType":"YulIf","src":"6453:119:13"},{"nodeType":"YulBlock","src":"6582:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6597:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6611:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6601:6:13","type":""}]},{"nodeType":"YulAssignment","src":"6626:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6661:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"6672:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6657:3:13"},"nodeType":"YulFunctionCall","src":"6657:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6681:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6636:20:13"},"nodeType":"YulFunctionCall","src":"6636:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6626:6:13"}]}]},{"nodeType":"YulBlock","src":"6709:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6724:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6738:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6728:6:13","type":""}]},{"nodeType":"YulAssignment","src":"6754:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6789:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"6800:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6785:3:13"},"nodeType":"YulFunctionCall","src":"6785:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6809:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6764:20:13"},"nodeType":"YulFunctionCall","src":"6764:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6754:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6405:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6416:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6428:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6436:6:13","type":""}],"src":"6360:474:13"},{"body":{"nodeType":"YulBlock","src":"6868:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6885:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6888:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6878:6:13"},"nodeType":"YulFunctionCall","src":"6878:88:13"},"nodeType":"YulExpressionStatement","src":"6878:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6982:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6985:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6975:6:13"},"nodeType":"YulFunctionCall","src":"6975:15:13"},"nodeType":"YulExpressionStatement","src":"6975:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7006:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7009:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6999:6:13"},"nodeType":"YulFunctionCall","src":"6999:15:13"},"nodeType":"YulExpressionStatement","src":"6999:15:13"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6840:180:13"},{"body":{"nodeType":"YulBlock","src":"7077:269:13","statements":[{"nodeType":"YulAssignment","src":"7087:22:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7101:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"7107:1:13","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7097:3:13"},"nodeType":"YulFunctionCall","src":"7097:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7087:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"7118:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7148:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"7154:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7144:3:13"},"nodeType":"YulFunctionCall","src":"7144:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7122:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"7195:51:13","statements":[{"nodeType":"YulAssignment","src":"7209:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7223:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7231:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7219:3:13"},"nodeType":"YulFunctionCall","src":"7219:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7209:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7175:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7168:6:13"},"nodeType":"YulFunctionCall","src":"7168:26:13"},"nodeType":"YulIf","src":"7165:81:13"},{"body":{"nodeType":"YulBlock","src":"7298:42:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"7312:16:13"},"nodeType":"YulFunctionCall","src":"7312:18:13"},"nodeType":"YulExpressionStatement","src":"7312:18:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7262:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7285:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7293:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7282:2:13"},"nodeType":"YulFunctionCall","src":"7282:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7259:2:13"},"nodeType":"YulFunctionCall","src":"7259:38:13"},"nodeType":"YulIf","src":"7256:84:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7061:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7070:6:13","type":""}],"src":"7026:320:13"},{"body":{"nodeType":"YulBlock","src":"7458:125:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7480:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7488:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7476:3:13"},"nodeType":"YulFunctionCall","src":"7476:14:13"},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"7492:34:13","type":"","value":"ERC721: approved query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7469:6:13"},"nodeType":"YulFunctionCall","src":"7469:58:13"},"nodeType":"YulExpressionStatement","src":"7469:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7548:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7556:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7544:3:13"},"nodeType":"YulFunctionCall","src":"7544:15:13"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"7561:14:13","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7537:6:13"},"nodeType":"YulFunctionCall","src":"7537:39:13"},"nodeType":"YulExpressionStatement","src":"7537:39:13"}]},"name":"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7450:6:13","type":""}],"src":"7352:231:13"},{"body":{"nodeType":"YulBlock","src":"7735:220:13","statements":[{"nodeType":"YulAssignment","src":"7745:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7811:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7816:2:13","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7752:58:13"},"nodeType":"YulFunctionCall","src":"7752:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7745:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7917:3:13"}],"functionName":{"name":"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","nodeType":"YulIdentifier","src":"7828:88:13"},"nodeType":"YulFunctionCall","src":"7828:93:13"},"nodeType":"YulExpressionStatement","src":"7828:93:13"},{"nodeType":"YulAssignment","src":"7930:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7941:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7946:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7937:3:13"},"nodeType":"YulFunctionCall","src":"7937:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7930:3:13"}]}]},"name":"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7723:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7731:3:13","type":""}],"src":"7589:366:13"},{"body":{"nodeType":"YulBlock","src":"8132:248:13","statements":[{"nodeType":"YulAssignment","src":"8142:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8154:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8165:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8150:3:13"},"nodeType":"YulFunctionCall","src":"8150:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8142:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8189:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8200:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8185:3:13"},"nodeType":"YulFunctionCall","src":"8185:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8208:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"8214:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8204:3:13"},"nodeType":"YulFunctionCall","src":"8204:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8178:6:13"},"nodeType":"YulFunctionCall","src":"8178:47:13"},"nodeType":"YulExpressionStatement","src":"8178:47:13"},{"nodeType":"YulAssignment","src":"8234:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8368:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8242:124:13"},"nodeType":"YulFunctionCall","src":"8242:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8234:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8112:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8127:4:13","type":""}],"src":"7961:419:13"},{"body":{"nodeType":"YulBlock","src":"8492:114:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8514:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8522:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8510:3:13"},"nodeType":"YulFunctionCall","src":"8510:14:13"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"8526:34:13","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8503:6:13"},"nodeType":"YulFunctionCall","src":"8503:58:13"},"nodeType":"YulExpressionStatement","src":"8503:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8582:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8590:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8578:3:13"},"nodeType":"YulFunctionCall","src":"8578:15:13"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"8595:3:13","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8571:6:13"},"nodeType":"YulFunctionCall","src":"8571:28:13"},"nodeType":"YulExpressionStatement","src":"8571:28:13"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8484:6:13","type":""}],"src":"8386:220:13"},{"body":{"nodeType":"YulBlock","src":"8758:220:13","statements":[{"nodeType":"YulAssignment","src":"8768:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8834:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8839:2:13","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8775:58:13"},"nodeType":"YulFunctionCall","src":"8775:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8768:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8940:3:13"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"8851:88:13"},"nodeType":"YulFunctionCall","src":"8851:93:13"},"nodeType":"YulExpressionStatement","src":"8851:93:13"},{"nodeType":"YulAssignment","src":"8953:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8964:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8969:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8960:3:13"},"nodeType":"YulFunctionCall","src":"8960:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8953:3:13"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8746:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8754:3:13","type":""}],"src":"8612:366:13"},{"body":{"nodeType":"YulBlock","src":"9155:248:13","statements":[{"nodeType":"YulAssignment","src":"9165:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9177:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9188:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9173:3:13"},"nodeType":"YulFunctionCall","src":"9173:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9165:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9212:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9223:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9208:3:13"},"nodeType":"YulFunctionCall","src":"9208:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9231:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"9237:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9227:3:13"},"nodeType":"YulFunctionCall","src":"9227:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9201:6:13"},"nodeType":"YulFunctionCall","src":"9201:47:13"},"nodeType":"YulExpressionStatement","src":"9201:47:13"},{"nodeType":"YulAssignment","src":"9257:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9391:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9265:124:13"},"nodeType":"YulFunctionCall","src":"9265:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9257:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9135:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9150:4:13","type":""}],"src":"8984:419:13"},{"body":{"nodeType":"YulBlock","src":"9515:137:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9537:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9545:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9533:3:13"},"nodeType":"YulFunctionCall","src":"9533:14:13"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77","kind":"string","nodeType":"YulLiteral","src":"9549:34:13","type":"","value":"ERC721: approve caller is not ow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9526:6:13"},"nodeType":"YulFunctionCall","src":"9526:58:13"},"nodeType":"YulExpressionStatement","src":"9526:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9605:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9613:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9601:3:13"},"nodeType":"YulFunctionCall","src":"9601:15:13"},{"hexValue":"6e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"9618:26:13","type":"","value":"ner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9594:6:13"},"nodeType":"YulFunctionCall","src":"9594:51:13"},"nodeType":"YulExpressionStatement","src":"9594:51:13"}]},"name":"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9507:6:13","type":""}],"src":"9409:243:13"},{"body":{"nodeType":"YulBlock","src":"9804:220:13","statements":[{"nodeType":"YulAssignment","src":"9814:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9880:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9885:2:13","type":"","value":"56"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9821:58:13"},"nodeType":"YulFunctionCall","src":"9821:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9814:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9986:3:13"}],"functionName":{"name":"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","nodeType":"YulIdentifier","src":"9897:88:13"},"nodeType":"YulFunctionCall","src":"9897:93:13"},"nodeType":"YulExpressionStatement","src":"9897:93:13"},{"nodeType":"YulAssignment","src":"9999:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10010:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"10015:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10006:3:13"},"nodeType":"YulFunctionCall","src":"10006:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9999:3:13"}]}]},"name":"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9792:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9800:3:13","type":""}],"src":"9658:366:13"},{"body":{"nodeType":"YulBlock","src":"10201:248:13","statements":[{"nodeType":"YulAssignment","src":"10211:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10223:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10234:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10219:3:13"},"nodeType":"YulFunctionCall","src":"10219:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10211:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10258:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10269:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10254:3:13"},"nodeType":"YulFunctionCall","src":"10254:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10277:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"10283:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10273:3:13"},"nodeType":"YulFunctionCall","src":"10273:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10247:6:13"},"nodeType":"YulFunctionCall","src":"10247:47:13"},"nodeType":"YulExpressionStatement","src":"10247:47:13"},{"nodeType":"YulAssignment","src":"10303:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10437:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10311:124:13"},"nodeType":"YulFunctionCall","src":"10311:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10303:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10181:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10196:4:13","type":""}],"src":"10030:419:13"},{"body":{"nodeType":"YulBlock","src":"10561:122:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10583:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10591:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10579:3:13"},"nodeType":"YulFunctionCall","src":"10579:14:13"},{"hexValue":"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374","kind":"string","nodeType":"YulLiteral","src":"10595:34:13","type":"","value":"ERC721: owner query for nonexist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10572:6:13"},"nodeType":"YulFunctionCall","src":"10572:58:13"},"nodeType":"YulExpressionStatement","src":"10572:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10651:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10659:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10647:3:13"},"nodeType":"YulFunctionCall","src":"10647:15:13"},{"hexValue":"656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"10664:11:13","type":"","value":"ent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10640:6:13"},"nodeType":"YulFunctionCall","src":"10640:36:13"},"nodeType":"YulExpressionStatement","src":"10640:36:13"}]},"name":"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10553:6:13","type":""}],"src":"10455:228:13"},{"body":{"nodeType":"YulBlock","src":"10835:220:13","statements":[{"nodeType":"YulAssignment","src":"10845:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10911:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"10916:2:13","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10852:58:13"},"nodeType":"YulFunctionCall","src":"10852:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10845:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11017:3:13"}],"functionName":{"name":"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","nodeType":"YulIdentifier","src":"10928:88:13"},"nodeType":"YulFunctionCall","src":"10928:93:13"},"nodeType":"YulExpressionStatement","src":"10928:93:13"},{"nodeType":"YulAssignment","src":"11030:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11041:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11046:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11037:3:13"},"nodeType":"YulFunctionCall","src":"11037:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11030:3:13"}]}]},"name":"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10823:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10831:3:13","type":""}],"src":"10689:366:13"},{"body":{"nodeType":"YulBlock","src":"11232:248:13","statements":[{"nodeType":"YulAssignment","src":"11242:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11254:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11265:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11250:3:13"},"nodeType":"YulFunctionCall","src":"11250:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11242:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11289:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11300:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11285:3:13"},"nodeType":"YulFunctionCall","src":"11285:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11308:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"11314:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11304:3:13"},"nodeType":"YulFunctionCall","src":"11304:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11278:6:13"},"nodeType":"YulFunctionCall","src":"11278:47:13"},"nodeType":"YulExpressionStatement","src":"11278:47:13"},{"nodeType":"YulAssignment","src":"11334:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11468:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11342:124:13"},"nodeType":"YulFunctionCall","src":"11342:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11334:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11212:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11227:4:13","type":""}],"src":"11061:419:13"},{"body":{"nodeType":"YulBlock","src":"11592:123:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11614:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11622:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11610:3:13"},"nodeType":"YulFunctionCall","src":"11610:14:13"},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65","kind":"string","nodeType":"YulLiteral","src":"11626:34:13","type":"","value":"ERC721: balance query for the ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11603:6:13"},"nodeType":"YulFunctionCall","src":"11603:58:13"},"nodeType":"YulExpressionStatement","src":"11603:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11682:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"11690:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11678:3:13"},"nodeType":"YulFunctionCall","src":"11678:15:13"},{"hexValue":"726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"11695:12:13","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11671:6:13"},"nodeType":"YulFunctionCall","src":"11671:37:13"},"nodeType":"YulExpressionStatement","src":"11671:37:13"}]},"name":"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11584:6:13","type":""}],"src":"11486:229:13"},{"body":{"nodeType":"YulBlock","src":"11867:220:13","statements":[{"nodeType":"YulAssignment","src":"11877:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11943:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11948:2:13","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11884:58:13"},"nodeType":"YulFunctionCall","src":"11884:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11877:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12049:3:13"}],"functionName":{"name":"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","nodeType":"YulIdentifier","src":"11960:88:13"},"nodeType":"YulFunctionCall","src":"11960:93:13"},"nodeType":"YulExpressionStatement","src":"11960:93:13"},{"nodeType":"YulAssignment","src":"12062:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12073:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"12078:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12069:3:13"},"nodeType":"YulFunctionCall","src":"12069:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12062:3:13"}]}]},"name":"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11855:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11863:3:13","type":""}],"src":"11721:366:13"},{"body":{"nodeType":"YulBlock","src":"12264:248:13","statements":[{"nodeType":"YulAssignment","src":"12274:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12286:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12297:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12282:3:13"},"nodeType":"YulFunctionCall","src":"12282:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12274:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12321:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12332:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12317:3:13"},"nodeType":"YulFunctionCall","src":"12317:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12340:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"12346:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12336:3:13"},"nodeType":"YulFunctionCall","src":"12336:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12310:6:13"},"nodeType":"YulFunctionCall","src":"12310:47:13"},"nodeType":"YulExpressionStatement","src":"12310:47:13"},{"nodeType":"YulAssignment","src":"12366:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12500:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12374:124:13"},"nodeType":"YulFunctionCall","src":"12374:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12366:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12244:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12259:4:13","type":""}],"src":"12093:419:13"},{"body":{"nodeType":"YulBlock","src":"12624:128:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12646:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"12654:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12642:3:13"},"nodeType":"YulFunctionCall","src":"12642:14:13"},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f","kind":"string","nodeType":"YulLiteral","src":"12658:34:13","type":"","value":"ERC721Metadata: URI query for no"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12635:6:13"},"nodeType":"YulFunctionCall","src":"12635:58:13"},"nodeType":"YulExpressionStatement","src":"12635:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12714:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"12722:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12710:3:13"},"nodeType":"YulFunctionCall","src":"12710:15:13"},{"hexValue":"6e6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"12727:17:13","type":"","value":"nexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12703:6:13"},"nodeType":"YulFunctionCall","src":"12703:42:13"},"nodeType":"YulExpressionStatement","src":"12703:42:13"}]},"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12616:6:13","type":""}],"src":"12518:234:13"},{"body":{"nodeType":"YulBlock","src":"12904:220:13","statements":[{"nodeType":"YulAssignment","src":"12914:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12980:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"12985:2:13","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12921:58:13"},"nodeType":"YulFunctionCall","src":"12921:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12914:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13086:3:13"}],"functionName":{"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nodeType":"YulIdentifier","src":"12997:88:13"},"nodeType":"YulFunctionCall","src":"12997:93:13"},"nodeType":"YulExpressionStatement","src":"12997:93:13"},{"nodeType":"YulAssignment","src":"13099:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13110:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13115:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13106:3:13"},"nodeType":"YulFunctionCall","src":"13106:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13099:3:13"}]}]},"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12892:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12900:3:13","type":""}],"src":"12758:366:13"},{"body":{"nodeType":"YulBlock","src":"13301:248:13","statements":[{"nodeType":"YulAssignment","src":"13311:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13323:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13334:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13319:3:13"},"nodeType":"YulFunctionCall","src":"13319:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13311:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13358:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13369:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13354:3:13"},"nodeType":"YulFunctionCall","src":"13354:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13377:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"13383:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13373:3:13"},"nodeType":"YulFunctionCall","src":"13373:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13347:6:13"},"nodeType":"YulFunctionCall","src":"13347:47:13"},"nodeType":"YulExpressionStatement","src":"13347:47:13"},{"nodeType":"YulAssignment","src":"13403:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13537:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13411:124:13"},"nodeType":"YulFunctionCall","src":"13411:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13403:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13281:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13296:4:13","type":""}],"src":"13130:419:13"},{"body":{"nodeType":"YulBlock","src":"13669:34:13","statements":[{"nodeType":"YulAssignment","src":"13679:18:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"13694:3:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13679:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13641:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"13646:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13657:11:13","type":""}],"src":"13555:148:13"},{"body":{"nodeType":"YulBlock","src":"13819:267:13","statements":[{"nodeType":"YulVariableDeclaration","src":"13829:53:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13876:5:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13843:32:13"},"nodeType":"YulFunctionCall","src":"13843:39:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13833:6:13","type":""}]},{"nodeType":"YulAssignment","src":"13891:96:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13975:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"13980:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13898:76:13"},"nodeType":"YulFunctionCall","src":"13898:89:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13891:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14022:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"14029:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14018:3:13"},"nodeType":"YulFunctionCall","src":"14018:16:13"},{"name":"pos","nodeType":"YulIdentifier","src":"14036:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"14041:6:13"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"13996:21:13"},"nodeType":"YulFunctionCall","src":"13996:52:13"},"nodeType":"YulExpressionStatement","src":"13996:52:13"},{"nodeType":"YulAssignment","src":"14057:23:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14068:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"14073:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14064:3:13"},"nodeType":"YulFunctionCall","src":"14064:16:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14057:3:13"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13800:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13807:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13815:3:13","type":""}],"src":"13709:377:13"},{"body":{"nodeType":"YulBlock","src":"14276:251:13","statements":[{"nodeType":"YulAssignment","src":"14287:102:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14376:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"14385:3:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14294:81:13"},"nodeType":"YulFunctionCall","src":"14294:95:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14287:3:13"}]},{"nodeType":"YulAssignment","src":"14399:102:13","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14488:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"14497:3:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14406:81:13"},"nodeType":"YulFunctionCall","src":"14406:95:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14399:3:13"}]},{"nodeType":"YulAssignment","src":"14511:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"14518:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14511:3:13"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14247:3:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14253:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14261:6:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14272:3:13","type":""}],"src":"14092:435:13"},{"body":{"nodeType":"YulBlock","src":"14639:69:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14661:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"14669:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14657:3:13"},"nodeType":"YulFunctionCall","src":"14657:14:13"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"14673:27:13","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14650:6:13"},"nodeType":"YulFunctionCall","src":"14650:51:13"},"nodeType":"YulExpressionStatement","src":"14650:51:13"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14631:6:13","type":""}],"src":"14533:175:13"},{"body":{"nodeType":"YulBlock","src":"14860:220:13","statements":[{"nodeType":"YulAssignment","src":"14870:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14936:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14941:2:13","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14877:58:13"},"nodeType":"YulFunctionCall","src":"14877:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14870:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15042:3:13"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"14953:88:13"},"nodeType":"YulFunctionCall","src":"14953:93:13"},"nodeType":"YulExpressionStatement","src":"14953:93:13"},{"nodeType":"YulAssignment","src":"15055:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15066:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15071:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15062:3:13"},"nodeType":"YulFunctionCall","src":"15062:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15055:3:13"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14848:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14856:3:13","type":""}],"src":"14714:366:13"},{"body":{"nodeType":"YulBlock","src":"15257:248:13","statements":[{"nodeType":"YulAssignment","src":"15267:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15279:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15290:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15275:3:13"},"nodeType":"YulFunctionCall","src":"15275:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15267:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15314:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15325:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15310:3:13"},"nodeType":"YulFunctionCall","src":"15310:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15333:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"15339:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15329:3:13"},"nodeType":"YulFunctionCall","src":"15329:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15303:6:13"},"nodeType":"YulFunctionCall","src":"15303:47:13"},"nodeType":"YulExpressionStatement","src":"15303:47:13"},{"nodeType":"YulAssignment","src":"15359:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15493:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15367:124:13"},"nodeType":"YulFunctionCall","src":"15367:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15359:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15237:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15252:4:13","type":""}],"src":"15086:419:13"},{"body":{"nodeType":"YulBlock","src":"15539:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15556:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15559:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15549:6:13"},"nodeType":"YulFunctionCall","src":"15549:88:13"},"nodeType":"YulExpressionStatement","src":"15549:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15653:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15656:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15646:6:13"},"nodeType":"YulFunctionCall","src":"15646:15:13"},"nodeType":"YulExpressionStatement","src":"15646:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15677:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15680:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15670:6:13"},"nodeType":"YulFunctionCall","src":"15670:15:13"},"nodeType":"YulExpressionStatement","src":"15670:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15511:180:13"},{"body":{"nodeType":"YulBlock","src":"15740:190:13","statements":[{"nodeType":"YulAssignment","src":"15750:33:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15777:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15759:17:13"},"nodeType":"YulFunctionCall","src":"15759:24:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15750:5:13"}]},{"body":{"nodeType":"YulBlock","src":"15873:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15875:16:13"},"nodeType":"YulFunctionCall","src":"15875:18:13"},"nodeType":"YulExpressionStatement","src":"15875:18:13"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15798:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"15805:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15795:2:13"},"nodeType":"YulFunctionCall","src":"15795:77:13"},"nodeType":"YulIf","src":"15792:103:13"},{"nodeType":"YulAssignment","src":"15904:20:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15915:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"15922:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15911:3:13"},"nodeType":"YulFunctionCall","src":"15911:13:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"15904:3:13"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15726:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"15736:3:13","type":""}],"src":"15697:233:13"},{"body":{"nodeType":"YulBlock","src":"15964:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15981:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15974:6:13"},"nodeType":"YulFunctionCall","src":"15974:88:13"},"nodeType":"YulExpressionStatement","src":"15974:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16078:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16081:4:13","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16071:6:13"},"nodeType":"YulFunctionCall","src":"16071:15:13"},"nodeType":"YulExpressionStatement","src":"16071:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16102:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16105:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16095:6:13"},"nodeType":"YulFunctionCall","src":"16095:15:13"},"nodeType":"YulExpressionStatement","src":"16095:15:13"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"15936:180:13"},{"body":{"nodeType":"YulBlock","src":"16164:143:13","statements":[{"nodeType":"YulAssignment","src":"16174:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16197:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16179:17:13"},"nodeType":"YulFunctionCall","src":"16179:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16174:1:13"}]},{"nodeType":"YulAssignment","src":"16208:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16231:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16213:17:13"},"nodeType":"YulFunctionCall","src":"16213:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16208:1:13"}]},{"body":{"nodeType":"YulBlock","src":"16255:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"16257:16:13"},"nodeType":"YulFunctionCall","src":"16257:18:13"},"nodeType":"YulExpressionStatement","src":"16257:18:13"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16252:1:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16245:6:13"},"nodeType":"YulFunctionCall","src":"16245:9:13"},"nodeType":"YulIf","src":"16242:35:13"},{"nodeType":"YulAssignment","src":"16287:14:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16296:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"16299:1:13"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16292:3:13"},"nodeType":"YulFunctionCall","src":"16292:9:13"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"16287:1:13"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16153:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"16156:1:13","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"16162:1:13","type":""}],"src":"16122:185:13"},{"body":{"nodeType":"YulBlock","src":"16341:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16358:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16361:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16351:6:13"},"nodeType":"YulFunctionCall","src":"16351:88:13"},"nodeType":"YulExpressionStatement","src":"16351:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16455:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16458:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16448:6:13"},"nodeType":"YulFunctionCall","src":"16448:15:13"},"nodeType":"YulExpressionStatement","src":"16448:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16479:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16482:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16472:6:13"},"nodeType":"YulFunctionCall","src":"16472:15:13"},"nodeType":"YulExpressionStatement","src":"16472:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"16313:180:13"},{"body":{"nodeType":"YulBlock","src":"16544:146:13","statements":[{"nodeType":"YulAssignment","src":"16554:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16577:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16559:17:13"},"nodeType":"YulFunctionCall","src":"16559:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16554:1:13"}]},{"nodeType":"YulAssignment","src":"16588:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16611:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16593:17:13"},"nodeType":"YulFunctionCall","src":"16593:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16588:1:13"}]},{"body":{"nodeType":"YulBlock","src":"16635:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16637:16:13"},"nodeType":"YulFunctionCall","src":"16637:18:13"},"nodeType":"YulExpressionStatement","src":"16637:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16629:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"16632:1:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16626:2:13"},"nodeType":"YulFunctionCall","src":"16626:8:13"},"nodeType":"YulIf","src":"16623:34:13"},{"nodeType":"YulAssignment","src":"16667:17:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16679:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"16682:1:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16675:3:13"},"nodeType":"YulFunctionCall","src":"16675:9:13"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"16667:4:13"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16530:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"16533:1:13","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"16539:4:13","type":""}],"src":"16499:191:13"},{"body":{"nodeType":"YulBlock","src":"16730:142:13","statements":[{"nodeType":"YulAssignment","src":"16740:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16763:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16745:17:13"},"nodeType":"YulFunctionCall","src":"16745:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16740:1:13"}]},{"nodeType":"YulAssignment","src":"16774:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16797:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16779:17:13"},"nodeType":"YulFunctionCall","src":"16779:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16774:1:13"}]},{"body":{"nodeType":"YulBlock","src":"16821:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"16823:16:13"},"nodeType":"YulFunctionCall","src":"16823:18:13"},"nodeType":"YulExpressionStatement","src":"16823:18:13"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16818:1:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16811:6:13"},"nodeType":"YulFunctionCall","src":"16811:9:13"},"nodeType":"YulIf","src":"16808:35:13"},{"nodeType":"YulAssignment","src":"16852:14:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16861:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"16864:1:13"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"16857:3:13"},"nodeType":"YulFunctionCall","src":"16857:9:13"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"16852:1:13"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16719:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"16722:1:13","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"16728:1:13","type":""}],"src":"16696:176:13"},{"body":{"nodeType":"YulBlock","src":"16922:261:13","statements":[{"nodeType":"YulAssignment","src":"16932:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16955:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16937:17:13"},"nodeType":"YulFunctionCall","src":"16937:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16932:1:13"}]},{"nodeType":"YulAssignment","src":"16966:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16989:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16971:17:13"},"nodeType":"YulFunctionCall","src":"16971:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16966:1:13"}]},{"body":{"nodeType":"YulBlock","src":"17129:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17131:16:13"},"nodeType":"YulFunctionCall","src":"17131:18:13"},"nodeType":"YulExpressionStatement","src":"17131:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17050:1:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17057:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17125:1:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17053:3:13"},"nodeType":"YulFunctionCall","src":"17053:74:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17047:2:13"},"nodeType":"YulFunctionCall","src":"17047:81:13"},"nodeType":"YulIf","src":"17044:107:13"},{"nodeType":"YulAssignment","src":"17161:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17172:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"17175:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17168:3:13"},"nodeType":"YulFunctionCall","src":"17168:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17161:3:13"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16909:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"16912:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16918:3:13","type":""}],"src":"16878:305:13"},{"body":{"nodeType":"YulBlock","src":"17217:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17234:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17237:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17227:6:13"},"nodeType":"YulFunctionCall","src":"17227:88:13"},"nodeType":"YulExpressionStatement","src":"17227:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17331:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17334:4:13","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17324:6:13"},"nodeType":"YulFunctionCall","src":"17324:15:13"},"nodeType":"YulExpressionStatement","src":"17324:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17355:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17358:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17348:6:13"},"nodeType":"YulFunctionCall","src":"17348:15:13"},"nodeType":"YulExpressionStatement","src":"17348:15:13"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"17189:180:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approved query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not ow\")\n\n        mstore(add(memPtr, 32), \"ner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: owner query for nonexist\")\n\n        mstore(add(memPtr, 32), \"ent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: balance query for the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461016d57806395d89b411461019d578063a22cb465146101bb578063c87b56dd146101d7578063e985e9c5146102075761009e565b806301ffc9a7146100a357806306fdde03146100d3578063081812fc146100f1578063095ea7b3146101215780636352211e1461013d575b600080fd5b6100bd60048036038101906100b89190610d6e565b610237565b6040516100ca9190610db6565b60405180910390f35b6100db610319565b6040516100e89190610e6a565b60405180910390f35b61010b60048036038101906101069190610ec2565b6103ab565b6040516101189190610f30565b60405180910390f35b61013b60048036038101906101369190610f77565b610430565b005b61015760048036038101906101529190610ec2565b610548565b6040516101649190610f30565b60405180910390f35b61018760048036038101906101829190610fb7565b6105fa565b6040516101949190610ff3565b60405180910390f35b6101a56106b2565b6040516101b29190610e6a565b60405180910390f35b6101d560048036038101906101d0919061103a565b610744565b005b6101f160048036038101906101ec9190610ec2565b61075a565b6040516101fe9190610e6a565b60405180910390f35b610221600480360381019061021c919061107a565b610801565b60405161022e9190610db6565b60405180910390f35b60007f591d4bc0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061030257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610312575061031182610895565b5b9050919050565b606060008054610328906110e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610354906110e9565b80156103a15780601f10610376576101008083540402835291602001916103a1565b820191906000526020600020905b81548152906001019060200180831161038457829003601f168201915b5050505050905090565b60006103b6826108ff565b6103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec9061118d565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061043b82610548565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a39061121f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166104cb61096b565b73ffffffffffffffffffffffffffffffffffffffff1614806104fa57506104f9816104f461096b565b610801565b5b610539576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610530906112b1565b60405180910390fd5b6105438383610973565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890611343565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561066b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610662906113d5565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546106c1906110e9565b80601f01602080910402602001604051908101604052809291908181526020018280546106ed906110e9565b801561073a5780601f1061070f5761010080835404028352916020019161073a565b820191906000526020600020905b81548152906001019060200180831161071d57829003601f168201915b5050505050905090565b61075661074f61096b565b8383610a2c565b5050565b6060610765826108ff565b6107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b90611467565b60405180910390fd5b60006107ae610b99565b905060008151116107ce57604051806020016040528060008152506107f9565b806107d884610bb0565b6040516020016107e99291906114c3565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166109e683610548565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9290611533565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610b8c9190610db6565b60405180910390a3505050565b606060405180602001604052806000815250905090565b60606000821415610bf8576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610d0c565b600082905060005b60008214610c2a578080610c1390611582565b915050600a82610c2391906115fa565b9150610c00565b60008167ffffffffffffffff811115610c4657610c4561162b565b5b6040519080825280601f01601f191660200182016040528015610c785781602001600182028036833780820191505090505b5090505b60008514610d0557600182610c91919061165a565b9150600a85610ca0919061168e565b6030610cac91906116bf565b60f81b818381518110610cc257610cc1611715565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610cfe91906115fa565b9450610c7c565b8093505050505b919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610d4b81610d16565b8114610d5657600080fd5b50565b600081359050610d6881610d42565b92915050565b600060208284031215610d8457610d83610d11565b5b6000610d9284828501610d59565b91505092915050565b60008115159050919050565b610db081610d9b565b82525050565b6000602082019050610dcb6000830184610da7565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e0b578082015181840152602081019050610df0565b83811115610e1a576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e3c82610dd1565b610e468185610ddc565b9350610e56818560208601610ded565b610e5f81610e20565b840191505092915050565b60006020820190508181036000830152610e848184610e31565b905092915050565b6000819050919050565b610e9f81610e8c565b8114610eaa57600080fd5b50565b600081359050610ebc81610e96565b92915050565b600060208284031215610ed857610ed7610d11565b5b6000610ee684828501610ead565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f1a82610eef565b9050919050565b610f2a81610f0f565b82525050565b6000602082019050610f456000830184610f21565b92915050565b610f5481610f0f565b8114610f5f57600080fd5b50565b600081359050610f7181610f4b565b92915050565b60008060408385031215610f8e57610f8d610d11565b5b6000610f9c85828601610f62565b9250506020610fad85828601610ead565b9150509250929050565b600060208284031215610fcd57610fcc610d11565b5b6000610fdb84828501610f62565b91505092915050565b610fed81610e8c565b82525050565b60006020820190506110086000830184610fe4565b92915050565b61101781610d9b565b811461102257600080fd5b50565b6000813590506110348161100e565b92915050565b6000806040838503121561105157611050610d11565b5b600061105f85828601610f62565b925050602061107085828601611025565b9150509250929050565b6000806040838503121561109157611090610d11565b5b600061109f85828601610f62565b92505060206110b085828601610f62565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061110157607f821691505b60208210811415611115576111146110ba565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000611177602c83610ddc565b91506111828261111b565b604082019050919050565b600060208201905081810360008301526111a68161116a565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611209602183610ddc565b9150611214826111ad565b604082019050919050565b60006020820190508181036000830152611238816111fc565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b600061129b603883610ddc565b91506112a68261123f565b604082019050919050565b600060208201905081810360008301526112ca8161128e565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b600061132d602983610ddc565b9150611338826112d1565b604082019050919050565b6000602082019050818103600083015261135c81611320565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b60006113bf602a83610ddc565b91506113ca82611363565b604082019050919050565b600060208201905081810360008301526113ee816113b2565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000611451602f83610ddc565b915061145c826113f5565b604082019050919050565b6000602082019050818103600083015261148081611444565b9050919050565b600081905092915050565b600061149d82610dd1565b6114a78185611487565b93506114b7818560208601610ded565b80840191505092915050565b60006114cf8285611492565b91506114db8284611492565b91508190509392505050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061151d601983610ddc565b9150611528826114e7565b602082019050919050565b6000602082019050818103600083015261154c81611510565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061158d82610e8c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115c0576115bf611553565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061160582610e8c565b915061161083610e8c565b9250826116205761161f6115cb565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061166582610e8c565b915061167083610e8c565b92508282101561168357611682611553565b5b828203905092915050565b600061169982610e8c565b91506116a483610e8c565b9250826116b4576116b36115cb565b5b828206905092915050565b60006116ca82610e8c565b91506116d583610e8c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561170a57611709611553565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122095b1ee18bc45980c028bdd63a668cd2a74e1da20bab13b0018fc3afb8472e8aa64736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x207 JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x13D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xF77 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH2 0x744 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xE6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x591D4BC000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x302 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x312 JUMPI POP PUSH2 0x311 DUP3 PUSH2 0x895 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x328 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x354 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x376 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x384 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B6 DUP3 PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x3F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3EC SWAP1 PUSH2 0x118D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x548 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4CB PUSH2 0x96B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x4FA JUMPI POP PUSH2 0x4F9 DUP2 PUSH2 0x4F4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST JUMPDEST PUSH2 0x539 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x530 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x543 DUP4 DUP4 PUSH2 0x973 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E8 SWAP1 PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x66B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x662 SWAP1 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x6C1 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6ED SWAP1 PUSH2 0x10E9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x70F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x73A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x71D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x756 PUSH2 0x74F PUSH2 0x96B JUMP JUMPDEST DUP4 DUP4 PUSH2 0xA2C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x765 DUP3 PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP1 PUSH2 0x1467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7AE PUSH2 0xB99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F9 JUMP JUMPDEST DUP1 PUSH2 0x7D8 DUP5 PUSH2 0xBB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7E9 SWAP3 SWAP2 SWAP1 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E6 DUP4 PUSH2 0x548 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA92 SWAP1 PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB8C SWAP2 SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0xC2A JUMPI DUP1 DUP1 PUSH2 0xC13 SWAP1 PUSH2 0x1582 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0xC23 SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST SWAP2 POP PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC46 JUMPI PUSH2 0xC45 PUSH2 0x162B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC78 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0xD05 JUMPI PUSH1 0x1 DUP3 PUSH2 0xC91 SWAP2 SWAP1 PUSH2 0x165A JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0xCA0 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH1 0x30 PUSH2 0xCAC SWAP2 SWAP1 PUSH2 0x16BF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCC2 JUMPI PUSH2 0xCC1 PUSH2 0x1715 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0xCFE SWAP2 SWAP1 PUSH2 0x15FA JUMP JUMPDEST SWAP5 POP PUSH2 0xC7C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD4B DUP2 PUSH2 0xD16 JUMP JUMPDEST DUP2 EQ PUSH2 0xD56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD68 DUP2 PUSH2 0xD42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD83 PUSH2 0xD11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD92 DUP5 DUP3 DUP6 ADD PUSH2 0xD59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB0 DUP2 PUSH2 0xD9B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDCB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDA7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDF0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE1A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3C DUP3 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xE46 DUP2 DUP6 PUSH2 0xDDC JUMP JUMPDEST SWAP4 POP PUSH2 0xE56 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE5F DUP2 PUSH2 0xE20 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE84 DUP2 DUP5 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE9F DUP2 PUSH2 0xE8C JUMP JUMPDEST DUP2 EQ PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEBC DUP2 PUSH2 0xE96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED8 JUMPI PUSH2 0xED7 PUSH2 0xD11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEE6 DUP5 DUP3 DUP6 ADD PUSH2 0xEAD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1A DUP3 PUSH2 0xEEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF2A DUP2 PUSH2 0xF0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF45 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF54 DUP2 PUSH2 0xF0F JUMP JUMPDEST DUP2 EQ PUSH2 0xF5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF71 DUP2 PUSH2 0xF4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF8E JUMPI PUSH2 0xF8D PUSH2 0xD11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF9C DUP6 DUP3 DUP7 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFAD DUP6 DUP3 DUP7 ADD PUSH2 0xEAD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCD JUMPI PUSH2 0xFCC PUSH2 0xD11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFDB DUP5 DUP3 DUP6 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFED DUP2 PUSH2 0xE8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1008 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1017 DUP2 PUSH2 0xD9B JUMP JUMPDEST DUP2 EQ PUSH2 0x1022 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1034 DUP2 PUSH2 0x100E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1050 PUSH2 0xD11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x105F DUP6 DUP3 DUP7 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1070 DUP6 DUP3 DUP7 ADD PUSH2 0x1025 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1091 JUMPI PUSH2 0x1090 PUSH2 0xD11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x109F DUP6 DUP3 DUP7 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10B0 DUP6 DUP3 DUP7 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1101 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1115 JUMPI PUSH2 0x1114 PUSH2 0x10BA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1177 PUSH1 0x2C DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x1182 DUP3 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11A6 DUP2 PUSH2 0x116A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1209 PUSH1 0x21 DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x1214 DUP3 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1238 DUP2 PUSH2 0x11FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129B PUSH1 0x38 DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x12A6 DUP3 PUSH2 0x123F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12CA DUP2 PUSH2 0x128E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132D PUSH1 0x29 DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x1338 DUP3 PUSH2 0x12D1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x135C DUP2 PUSH2 0x1320 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BF PUSH1 0x2A DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x13CA DUP3 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13EE DUP2 PUSH2 0x13B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1451 PUSH1 0x2F DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x145C DUP3 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1480 DUP2 PUSH2 0x1444 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149D DUP3 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0x14A7 DUP2 DUP6 PUSH2 0x1487 JUMP JUMPDEST SWAP4 POP PUSH2 0x14B7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDED JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CF DUP3 DUP6 PUSH2 0x1492 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DB DUP3 DUP5 PUSH2 0x1492 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151D PUSH1 0x19 DUP4 PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP PUSH2 0x1528 DUP3 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x154C DUP2 PUSH2 0x1510 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x158D DUP3 PUSH2 0xE8C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x15C0 JUMPI PUSH2 0x15BF PUSH2 0x1553 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1605 DUP3 PUSH2 0xE8C JUMP JUMPDEST SWAP2 POP PUSH2 0x1610 DUP4 PUSH2 0xE8C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1620 JUMPI PUSH2 0x161F PUSH2 0x15CB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1665 DUP3 PUSH2 0xE8C JUMP JUMPDEST SWAP2 POP PUSH2 0x1670 DUP4 PUSH2 0xE8C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1682 PUSH2 0x1553 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1699 DUP3 PUSH2 0xE8C JUMP JUMPDEST SWAP2 POP PUSH2 0x16A4 DUP4 PUSH2 0xE8C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0x15CB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CA DUP3 PUSH2 0xE8C JUMP JUMPDEST SWAP2 POP PUSH2 0x16D5 DUP4 PUSH2 0xE8C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x170A JUMPI PUSH2 0x1709 PUSH2 0x1553 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xB1 0xEE XOR 0xBC GASLIMIT SWAP9 0xC MUL DUP12 0xDD PUSH4 0xA668CD2A PUSH21 0xE1DA20BAB13B0018FC3AFB8472E8AA64736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"604:14968:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1579:321;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2646:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4306:274;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3829:411;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2287:292;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1964:261;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2815:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4652:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2990:434;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4903:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1579:321;1697:4;1749:25;1734:40;;;:11;:40;;;;:105;;;;1806:33;1791:48;;;:11;:48;;;;1734:105;:158;;;;1856:36;1880:11;1856:23;:36::i;:::-;1734:158;1714:178;;1579:321;;;:::o;2646:100::-;2700:13;2733:5;2726:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2646:100;:::o;4306:274::-;4398:7;4440:16;4448:7;4440;:16::i;:::-;4418:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;4548:15;:24;4564:7;4548:24;;;;;;;;;;;;;;;;;;;;;4541:31;;4306:274;;;:::o;3829:411::-;3910:13;3926:23;3941:7;3926:14;:23::i;:::-;3910:39;;3974:5;3968:11;;:2;:11;;;;3960:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4068:5;4052:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;4077:37;4094:5;4101:12;:10;:12::i;:::-;4077:16;:37::i;:::-;4052:62;4030:168;;;;;;;;;;;;:::i;:::-;;;;;;;;;4211:21;4220:2;4224:7;4211:8;:21::i;:::-;3899:341;3829:411;;:::o;2287:292::-;2375:7;2395:13;2411:7;:16;2419:7;2411:16;;;;;;;;;;;;;;;;;;;;;2395:32;;2477:1;2460:19;;:5;:19;;;;2438:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;2566:5;2559:12;;;2287:292;;;:::o;1964:261::-;2052:7;2111:1;2094:19;;:5;:19;;;;2072:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;2201:9;:16;2211:5;2201:16;;;;;;;;;;;;;;;;2194:23;;1964:261;;;:::o;2815:104::-;2871:13;2904:7;2897:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2815:104;:::o;4652:180::-;4772:52;4791:12;:10;:12::i;:::-;4805:8;4815;4772:18;:52::i;:::-;4652:180;;:::o;2990:434::-;3079:13;3127:16;3135:7;3127;:16::i;:::-;3105:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;3231:21;3255:10;:8;:10::i;:::-;3231:34;;3320:1;3302:7;3296:21;:25;:120;;;;;;;;;;;;;;;;;3365:7;3374:18;:7;:16;:18::i;:::-;3348:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3296:120;3276:140;;;2990:434;;;:::o;4903:189::-;5025:4;5049:18;:25;5068:5;5049:25;;;;;;;;;;;;;;;:35;5075:8;5049:35;;;;;;;;;;;;;;;;;;;;;;;;;5042:42;;4903:189;;;;:::o;855:173:2:-;956:4;995:25;980:40;;;:11;:40;;;;973:47;;855:173;;;:::o;7857:127:3:-;7922:4;7974:1;7946:30;;:7;:16;7954:7;7946:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7939:37;;7857:127;;;:::o;657:98:1:-;710:7;737:10;730:17;;657:98;:::o;12185:174:3:-;12287:2;12260:15;:24;12276:7;12260:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12343:7;12339:2;12305:46;;12314:23;12329:7;12314:14;:23::i;:::-;12305:46;;;;;;;;;;;;12185:174;;:::o;12501:315::-;12656:8;12647:17;;:5;:17;;;;12639:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;12743:8;12705:18;:25;12724:5;12705:25;;;;;;;;;;;;;;;:35;12731:8;12705:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;12789:8;12767:41;;12782:5;12767:41;;;12799:8;12767:41;;;;;;:::i;:::-;;;;;;;;12501:315;;;:::o;3673:94::-;3724:13;3750:9;;;;;;;;;;;;;;3673:94;:::o;343:723:12:-;399:13;629:1;620:5;:10;616:53;;;647:10;;;;;;;;;;;;;;;;;;;;;616:53;679:12;694:5;679:20;;710:14;735:78;750:1;742:4;:9;735:78;;768:8;;;;;:::i;:::-;;;;799:2;791:10;;;;;:::i;:::-;;;735:78;;;823:19;855:6;845:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;823:39;;873:154;889:1;880:5;:10;873:154;;917:1;907:11;;;;;:::i;:::-;;;984:2;976:5;:10;;;;:::i;:::-;963:2;:24;;;;:::i;:::-;950:39;;933:6;940;933:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1013:2;1004:11;;;;;:::i;:::-;;;873:154;;;1051:6;1037:21;;;;;343:723;;;;:::o;88:117:13:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:329::-;4997:6;5046:2;5034:9;5025:7;5021:23;5017:32;5014:119;;;5052:79;;:::i;:::-;5014:119;5172:1;5197:53;5242:7;5233:6;5222:9;5218:22;5197:53;:::i;:::-;5187:63;;5143:117;4938:329;;;;:::o;5273:118::-;5360:24;5378:5;5360:24;:::i;:::-;5355:3;5348:37;5273:118;;:::o;5397:222::-;5490:4;5528:2;5517:9;5513:18;5505:26;;5541:71;5609:1;5598:9;5594:17;5585:6;5541:71;:::i;:::-;5397:222;;;;:::o;5625:116::-;5695:21;5710:5;5695:21;:::i;:::-;5688:5;5685:32;5675:60;;5731:1;5728;5721:12;5675:60;5625:116;:::o;5747:133::-;5790:5;5828:6;5815:20;5806:29;;5844:30;5868:5;5844:30;:::i;:::-;5747:133;;;;:::o;5886:468::-;5951:6;5959;6008:2;5996:9;5987:7;5983:23;5979:32;5976:119;;;6014:79;;:::i;:::-;5976:119;6134:1;6159:53;6204:7;6195:6;6184:9;6180:22;6159:53;:::i;:::-;6149:63;;6105:117;6261:2;6287:50;6329:7;6320:6;6309:9;6305:22;6287:50;:::i;:::-;6277:60;;6232:115;5886:468;;;;;:::o;6360:474::-;6428:6;6436;6485:2;6473:9;6464:7;6460:23;6456:32;6453:119;;;6491:79;;:::i;:::-;6453:119;6611:1;6636:53;6681:7;6672:6;6661:9;6657:22;6636:53;:::i;:::-;6626:63;;6582:117;6738:2;6764:53;6809:7;6800:6;6789:9;6785:22;6764:53;:::i;:::-;6754:63;;6709:118;6360:474;;;;;:::o;6840:180::-;6888:77;6885:1;6878:88;6985:4;6982:1;6975:15;7009:4;7006:1;6999:15;7026:320;7070:6;7107:1;7101:4;7097:12;7087:22;;7154:1;7148:4;7144:12;7175:18;7165:81;;7231:4;7223:6;7219:17;7209:27;;7165:81;7293:2;7285:6;7282:14;7262:18;7259:38;7256:84;;;7312:18;;:::i;:::-;7256:84;7077:269;7026:320;;;:::o;7352:231::-;7492:34;7488:1;7480:6;7476:14;7469:58;7561:14;7556:2;7548:6;7544:15;7537:39;7352:231;:::o;7589:366::-;7731:3;7752:67;7816:2;7811:3;7752:67;:::i;:::-;7745:74;;7828:93;7917:3;7828:93;:::i;:::-;7946:2;7941:3;7937:12;7930:19;;7589:366;;;:::o;7961:419::-;8127:4;8165:2;8154:9;8150:18;8142:26;;8214:9;8208:4;8204:20;8200:1;8189:9;8185:17;8178:47;8242:131;8368:4;8242:131;:::i;:::-;8234:139;;7961:419;;;:::o;8386:220::-;8526:34;8522:1;8514:6;8510:14;8503:58;8595:3;8590:2;8582:6;8578:15;8571:28;8386:220;:::o;8612:366::-;8754:3;8775:67;8839:2;8834:3;8775:67;:::i;:::-;8768:74;;8851:93;8940:3;8851:93;:::i;:::-;8969:2;8964:3;8960:12;8953:19;;8612:366;;;:::o;8984:419::-;9150:4;9188:2;9177:9;9173:18;9165:26;;9237:9;9231:4;9227:20;9223:1;9212:9;9208:17;9201:47;9265:131;9391:4;9265:131;:::i;:::-;9257:139;;8984:419;;;:::o;9409:243::-;9549:34;9545:1;9537:6;9533:14;9526:58;9618:26;9613:2;9605:6;9601:15;9594:51;9409:243;:::o;9658:366::-;9800:3;9821:67;9885:2;9880:3;9821:67;:::i;:::-;9814:74;;9897:93;9986:3;9897:93;:::i;:::-;10015:2;10010:3;10006:12;9999:19;;9658:366;;;:::o;10030:419::-;10196:4;10234:2;10223:9;10219:18;10211:26;;10283:9;10277:4;10273:20;10269:1;10258:9;10254:17;10247:47;10311:131;10437:4;10311:131;:::i;:::-;10303:139;;10030:419;;;:::o;10455:228::-;10595:34;10591:1;10583:6;10579:14;10572:58;10664:11;10659:2;10651:6;10647:15;10640:36;10455:228;:::o;10689:366::-;10831:3;10852:67;10916:2;10911:3;10852:67;:::i;:::-;10845:74;;10928:93;11017:3;10928:93;:::i;:::-;11046:2;11041:3;11037:12;11030:19;;10689:366;;;:::o;11061:419::-;11227:4;11265:2;11254:9;11250:18;11242:26;;11314:9;11308:4;11304:20;11300:1;11289:9;11285:17;11278:47;11342:131;11468:4;11342:131;:::i;:::-;11334:139;;11061:419;;;:::o;11486:229::-;11626:34;11622:1;11614:6;11610:14;11603:58;11695:12;11690:2;11682:6;11678:15;11671:37;11486:229;:::o;11721:366::-;11863:3;11884:67;11948:2;11943:3;11884:67;:::i;:::-;11877:74;;11960:93;12049:3;11960:93;:::i;:::-;12078:2;12073:3;12069:12;12062:19;;11721:366;;;:::o;12093:419::-;12259:4;12297:2;12286:9;12282:18;12274:26;;12346:9;12340:4;12336:20;12332:1;12321:9;12317:17;12310:47;12374:131;12500:4;12374:131;:::i;:::-;12366:139;;12093:419;;;:::o;12518:234::-;12658:34;12654:1;12646:6;12642:14;12635:58;12727:17;12722:2;12714:6;12710:15;12703:42;12518:234;:::o;12758:366::-;12900:3;12921:67;12985:2;12980:3;12921:67;:::i;:::-;12914:74;;12997:93;13086:3;12997:93;:::i;:::-;13115:2;13110:3;13106:12;13099:19;;12758:366;;;:::o;13130:419::-;13296:4;13334:2;13323:9;13319:18;13311:26;;13383:9;13377:4;13373:20;13369:1;13358:9;13354:17;13347:47;13411:131;13537:4;13411:131;:::i;:::-;13403:139;;13130:419;;;:::o;13555:148::-;13657:11;13694:3;13679:18;;13555:148;;;;:::o;13709:377::-;13815:3;13843:39;13876:5;13843:39;:::i;:::-;13898:89;13980:6;13975:3;13898:89;:::i;:::-;13891:96;;13996:52;14041:6;14036:3;14029:4;14022:5;14018:16;13996:52;:::i;:::-;14073:6;14068:3;14064:16;14057:23;;13819:267;13709:377;;;;:::o;14092:435::-;14272:3;14294:95;14385:3;14376:6;14294:95;:::i;:::-;14287:102;;14406:95;14497:3;14488:6;14406:95;:::i;:::-;14399:102;;14518:3;14511:10;;14092:435;;;;;:::o;14533:175::-;14673:27;14669:1;14661:6;14657:14;14650:51;14533:175;:::o;14714:366::-;14856:3;14877:67;14941:2;14936:3;14877:67;:::i;:::-;14870:74;;14953:93;15042:3;14953:93;:::i;:::-;15071:2;15066:3;15062:12;15055:19;;14714:366;;;:::o;15086:419::-;15252:4;15290:2;15279:9;15275:18;15267:26;;15339:9;15333:4;15329:20;15325:1;15314:9;15310:17;15303:47;15367:131;15493:4;15367:131;:::i;:::-;15359:139;;15086:419;;;:::o;15511:180::-;15559:77;15556:1;15549:88;15656:4;15653:1;15646:15;15680:4;15677:1;15670:15;15697:233;15736:3;15759:24;15777:5;15759:24;:::i;:::-;15750:33;;15805:66;15798:5;15795:77;15792:103;;;15875:18;;:::i;:::-;15792:103;15922:1;15915:5;15911:13;15904:20;;15697:233;;;:::o;15936:180::-;15984:77;15981:1;15974:88;16081:4;16078:1;16071:15;16105:4;16102:1;16095:15;16122:185;16162:1;16179:20;16197:1;16179:20;:::i;:::-;16174:25;;16213:20;16231:1;16213:20;:::i;:::-;16208:25;;16252:1;16242:35;;16257:18;;:::i;:::-;16242:35;16299:1;16296;16292:9;16287:14;;16122:185;;;;:::o;16313:180::-;16361:77;16358:1;16351:88;16458:4;16455:1;16448:15;16482:4;16479:1;16472:15;16499:191;16539:4;16559:20;16577:1;16559:20;:::i;:::-;16554:25;;16593:20;16611:1;16593:20;:::i;:::-;16588:25;;16632:1;16629;16626:8;16623:34;;;16637:18;;:::i;:::-;16623:34;16682:1;16679;16675:9;16667:17;;16499:191;;;;:::o;16696:176::-;16728:1;16745:20;16763:1;16745:20;:::i;:::-;16740:25;;16779:20;16797:1;16779:20;:::i;:::-;16774:25;;16818:1;16808:35;;16823:18;;:::i;:::-;16808:35;16864:1;16861;16857:9;16852:14;;16696:176;;;;:::o;16878:305::-;16918:3;16937:20;16955:1;16937:20;:::i;:::-;16932:25;;16971:20;16989:1;16971:20;:::i;:::-;16966:25;;17125:1;17057:66;17053:74;17050:1;17047:81;17044:107;;;17131:18;;:::i;:::-;17044:107;17175:1;17172;17168:9;17161:16;;16878:305;;;;:::o;17189:180::-;17237:77;17234:1;17227:88;17334:4;17331:1;17324:15;17358:4;17355:1;17348:15"},"gasEstimates":{"creation":{"codeDepositCost":"1202000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2879","getApproved(uint256)":"5205","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3066","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3395"},"internal":{"_afterTokenTransfer(address,address,uint256)":"infinite","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"infinite","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2269","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependancies/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependancies/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa4c79103a9f511b1ba6dde6524b16f0a385103526201d50658c67f160141c495\",\"license\":\"MIT\"},\"contracts/dependancies/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC165.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC165} interface.\\r\\n *\\r\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\r\\n * for the additional interface id that will be supported. For example:\\r\\n *\\r\\n * ```solidity\\r\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\r\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\r\\n * }\\r\\n * ```\\r\\n *\\r\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\r\\n */\\r\\nabstract contract ERC165 is IERC165 {\\r\\n    /**\\r\\n     * @dev See {IERC165-supportsInterface}.\\r\\n     */\\r\\n    function supportsInterface(\\r\\n        bytes4 interfaceId\\r\\n    ) public view virtual override returns (bool) {\\r\\n        return interfaceId == type(IERC165).interfaceId;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x595ffa968dc588f6d779ef9f73f26144dc29cb8c771a41aa0b79c834d86fc18b\",\"license\":\"MIT\"},\"contracts/dependancies/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./Context.sol\\\";\\r\\nimport \\\"./ERC165.sol\\\";\\r\\nimport \\\"./IERC721.sol\\\";\\r\\nimport \\\"./IERC721Metadata.sol\\\";\\r\\nimport \\\"./IERC721Receiver.sol\\\";\\r\\nimport \\\"./librairies/Address.sol\\\";\\r\\nimport \\\"./librairies/Strings.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\\r\\n\\r\\n/**\\r\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\r\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\r\\n * {ERC721Enumerable}.\\r\\n */\\r\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\r\\n    using Address for address;\\r\\n    using Strings for uint256;\\r\\n\\r\\n    // Token name\\r\\n    string private _name;\\r\\n\\r\\n    // Token symbol\\r\\n    string private _symbol;\\r\\n\\r\\n    // Mapping from token ID to owner address\\r\\n    mapping(uint256 => address) private _owners;\\r\\n\\r\\n    // Mapping owner address to token count\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    // Mapping from token ID to approved address\\r\\n    mapping(uint256 => address) private _tokenApprovals;\\r\\n\\r\\n    // Mapping from owner to operator approvals\\r\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\r\\n     */\\r\\n    constructor(string memory name_, string memory symbol_) {\\r\\n        _name = name_;\\r\\n        _symbol = symbol_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC165-supportsInterface}.\\r\\n     */\\r\\n    function supportsInterface(\\r\\n        bytes4 interfaceId\\r\\n    ) public view virtual override(ERC165, IERC165) returns (bool) {\\r\\n        return\\r\\n            interfaceId == type(IERC721).interfaceId ||\\r\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\r\\n            super.supportsInterface(interfaceId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(\\r\\n        address owner\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        require(\\r\\n            owner != address(0),\\r\\n            \\\"ERC721: balance query for the zero address\\\"\\r\\n        );\\r\\n        return _balances[owner];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-ownerOf}.\\r\\n     */\\r\\n    function ownerOf(\\r\\n        uint256 tokenId\\r\\n    ) public view virtual override returns (address) {\\r\\n        address owner = _owners[tokenId];\\r\\n        require(\\r\\n            owner != address(0),\\r\\n            \\\"ERC721: owner query for nonexistent token\\\"\\r\\n        );\\r\\n        return owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721Metadata-name}.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721Metadata-symbol}.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721Metadata-tokenURI}.\\r\\n     */\\r\\n    function tokenURI(\\r\\n        uint256 tokenId\\r\\n    ) public view virtual override returns (string memory) {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721Metadata: URI query for nonexistent token\\\"\\r\\n        );\\r\\n\\r\\n        string memory baseURI = _baseURI();\\r\\n        return\\r\\n            bytes(baseURI).length > 0\\r\\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\\r\\n                : \\\"\\\";\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\r\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\r\\n     * by default, can be overridden in child contracts.\\r\\n     */\\r\\n    function _baseURI() internal view virtual returns (string memory) {\\r\\n        return \\\"\\\";\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-approve}.\\r\\n     */\\r\\n    function approve(address to, uint256 tokenId) public virtual override {\\r\\n        address owner = ERC721.ownerOf(tokenId);\\r\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\r\\n\\r\\n        require(\\r\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\r\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\r\\n        );\\r\\n\\r\\n        _approve(to, tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-getApproved}.\\r\\n     */\\r\\n    function getApproved(\\r\\n        uint256 tokenId\\r\\n    ) public view virtual override returns (address) {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721: approved query for nonexistent token\\\"\\r\\n        );\\r\\n\\r\\n        return _tokenApprovals[tokenId];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-setApprovalForAll}.\\r\\n     */\\r\\n    function setApprovalForAll(\\r\\n        address operator,\\r\\n        bool approved\\r\\n    ) public virtual override {\\r\\n        _setApprovalForAll(_msgSender(), operator, approved);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-isApprovedForAll}.\\r\\n     */\\r\\n    function isApprovedForAll(\\r\\n        address owner,\\r\\n        address operator\\r\\n    ) public view virtual override returns (bool) {\\r\\n        return _operatorApprovals[owner][operator];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-transferFrom}.\\r\\n     */\\r\\n    // function transferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) public virtual override {\\r\\n    //     //solhint-disable-next-line max-line-length\\r\\n    //     require(\\r\\n    //         _isApprovedOrOwner(_msgSender(), tokenId),\\r\\n    //         \\\"ERC721: transfer caller is not owner nor approved\\\"\\r\\n    //     );\\r\\n\\r\\n    //     _transfer(from, to, tokenId);\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-safeTransferFrom}.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) public virtual override {\\r\\n    //     safeTransferFrom(from, to, tokenId, \\\"\\\");\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-safeTransferFrom}.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId,\\r\\n    //     bytes memory _data\\r\\n    // ) public virtual override {\\r\\n    //     require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\r\\n    //     _safeTransfer(from, to, tokenId, _data);\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\r\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\r\\n     *\\r\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\r\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function _safeTransfer(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId,\\r\\n    //     bytes memory _data\\r\\n    // ) internal virtual {\\r\\n    //     _transfer(from, to, tokenId);\\r\\n    //     require(\\r\\n    //         _checkOnERC721Received(from, to, tokenId, _data),\\r\\n    //         \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns whether `tokenId` exists.\\r\\n     *\\r\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\r\\n     *\\r\\n     * Tokens start existing when they are minted (`_mint`),\\r\\n     * and stop existing when they are burned (`_burn`).\\r\\n     */\\r\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\r\\n        return _owners[tokenId] != address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function _isApprovedOrOwner(\\r\\n        address spender,\\r\\n        uint256 tokenId\\r\\n    ) internal view virtual returns (bool) {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721: operator query for nonexistent token\\\"\\r\\n        );\\r\\n        address owner = ERC721.ownerOf(tokenId);\\r\\n        return (spender == owner ||\\r\\n            isApprovedForAll(owner, spender) ||\\r\\n            getApproved(tokenId) == spender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must not exist.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\r\\n        _safeMint(to, tokenId, \\\"\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\r\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\r\\n     */\\r\\n    function _safeMint(\\r\\n        address to,\\r\\n        uint256 tokenId,\\r\\n        bytes memory _data\\r\\n    ) internal virtual {\\r\\n        _mint(to, tokenId);\\r\\n        require(\\r\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\r\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints `tokenId` and transfers it to `to`.\\r\\n     *\\r\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must not exist.\\r\\n     * - `to` cannot be the zero address.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function _mint(address to, uint256 tokenId) internal virtual {\\r\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\r\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), to, tokenId);\\r\\n\\r\\n        _balances[to] += 1;\\r\\n        _owners[tokenId] = to;\\r\\n\\r\\n        emit Transfer(address(0), to, tokenId);\\r\\n\\r\\n        _afterTokenTransfer(address(0), to, tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `tokenId`.\\r\\n     * The approval is cleared when the token is burned.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function _burn(uint256 tokenId) internal virtual {\\r\\n        address owner = ERC721.ownerOf(tokenId);\\r\\n\\r\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\r\\n\\r\\n        // Clear approvals\\r\\n        _approve(address(0), tokenId);\\r\\n\\r\\n        _balances[owner] -= 1;\\r\\n        delete _owners[tokenId];\\r\\n\\r\\n        emit Transfer(owner, address(0), tokenId);\\r\\n\\r\\n        _afterTokenTransfer(owner, address(0), tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers `tokenId` from `from` to `to`.\\r\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must be owned by `from`.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function _transfer(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) internal virtual {\\r\\n    //     require(\\r\\n    //         ERC721.ownerOf(tokenId) == from,\\r\\n    //         \\\"ERC721: transfer from incorrect owner\\\"\\r\\n    //     );\\r\\n    //     require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\r\\n\\r\\n    //     _beforeTokenTransfer(from, to, tokenId);\\r\\n\\r\\n    //     // Clear approvals from the previous owner\\r\\n    //     _approve(address(0), tokenId);\\r\\n\\r\\n    //     _balances[from] -= 1;\\r\\n    //     _balances[to] += 1;\\r\\n    //     _owners[tokenId] = to;\\r\\n\\r\\n    //     emit Transfer(from, to, tokenId);\\r\\n\\r\\n    //     _afterTokenTransfer(from, to, tokenId);\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev Approve `to` to operate on `tokenId`\\r\\n     *\\r\\n     * Emits a {Approval} event.\\r\\n     */\\r\\n    function _approve(address to, uint256 tokenId) internal virtual {\\r\\n        _tokenApprovals[tokenId] = to;\\r\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\r\\n     *\\r\\n     * Emits a {ApprovalForAll} event.\\r\\n     */\\r\\n    function _setApprovalForAll(\\r\\n        address owner,\\r\\n        address operator,\\r\\n        bool approved\\r\\n    ) internal virtual {\\r\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\r\\n        _operatorApprovals[owner][operator] = approved;\\r\\n        emit ApprovalForAll(owner, operator, approved);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\r\\n     * The call is not executed if the target address is not a contract.\\r\\n     *\\r\\n     * @param from address representing the previous owner of the given token ID\\r\\n     * @param to target address that will receive the tokens\\r\\n     * @param tokenId uint256 ID of the token to be transferred\\r\\n     * @param _data bytes optional data to send along with the call\\r\\n     * @return bool whether the call correctly returned the expected magic value\\r\\n     */\\r\\n    function _checkOnERC721Received(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 tokenId,\\r\\n        bytes memory _data\\r\\n    ) private returns (bool) {\\r\\n        if (to.isContract()) {\\r\\n            try\\r\\n                IERC721Receiver(to).onERC721Received(\\r\\n                    _msgSender(),\\r\\n                    from,\\r\\n                    tokenId,\\r\\n                    _data\\r\\n                )\\r\\n            returns (bytes4 retval) {\\r\\n                return retval == IERC721Receiver.onERC721Received.selector;\\r\\n            } catch (bytes memory reason) {\\r\\n                if (reason.length == 0) {\\r\\n                    revert(\\r\\n                        \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\r\\n                    );\\r\\n                } else {\\r\\n                    assembly {\\r\\n                        revert(add(32, reason), mload(reason))\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            return true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any token transfer. This includes minting\\r\\n     * and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\r\\n     * transferred to `to`.\\r\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\r\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 tokenId\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 tokenId\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0xa0634ee7808dc3d6a6d5a2f2911545a56717baacee73e1ffd128397995050ad8\",\"license\":\"MIT\"},\"contracts/dependancies/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC165 standard, as defined in the\\r\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\r\\n *\\r\\n * Implementers can declare support of contract interfaces, which can then be\\r\\n * queried by others ({ERC165Checker}).\\r\\n *\\r\\n * For an implementation, see {ERC165}.\\r\\n */\\r\\ninterface IERC165 {\\r\\n    /**\\r\\n     * @dev Returns true if this contract implements the interface defined by\\r\\n     * `interfaceId`. See the corresponding\\r\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\r\\n     * to learn more about how these ids are created.\\r\\n     *\\r\\n     * This function call must use less than 30 000 gas.\\r\\n     */\\r\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x7010fc6285f84bdfacd656dfeef7fce93d06146958a5d6c252e30e7721a84e02\",\"license\":\"MIT\"},\"contracts/dependancies/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC165.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\\r\\n\\r\\n/**\\r\\n * @dev Required interface of an ERC721 compliant contract.\\r\\n */\\r\\ninterface IERC721 is IERC165 {\\r\\n    /**\\r\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\r\\n     */\\r\\n    event Transfer(\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 indexed tokenId\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\r\\n     */\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed approved,\\r\\n        uint256 indexed tokenId\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\r\\n     */\\r\\n    event ApprovalForAll(\\r\\n        address indexed owner,\\r\\n        address indexed operator,\\r\\n        bool approved\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of tokens in ``owner``'s account.\\r\\n     */\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the owner of the `tokenId` token.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId,\\r\\n    //     bytes calldata data\\r\\n    // ) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\r\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\r\\n     *\\r\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function transferFrom(address from, address to, uint256 tokenId) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\r\\n     * The approval is cleared when the token is transferred.\\r\\n     *\\r\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The caller must own the token or be an approved operator.\\r\\n     * - `tokenId` must exist.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address to, uint256 tokenId) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Approve or remove `operator` as an operator for the caller.\\r\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The `operator` cannot be the caller.\\r\\n     *\\r\\n     * Emits an {ApprovalForAll} event.\\r\\n     */\\r\\n    function setApprovalForAll(address operator, bool _approved) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the account approved for `tokenId` token.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function getApproved(\\r\\n        uint256 tokenId\\r\\n    ) external view returns (address operator);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\r\\n     *\\r\\n     * See {setApprovalForAll}\\r\\n     */\\r\\n    function isApprovedForAll(\\r\\n        address owner,\\r\\n        address operator\\r\\n    ) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x1fbda1b7ffe59460857ad50d5ef1400c7675b30582fefd900e6511458e20c25e\",\"license\":\"MIT\"},\"contracts/dependancies/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC721.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\r\\n\\r\\n/**\\r\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\r\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\r\\n */\\r\\ninterface IERC721Metadata is IERC721 {\\r\\n    /**\\r\\n     * @dev Returns the token collection name.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the token collection symbol.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\r\\n     */\\r\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0xe44454c2c617086390b509b63edfb9c893977095e1034660901356a648a523f5\",\"license\":\"MIT\"},\"contracts/dependancies/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\r\\n\\r\\n/**\\r\\n * @title ERC721 token receiver interface\\r\\n * @dev Interface for any contract that wants to support safeTransfers\\r\\n * from ERC721 asset contracts.\\r\\n */\\r\\ninterface IERC721Receiver {\\r\\n    /**\\r\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\r\\n     * by `operator` from `from`, this function is called.\\r\\n     *\\r\\n     * It must return its Solidity selector to confirm the token transfer.\\r\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\r\\n     *\\r\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\r\\n     */\\r\\n    function onERC721Received(\\r\\n        address operator,\\r\\n        address from,\\r\\n        uint256 tokenId,\\r\\n        bytes calldata data\\r\\n    ) external returns (bytes4);\\r\\n}\\r\\n\",\"keccak256\":\"0x61b8fcb968bcdd451f6122f4ff06d5086a4eca98b6111e3c20a581fa17c4e5b4\",\"license\":\"MIT\"},\"contracts/dependancies/librairies/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\r\\n\\r\\n/**\\r\\n * @dev Collection of functions related to the address type\\r\\n */\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\r\\n     *\\r\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\r\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\r\\n     * constructor.\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // This method relies on extcodesize/address.code.length, which returns 0\\r\\n        // for contracts in construction, since the code is only stored at the end\\r\\n        // of the constructor execution.\\r\\n\\r\\n        return account.code.length > 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(\\r\\n            address(this).balance >= amount,\\r\\n            \\\"Address: insufficient balance\\\"\\r\\n        );\\r\\n\\r\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\r\\n        require(\\r\\n            success,\\r\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain `call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data\\r\\n    ) internal returns (bytes memory) {\\r\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value\\r\\n    ) internal returns (bytes memory) {\\r\\n        return\\r\\n            functionCallWithValue(\\r\\n                target,\\r\\n                data,\\r\\n                value,\\r\\n                \\\"Address: low-level call with value failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(\\r\\n            address(this).balance >= value,\\r\\n            \\\"Address: insufficient balance for call\\\"\\r\\n        );\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.call{value: value}(\\r\\n            data\\r\\n        );\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(\\r\\n        address target,\\r\\n        bytes memory data\\r\\n    ) internal view returns (bytes memory) {\\r\\n        return\\r\\n            functionStaticCall(\\r\\n                target,\\r\\n                data,\\r\\n                \\\"Address: low-level static call failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal view returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function functionDelegateCall(\\r\\n        address target,\\r\\n        bytes memory data\\r\\n    ) internal returns (bytes memory) {\\r\\n        return\\r\\n            functionDelegateCall(\\r\\n                target,\\r\\n                data,\\r\\n                \\\"Address: low-level delegate call failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function functionDelegateCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\r\\n     * revert reason using the provided one.\\r\\n     *\\r\\n     * _Available since v4.3._\\r\\n     */\\r\\n    function verifyCallResult(\\r\\n        bool success,\\r\\n        bytes memory returndata,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x05b5c90d9e116a41a67fc07deaf6c7bc24b0996e43ee07460e340e6a50bc40c6\",\"license\":\"MIT\"},\"contracts/dependancies/librairies/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\r\\n\\r\\n/**\\r\\n * @dev String operations.\\r\\n */\\r\\nlibrary Strings {\\r\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\r\\n     */\\r\\n    function toString(uint256 value) internal pure returns (string memory) {\\r\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\r\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\r\\n\\r\\n        if (value == 0) {\\r\\n            return \\\"0\\\";\\r\\n        }\\r\\n        uint256 temp = value;\\r\\n        uint256 digits;\\r\\n        while (temp != 0) {\\r\\n            digits++;\\r\\n            temp /= 10;\\r\\n        }\\r\\n        bytes memory buffer = new bytes(digits);\\r\\n        while (value != 0) {\\r\\n            digits -= 1;\\r\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\r\\n            value /= 10;\\r\\n        }\\r\\n        return string(buffer);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\r\\n     */\\r\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\r\\n        if (value == 0) {\\r\\n            return \\\"0x00\\\";\\r\\n        }\\r\\n        uint256 temp = value;\\r\\n        uint256 length = 0;\\r\\n        while (temp != 0) {\\r\\n            length++;\\r\\n            temp >>= 8;\\r\\n        }\\r\\n        return toHexString(value, length);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\r\\n     */\\r\\n    function toHexString(\\r\\n        uint256 value,\\r\\n        uint256 length\\r\\n    ) internal pure returns (string memory) {\\r\\n        bytes memory buffer = new bytes(2 * length + 2);\\r\\n        buffer[0] = \\\"0\\\";\\r\\n        buffer[1] = \\\"x\\\";\\r\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\r\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\r\\n            value >>= 4;\\r\\n        }\\r\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\r\\n        return string(buffer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x86cea98eee2d178706fccf2e034533666d219b3e9db5bd9b9d582fbfaa4f068c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":434,"contract":"contracts/dependancies/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":436,"contract":"contracts/dependancies/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":440,"contract":"contracts/dependancies/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":444,"contract":"contracts/dependancies/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":448,"contract":"contracts/dependancies/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":454,"contract":"contracts/dependancies/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependancies/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependancies/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependancies/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa4c79103a9f511b1ba6dde6524b16f0a385103526201d50658c67f160141c495\",\"license\":\"MIT\"},\"contracts/dependancies/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC165.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC165} interface.\\r\\n *\\r\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\r\\n * for the additional interface id that will be supported. For example:\\r\\n *\\r\\n * ```solidity\\r\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\r\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\r\\n * }\\r\\n * ```\\r\\n *\\r\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\r\\n */\\r\\nabstract contract ERC165 is IERC165 {\\r\\n    /**\\r\\n     * @dev See {IERC165-supportsInterface}.\\r\\n     */\\r\\n    function supportsInterface(\\r\\n        bytes4 interfaceId\\r\\n    ) public view virtual override returns (bool) {\\r\\n        return interfaceId == type(IERC165).interfaceId;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x595ffa968dc588f6d779ef9f73f26144dc29cb8c771a41aa0b79c834d86fc18b\",\"license\":\"MIT\"},\"contracts/dependancies/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./Context.sol\\\";\\r\\nimport \\\"./ERC165.sol\\\";\\r\\nimport \\\"./IERC721.sol\\\";\\r\\nimport \\\"./IERC721Metadata.sol\\\";\\r\\nimport \\\"./IERC721Receiver.sol\\\";\\r\\nimport \\\"./librairies/Address.sol\\\";\\r\\nimport \\\"./librairies/Strings.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\\r\\n\\r\\n/**\\r\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\r\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\r\\n * {ERC721Enumerable}.\\r\\n */\\r\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\r\\n    using Address for address;\\r\\n    using Strings for uint256;\\r\\n\\r\\n    // Token name\\r\\n    string private _name;\\r\\n\\r\\n    // Token symbol\\r\\n    string private _symbol;\\r\\n\\r\\n    // Mapping from token ID to owner address\\r\\n    mapping(uint256 => address) private _owners;\\r\\n\\r\\n    // Mapping owner address to token count\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    // Mapping from token ID to approved address\\r\\n    mapping(uint256 => address) private _tokenApprovals;\\r\\n\\r\\n    // Mapping from owner to operator approvals\\r\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\r\\n     */\\r\\n    constructor(string memory name_, string memory symbol_) {\\r\\n        _name = name_;\\r\\n        _symbol = symbol_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC165-supportsInterface}.\\r\\n     */\\r\\n    function supportsInterface(\\r\\n        bytes4 interfaceId\\r\\n    ) public view virtual override(ERC165, IERC165) returns (bool) {\\r\\n        return\\r\\n            interfaceId == type(IERC721).interfaceId ||\\r\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\r\\n            super.supportsInterface(interfaceId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(\\r\\n        address owner\\r\\n    ) public view virtual override returns (uint256) {\\r\\n        require(\\r\\n            owner != address(0),\\r\\n            \\\"ERC721: balance query for the zero address\\\"\\r\\n        );\\r\\n        return _balances[owner];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-ownerOf}.\\r\\n     */\\r\\n    function ownerOf(\\r\\n        uint256 tokenId\\r\\n    ) public view virtual override returns (address) {\\r\\n        address owner = _owners[tokenId];\\r\\n        require(\\r\\n            owner != address(0),\\r\\n            \\\"ERC721: owner query for nonexistent token\\\"\\r\\n        );\\r\\n        return owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721Metadata-name}.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721Metadata-symbol}.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721Metadata-tokenURI}.\\r\\n     */\\r\\n    function tokenURI(\\r\\n        uint256 tokenId\\r\\n    ) public view virtual override returns (string memory) {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721Metadata: URI query for nonexistent token\\\"\\r\\n        );\\r\\n\\r\\n        string memory baseURI = _baseURI();\\r\\n        return\\r\\n            bytes(baseURI).length > 0\\r\\n                ? string(abi.encodePacked(baseURI, tokenId.toString()))\\r\\n                : \\\"\\\";\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\r\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\r\\n     * by default, can be overridden in child contracts.\\r\\n     */\\r\\n    function _baseURI() internal view virtual returns (string memory) {\\r\\n        return \\\"\\\";\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-approve}.\\r\\n     */\\r\\n    function approve(address to, uint256 tokenId) public virtual override {\\r\\n        address owner = ERC721.ownerOf(tokenId);\\r\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\r\\n\\r\\n        require(\\r\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\r\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\r\\n        );\\r\\n\\r\\n        _approve(to, tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-getApproved}.\\r\\n     */\\r\\n    function getApproved(\\r\\n        uint256 tokenId\\r\\n    ) public view virtual override returns (address) {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721: approved query for nonexistent token\\\"\\r\\n        );\\r\\n\\r\\n        return _tokenApprovals[tokenId];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-setApprovalForAll}.\\r\\n     */\\r\\n    function setApprovalForAll(\\r\\n        address operator,\\r\\n        bool approved\\r\\n    ) public virtual override {\\r\\n        _setApprovalForAll(_msgSender(), operator, approved);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-isApprovedForAll}.\\r\\n     */\\r\\n    function isApprovedForAll(\\r\\n        address owner,\\r\\n        address operator\\r\\n    ) public view virtual override returns (bool) {\\r\\n        return _operatorApprovals[owner][operator];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-transferFrom}.\\r\\n     */\\r\\n    // function transferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) public virtual override {\\r\\n    //     //solhint-disable-next-line max-line-length\\r\\n    //     require(\\r\\n    //         _isApprovedOrOwner(_msgSender(), tokenId),\\r\\n    //         \\\"ERC721: transfer caller is not owner nor approved\\\"\\r\\n    //     );\\r\\n\\r\\n    //     _transfer(from, to, tokenId);\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-safeTransferFrom}.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) public virtual override {\\r\\n    //     safeTransferFrom(from, to, tokenId, \\\"\\\");\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721-safeTransferFrom}.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId,\\r\\n    //     bytes memory _data\\r\\n    // ) public virtual override {\\r\\n    //     require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\r\\n    //     _safeTransfer(from, to, tokenId, _data);\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\r\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\r\\n     *\\r\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\r\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function _safeTransfer(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId,\\r\\n    //     bytes memory _data\\r\\n    // ) internal virtual {\\r\\n    //     _transfer(from, to, tokenId);\\r\\n    //     require(\\r\\n    //         _checkOnERC721Received(from, to, tokenId, _data),\\r\\n    //         \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\r\\n    //     );\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns whether `tokenId` exists.\\r\\n     *\\r\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\r\\n     *\\r\\n     * Tokens start existing when they are minted (`_mint`),\\r\\n     * and stop existing when they are burned (`_burn`).\\r\\n     */\\r\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\r\\n        return _owners[tokenId] != address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function _isApprovedOrOwner(\\r\\n        address spender,\\r\\n        uint256 tokenId\\r\\n    ) internal view virtual returns (bool) {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721: operator query for nonexistent token\\\"\\r\\n        );\\r\\n        address owner = ERC721.ownerOf(tokenId);\\r\\n        return (spender == owner ||\\r\\n            isApprovedForAll(owner, spender) ||\\r\\n            getApproved(tokenId) == spender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must not exist.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\r\\n        _safeMint(to, tokenId, \\\"\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\r\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\r\\n     */\\r\\n    function _safeMint(\\r\\n        address to,\\r\\n        uint256 tokenId,\\r\\n        bytes memory _data\\r\\n    ) internal virtual {\\r\\n        _mint(to, tokenId);\\r\\n        require(\\r\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\r\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints `tokenId` and transfers it to `to`.\\r\\n     *\\r\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must not exist.\\r\\n     * - `to` cannot be the zero address.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function _mint(address to, uint256 tokenId) internal virtual {\\r\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\r\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), to, tokenId);\\r\\n\\r\\n        _balances[to] += 1;\\r\\n        _owners[tokenId] = to;\\r\\n\\r\\n        emit Transfer(address(0), to, tokenId);\\r\\n\\r\\n        _afterTokenTransfer(address(0), to, tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `tokenId`.\\r\\n     * The approval is cleared when the token is burned.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function _burn(uint256 tokenId) internal virtual {\\r\\n        address owner = ERC721.ownerOf(tokenId);\\r\\n\\r\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\r\\n\\r\\n        // Clear approvals\\r\\n        _approve(address(0), tokenId);\\r\\n\\r\\n        _balances[owner] -= 1;\\r\\n        delete _owners[tokenId];\\r\\n\\r\\n        emit Transfer(owner, address(0), tokenId);\\r\\n\\r\\n        _afterTokenTransfer(owner, address(0), tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers `tokenId` from `from` to `to`.\\r\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must be owned by `from`.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function _transfer(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) internal virtual {\\r\\n    //     require(\\r\\n    //         ERC721.ownerOf(tokenId) == from,\\r\\n    //         \\\"ERC721: transfer from incorrect owner\\\"\\r\\n    //     );\\r\\n    //     require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\r\\n\\r\\n    //     _beforeTokenTransfer(from, to, tokenId);\\r\\n\\r\\n    //     // Clear approvals from the previous owner\\r\\n    //     _approve(address(0), tokenId);\\r\\n\\r\\n    //     _balances[from] -= 1;\\r\\n    //     _balances[to] += 1;\\r\\n    //     _owners[tokenId] = to;\\r\\n\\r\\n    //     emit Transfer(from, to, tokenId);\\r\\n\\r\\n    //     _afterTokenTransfer(from, to, tokenId);\\r\\n    // }\\r\\n\\r\\n    /**\\r\\n     * @dev Approve `to` to operate on `tokenId`\\r\\n     *\\r\\n     * Emits a {Approval} event.\\r\\n     */\\r\\n    function _approve(address to, uint256 tokenId) internal virtual {\\r\\n        _tokenApprovals[tokenId] = to;\\r\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\r\\n     *\\r\\n     * Emits a {ApprovalForAll} event.\\r\\n     */\\r\\n    function _setApprovalForAll(\\r\\n        address owner,\\r\\n        address operator,\\r\\n        bool approved\\r\\n    ) internal virtual {\\r\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\r\\n        _operatorApprovals[owner][operator] = approved;\\r\\n        emit ApprovalForAll(owner, operator, approved);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\r\\n     * The call is not executed if the target address is not a contract.\\r\\n     *\\r\\n     * @param from address representing the previous owner of the given token ID\\r\\n     * @param to target address that will receive the tokens\\r\\n     * @param tokenId uint256 ID of the token to be transferred\\r\\n     * @param _data bytes optional data to send along with the call\\r\\n     * @return bool whether the call correctly returned the expected magic value\\r\\n     */\\r\\n    function _checkOnERC721Received(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 tokenId,\\r\\n        bytes memory _data\\r\\n    ) private returns (bool) {\\r\\n        if (to.isContract()) {\\r\\n            try\\r\\n                IERC721Receiver(to).onERC721Received(\\r\\n                    _msgSender(),\\r\\n                    from,\\r\\n                    tokenId,\\r\\n                    _data\\r\\n                )\\r\\n            returns (bytes4 retval) {\\r\\n                return retval == IERC721Receiver.onERC721Received.selector;\\r\\n            } catch (bytes memory reason) {\\r\\n                if (reason.length == 0) {\\r\\n                    revert(\\r\\n                        \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\r\\n                    );\\r\\n                } else {\\r\\n                    assembly {\\r\\n                        revert(add(32, reason), mload(reason))\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            return true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any token transfer. This includes minting\\r\\n     * and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\r\\n     * transferred to `to`.\\r\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\r\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 tokenId\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 tokenId\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0xa0634ee7808dc3d6a6d5a2f2911545a56717baacee73e1ffd128397995050ad8\",\"license\":\"MIT\"},\"contracts/dependancies/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./ERC721.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721URIStorage.sol)\\r\\n\\r\\n/**\\r\\n * @dev ERC721 token with storage based token URI management.\\r\\n */\\r\\nabstract contract ERC721URIStorage is ERC721 {\\r\\n    using Strings for uint256;\\r\\n\\r\\n    // Optional mapping for token URIs\\r\\n    mapping(uint256 => string) private _tokenURIs;\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC721Metadata-tokenURI}.\\r\\n     */\\r\\n    function tokenURI(\\r\\n        uint256 tokenId\\r\\n    ) public view virtual override returns (string memory) {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721URIStorage: URI query for nonexistent token\\\"\\r\\n        );\\r\\n\\r\\n        string memory _tokenURI = _tokenURIs[tokenId];\\r\\n        string memory base = _baseURI();\\r\\n\\r\\n        // If there is no base URI, return the token URI.\\r\\n        if (bytes(base).length == 0) {\\r\\n            return _tokenURI;\\r\\n        }\\r\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\r\\n        if (bytes(_tokenURI).length > 0) {\\r\\n            return string(abi.encodePacked(base, _tokenURI));\\r\\n        }\\r\\n\\r\\n        return super.tokenURI(tokenId);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function _setTokenURI(\\r\\n        uint256 tokenId,\\r\\n        string memory _tokenURI\\r\\n    ) internal virtual {\\r\\n        require(\\r\\n            _exists(tokenId),\\r\\n            \\\"ERC721URIStorage: URI set of nonexistent token\\\"\\r\\n        );\\r\\n        _tokenURIs[tokenId] = _tokenURI;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `tokenId`.\\r\\n     * The approval is cleared when the token is burned.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function _burn(uint256 tokenId) internal virtual override {\\r\\n        super._burn(tokenId);\\r\\n\\r\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\r\\n            delete _tokenURIs[tokenId];\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2fc499d3754f7c7d10c8dcaa5ebf2cf618e433334c47a834ff0f1854c7bb9cb3\",\"license\":\"MIT\"},\"contracts/dependancies/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC165 standard, as defined in the\\r\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\r\\n *\\r\\n * Implementers can declare support of contract interfaces, which can then be\\r\\n * queried by others ({ERC165Checker}).\\r\\n *\\r\\n * For an implementation, see {ERC165}.\\r\\n */\\r\\ninterface IERC165 {\\r\\n    /**\\r\\n     * @dev Returns true if this contract implements the interface defined by\\r\\n     * `interfaceId`. See the corresponding\\r\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\r\\n     * to learn more about how these ids are created.\\r\\n     *\\r\\n     * This function call must use less than 30 000 gas.\\r\\n     */\\r\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x7010fc6285f84bdfacd656dfeef7fce93d06146958a5d6c252e30e7721a84e02\",\"license\":\"MIT\"},\"contracts/dependancies/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC165.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\\r\\n\\r\\n/**\\r\\n * @dev Required interface of an ERC721 compliant contract.\\r\\n */\\r\\ninterface IERC721 is IERC165 {\\r\\n    /**\\r\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\r\\n     */\\r\\n    event Transfer(\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 indexed tokenId\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\r\\n     */\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed approved,\\r\\n        uint256 indexed tokenId\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\r\\n     */\\r\\n    event ApprovalForAll(\\r\\n        address indexed owner,\\r\\n        address indexed operator,\\r\\n        bool approved\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of tokens in ``owner``'s account.\\r\\n     */\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the owner of the `tokenId` token.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId,\\r\\n    //     bytes calldata data\\r\\n    // ) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\r\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\r\\n     *\\r\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function transferFrom(address from, address to, uint256 tokenId) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\r\\n     * The approval is cleared when the token is transferred.\\r\\n     *\\r\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The caller must own the token or be an approved operator.\\r\\n     * - `tokenId` must exist.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address to, uint256 tokenId) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Approve or remove `operator` as an operator for the caller.\\r\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The `operator` cannot be the caller.\\r\\n     *\\r\\n     * Emits an {ApprovalForAll} event.\\r\\n     */\\r\\n    function setApprovalForAll(address operator, bool _approved) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the account approved for `tokenId` token.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function getApproved(\\r\\n        uint256 tokenId\\r\\n    ) external view returns (address operator);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\r\\n     *\\r\\n     * See {setApprovalForAll}\\r\\n     */\\r\\n    function isApprovedForAll(\\r\\n        address owner,\\r\\n        address operator\\r\\n    ) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x1fbda1b7ffe59460857ad50d5ef1400c7675b30582fefd900e6511458e20c25e\",\"license\":\"MIT\"},\"contracts/dependancies/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC721.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\r\\n\\r\\n/**\\r\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\r\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\r\\n */\\r\\ninterface IERC721Metadata is IERC721 {\\r\\n    /**\\r\\n     * @dev Returns the token collection name.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the token collection symbol.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\r\\n     */\\r\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0xe44454c2c617086390b509b63edfb9c893977095e1034660901356a648a523f5\",\"license\":\"MIT\"},\"contracts/dependancies/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\r\\n\\r\\n/**\\r\\n * @title ERC721 token receiver interface\\r\\n * @dev Interface for any contract that wants to support safeTransfers\\r\\n * from ERC721 asset contracts.\\r\\n */\\r\\ninterface IERC721Receiver {\\r\\n    /**\\r\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\r\\n     * by `operator` from `from`, this function is called.\\r\\n     *\\r\\n     * It must return its Solidity selector to confirm the token transfer.\\r\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\r\\n     *\\r\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\r\\n     */\\r\\n    function onERC721Received(\\r\\n        address operator,\\r\\n        address from,\\r\\n        uint256 tokenId,\\r\\n        bytes calldata data\\r\\n    ) external returns (bytes4);\\r\\n}\\r\\n\",\"keccak256\":\"0x61b8fcb968bcdd451f6122f4ff06d5086a4eca98b6111e3c20a581fa17c4e5b4\",\"license\":\"MIT\"},\"contracts/dependancies/librairies/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\r\\n\\r\\n/**\\r\\n * @dev Collection of functions related to the address type\\r\\n */\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\r\\n     *\\r\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\r\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\r\\n     * constructor.\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // This method relies on extcodesize/address.code.length, which returns 0\\r\\n        // for contracts in construction, since the code is only stored at the end\\r\\n        // of the constructor execution.\\r\\n\\r\\n        return account.code.length > 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(\\r\\n            address(this).balance >= amount,\\r\\n            \\\"Address: insufficient balance\\\"\\r\\n        );\\r\\n\\r\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\r\\n        require(\\r\\n            success,\\r\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain `call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data\\r\\n    ) internal returns (bytes memory) {\\r\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value\\r\\n    ) internal returns (bytes memory) {\\r\\n        return\\r\\n            functionCallWithValue(\\r\\n                target,\\r\\n                data,\\r\\n                value,\\r\\n                \\\"Address: low-level call with value failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(\\r\\n            address(this).balance >= value,\\r\\n            \\\"Address: insufficient balance for call\\\"\\r\\n        );\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.call{value: value}(\\r\\n            data\\r\\n        );\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(\\r\\n        address target,\\r\\n        bytes memory data\\r\\n    ) internal view returns (bytes memory) {\\r\\n        return\\r\\n            functionStaticCall(\\r\\n                target,\\r\\n                data,\\r\\n                \\\"Address: low-level static call failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal view returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function functionDelegateCall(\\r\\n        address target,\\r\\n        bytes memory data\\r\\n    ) internal returns (bytes memory) {\\r\\n        return\\r\\n            functionDelegateCall(\\r\\n                target,\\r\\n                data,\\r\\n                \\\"Address: low-level delegate call failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function functionDelegateCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\r\\n     * revert reason using the provided one.\\r\\n     *\\r\\n     * _Available since v4.3._\\r\\n     */\\r\\n    function verifyCallResult(\\r\\n        bool success,\\r\\n        bytes memory returndata,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x05b5c90d9e116a41a67fc07deaf6c7bc24b0996e43ee07460e340e6a50bc40c6\",\"license\":\"MIT\"},\"contracts/dependancies/librairies/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\r\\n\\r\\n/**\\r\\n * @dev String operations.\\r\\n */\\r\\nlibrary Strings {\\r\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\r\\n     */\\r\\n    function toString(uint256 value) internal pure returns (string memory) {\\r\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\r\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\r\\n\\r\\n        if (value == 0) {\\r\\n            return \\\"0\\\";\\r\\n        }\\r\\n        uint256 temp = value;\\r\\n        uint256 digits;\\r\\n        while (temp != 0) {\\r\\n            digits++;\\r\\n            temp /= 10;\\r\\n        }\\r\\n        bytes memory buffer = new bytes(digits);\\r\\n        while (value != 0) {\\r\\n            digits -= 1;\\r\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\r\\n            value /= 10;\\r\\n        }\\r\\n        return string(buffer);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\r\\n     */\\r\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\r\\n        if (value == 0) {\\r\\n            return \\\"0x00\\\";\\r\\n        }\\r\\n        uint256 temp = value;\\r\\n        uint256 length = 0;\\r\\n        while (temp != 0) {\\r\\n            length++;\\r\\n            temp >>= 8;\\r\\n        }\\r\\n        return toHexString(value, length);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\r\\n     */\\r\\n    function toHexString(\\r\\n        uint256 value,\\r\\n        uint256 length\\r\\n    ) internal pure returns (string memory) {\\r\\n        bytes memory buffer = new bytes(2 * length + 2);\\r\\n        buffer[0] = \\\"0\\\";\\r\\n        buffer[1] = \\\"x\\\";\\r\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\r\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\r\\n            value >>= 4;\\r\\n        }\\r\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\r\\n        return string(buffer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x86cea98eee2d178706fccf2e034533666d219b3e9db5bd9b9d582fbfaa4f068c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":434,"contract":"contracts/dependancies/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":436,"contract":"contracts/dependancies/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":440,"contract":"contracts/dependancies/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":444,"contract":"contracts/dependancies/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":448,"contract":"contracts/dependancies/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":454,"contract":"contracts/dependancies/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1107,"contract":"contracts/dependancies/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependancies/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependancies/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependancies/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC165 standard, as defined in the\\r\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\r\\n *\\r\\n * Implementers can declare support of contract interfaces, which can then be\\r\\n * queried by others ({ERC165Checker}).\\r\\n *\\r\\n * For an implementation, see {ERC165}.\\r\\n */\\r\\ninterface IERC165 {\\r\\n    /**\\r\\n     * @dev Returns true if this contract implements the interface defined by\\r\\n     * `interfaceId`. See the corresponding\\r\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\r\\n     * to learn more about how these ids are created.\\r\\n     *\\r\\n     * This function call must use less than 30 000 gas.\\r\\n     */\\r\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x7010fc6285f84bdfacd656dfeef7fce93d06146958a5d6c252e30e7721a84e02\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependancies/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependancies/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependancies/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC165 standard, as defined in the\\r\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\r\\n *\\r\\n * Implementers can declare support of contract interfaces, which can then be\\r\\n * queried by others ({ERC165Checker}).\\r\\n *\\r\\n * For an implementation, see {ERC165}.\\r\\n */\\r\\ninterface IERC165 {\\r\\n    /**\\r\\n     * @dev Returns true if this contract implements the interface defined by\\r\\n     * `interfaceId`. See the corresponding\\r\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\r\\n     * to learn more about how these ids are created.\\r\\n     *\\r\\n     * This function call must use less than 30 000 gas.\\r\\n     */\\r\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x7010fc6285f84bdfacd656dfeef7fce93d06146958a5d6c252e30e7721a84e02\",\"license\":\"MIT\"},\"contracts/dependancies/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC165.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\\r\\n\\r\\n/**\\r\\n * @dev Required interface of an ERC721 compliant contract.\\r\\n */\\r\\ninterface IERC721 is IERC165 {\\r\\n    /**\\r\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\r\\n     */\\r\\n    event Transfer(\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 indexed tokenId\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\r\\n     */\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed approved,\\r\\n        uint256 indexed tokenId\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\r\\n     */\\r\\n    event ApprovalForAll(\\r\\n        address indexed owner,\\r\\n        address indexed operator,\\r\\n        bool approved\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of tokens in ``owner``'s account.\\r\\n     */\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the owner of the `tokenId` token.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId,\\r\\n    //     bytes calldata data\\r\\n    // ) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\r\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\r\\n     *\\r\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function transferFrom(address from, address to, uint256 tokenId) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\r\\n     * The approval is cleared when the token is transferred.\\r\\n     *\\r\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The caller must own the token or be an approved operator.\\r\\n     * - `tokenId` must exist.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address to, uint256 tokenId) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Approve or remove `operator` as an operator for the caller.\\r\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The `operator` cannot be the caller.\\r\\n     *\\r\\n     * Emits an {ApprovalForAll} event.\\r\\n     */\\r\\n    function setApprovalForAll(address operator, bool _approved) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the account approved for `tokenId` token.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function getApproved(\\r\\n        uint256 tokenId\\r\\n    ) external view returns (address operator);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\r\\n     *\\r\\n     * See {setApprovalForAll}\\r\\n     */\\r\\n    function isApprovedForAll(\\r\\n        address owner,\\r\\n        address operator\\r\\n    ) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x1fbda1b7ffe59460857ad50d5ef1400c7675b30582fefd900e6511458e20c25e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependancies/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependancies/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependancies/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC165 standard, as defined in the\\r\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\r\\n *\\r\\n * Implementers can declare support of contract interfaces, which can then be\\r\\n * queried by others ({ERC165Checker}).\\r\\n *\\r\\n * For an implementation, see {ERC165}.\\r\\n */\\r\\ninterface IERC165 {\\r\\n    /**\\r\\n     * @dev Returns true if this contract implements the interface defined by\\r\\n     * `interfaceId`. See the corresponding\\r\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\r\\n     * to learn more about how these ids are created.\\r\\n     *\\r\\n     * This function call must use less than 30 000 gas.\\r\\n     */\\r\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x7010fc6285f84bdfacd656dfeef7fce93d06146958a5d6c252e30e7721a84e02\",\"license\":\"MIT\"},\"contracts/dependancies/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC165.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\\r\\n\\r\\n/**\\r\\n * @dev Required interface of an ERC721 compliant contract.\\r\\n */\\r\\ninterface IERC721 is IERC165 {\\r\\n    /**\\r\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\r\\n     */\\r\\n    event Transfer(\\r\\n        address indexed from,\\r\\n        address indexed to,\\r\\n        uint256 indexed tokenId\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\r\\n     */\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed approved,\\r\\n        uint256 indexed tokenId\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\r\\n     */\\r\\n    event ApprovalForAll(\\r\\n        address indexed owner,\\r\\n        address indexed operator,\\r\\n        bool approved\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of tokens in ``owner``'s account.\\r\\n     */\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the owner of the `tokenId` token.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId,\\r\\n    //     bytes calldata data\\r\\n    // ) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\r\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must exist and be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\r\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function safeTransferFrom(\\r\\n    //     address from,\\r\\n    //     address to,\\r\\n    //     uint256 tokenId\\r\\n    // ) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\r\\n     *\\r\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `tokenId` token must be owned by `from`.\\r\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    // function transferFrom(address from, address to, uint256 tokenId) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\r\\n     * The approval is cleared when the token is transferred.\\r\\n     *\\r\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The caller must own the token or be an approved operator.\\r\\n     * - `tokenId` must exist.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address to, uint256 tokenId) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Approve or remove `operator` as an operator for the caller.\\r\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The `operator` cannot be the caller.\\r\\n     *\\r\\n     * Emits an {ApprovalForAll} event.\\r\\n     */\\r\\n    function setApprovalForAll(address operator, bool _approved) external;\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the account approved for `tokenId` token.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `tokenId` must exist.\\r\\n     */\\r\\n    function getApproved(\\r\\n        uint256 tokenId\\r\\n    ) external view returns (address operator);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\r\\n     *\\r\\n     * See {setApprovalForAll}\\r\\n     */\\r\\n    function isApprovedForAll(\\r\\n        address owner,\\r\\n        address operator\\r\\n    ) external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x1fbda1b7ffe59460857ad50d5ef1400c7675b30582fefd900e6511458e20c25e\",\"license\":\"MIT\"},\"contracts/dependancies/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./IERC721.sol\\\";\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\r\\n\\r\\n/**\\r\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\r\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\r\\n */\\r\\ninterface IERC721Metadata is IERC721 {\\r\\n    /**\\r\\n     * @dev Returns the token collection name.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the token collection symbol.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\r\\n     */\\r\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0xe44454c2c617086390b509b63edfb9c893977095e1034660901356a648a523f5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependancies/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependancies/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependancies/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\r\\n\\r\\n/**\\r\\n * @title ERC721 token receiver interface\\r\\n * @dev Interface for any contract that wants to support safeTransfers\\r\\n * from ERC721 asset contracts.\\r\\n */\\r\\ninterface IERC721Receiver {\\r\\n    /**\\r\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\r\\n     * by `operator` from `from`, this function is called.\\r\\n     *\\r\\n     * It must return its Solidity selector to confirm the token transfer.\\r\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\r\\n     *\\r\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\r\\n     */\\r\\n    function onERC721Received(\\r\\n        address operator,\\r\\n        address from,\\r\\n        uint256 tokenId,\\r\\n        bytes calldata data\\r\\n    ) external returns (bytes4);\\r\\n}\\r\\n\",\"keccak256\":\"0x61b8fcb968bcdd451f6122f4ff06d5086a4eca98b6111e3c20a581fa17c4e5b4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependancies/librairies/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbf6a02979f7f36c4725b9d123ef189982e09758aba9c22a0f02add21f4bbb6a64736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xF6 LOG0 0x29 PUSH26 0xF7F36C4725B9D123EF189982E09758ABA9C22A0F02ADD21F4BBB PUSH11 0x64736F6C634300080A0033 ","sourceMap":"203:8738:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbf6a02979f7f36c4725b9d123ef189982e09758aba9c22a0f02add21f4bbb6a64736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xF6 LOG0 0x29 PUSH26 0xF7F36C4725B9D123EF189982E09758ABA9C22A0F02ADD21F4BBB PUSH11 0x64736F6C634300080A0033 ","sourceMap":"203:8738:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependancies/librairies/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependancies/librairies/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\r\\n\\r\\n/**\\r\\n * @dev Collection of functions related to the address type\\r\\n */\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\r\\n     *\\r\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\r\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\r\\n     * constructor.\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // This method relies on extcodesize/address.code.length, which returns 0\\r\\n        // for contracts in construction, since the code is only stored at the end\\r\\n        // of the constructor execution.\\r\\n\\r\\n        return account.code.length > 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(\\r\\n            address(this).balance >= amount,\\r\\n            \\\"Address: insufficient balance\\\"\\r\\n        );\\r\\n\\r\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\r\\n        require(\\r\\n            success,\\r\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain `call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data\\r\\n    ) internal returns (bytes memory) {\\r\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value\\r\\n    ) internal returns (bytes memory) {\\r\\n        return\\r\\n            functionCallWithValue(\\r\\n                target,\\r\\n                data,\\r\\n                value,\\r\\n                \\\"Address: low-level call with value failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(\\r\\n            address(this).balance >= value,\\r\\n            \\\"Address: insufficient balance for call\\\"\\r\\n        );\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.call{value: value}(\\r\\n            data\\r\\n        );\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(\\r\\n        address target,\\r\\n        bytes memory data\\r\\n    ) internal view returns (bytes memory) {\\r\\n        return\\r\\n            functionStaticCall(\\r\\n                target,\\r\\n                data,\\r\\n                \\\"Address: low-level static call failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal view returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function functionDelegateCall(\\r\\n        address target,\\r\\n        bytes memory data\\r\\n    ) internal returns (bytes memory) {\\r\\n        return\\r\\n            functionDelegateCall(\\r\\n                target,\\r\\n                data,\\r\\n                \\\"Address: low-level delegate call failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function functionDelegateCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\r\\n\\r\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\r\\n        return verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\r\\n     * revert reason using the provided one.\\r\\n     *\\r\\n     * _Available since v4.3._\\r\\n     */\\r\\n    function verifyCallResult(\\r\\n        bool success,\\r\\n        bytes memory returndata,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (bytes memory) {\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x05b5c90d9e116a41a67fc07deaf6c7bc24b0996e43ee07460e340e6a50bc40c6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependancies/librairies/Base64.sol":{"Base64":{"abi":[],"devdoc":{"details":"Provides a set of functions to operate with Base64 strings.","kind":"dev","methods":{},"stateVariables":{"_TABLE":{"details":"Base64 Encoding/Decoding Table"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071b8e8dc2dd1a66aca737da811043e79a85a6c02e17cbac7e76514a11a4f498564736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xB8E8DC2DD1A66ACA737DA811043E79A85A6C MUL 0xE1 PUSH29 0xBAC7E76514A11A4F498564736F6C634300080A00330000000000000000 ","sourceMap":"210:3383:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122071b8e8dc2dd1a66aca737da811043e79a85a6c02e17cbac7e76514a11a4f498564736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xB8E8DC2DD1A66ACA737DA811043E79A85A6C MUL 0xE1 PUSH29 0xBAC7E76514A11A4F498564736F6C634300080A00330000000000000000 ","sourceMap":"210:3383:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"encode(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependancies/librairies/Base64.sol\":\"Base64\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependancies/librairies/Base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Base64.sol)\\r\\n\\r\\n/**\\r\\n * @dev Provides a set of functions to operate with Base64 strings.\\r\\n */\\r\\nlibrary Base64 {\\r\\n    /**\\r\\n     * @dev Base64 Encoding/Decoding Table\\r\\n     */\\r\\n    string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\\r\\n     */\\r\\n    function encode(bytes memory data) internal pure returns (string memory) {\\r\\n        /**\\r\\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\r\\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\r\\n         */\\r\\n        if (data.length == 0) return \\\"\\\";\\r\\n\\r\\n        // Loads the table into memory\\r\\n        string memory table = _TABLE;\\r\\n\\r\\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\r\\n        // and split into 4 numbers of 6 bits.\\r\\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\r\\n        // - `data.length + 2`  -> Round up\\r\\n        // - `/ 3`              -> Number of 3-bytes chunks\\r\\n        // - `4 *`              -> 4 characters for each chunk\\r\\n        string memory result = new string(4 * ((data.length + 2) / 3));\\r\\n\\r\\n        /// @solidity memory-safe-assembly\\r\\n        assembly {\\r\\n            // Prepare the lookup table (skip the first \\\"length\\\" byte)\\r\\n            let tablePtr := add(table, 1)\\r\\n\\r\\n            // Prepare result pointer, jump over length\\r\\n            let resultPtr := add(result, 32)\\r\\n\\r\\n            // Run over the input, 3 bytes at a time\\r\\n            for {\\r\\n                let dataPtr := data\\r\\n                let endPtr := add(data, mload(data))\\r\\n            } lt(dataPtr, endPtr) {\\r\\n\\r\\n            } {\\r\\n                // Advance 3 bytes\\r\\n                dataPtr := add(dataPtr, 3)\\r\\n                let input := mload(dataPtr)\\r\\n\\r\\n                // To write each character, shift the 3 bytes (18 bits) chunk\\r\\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\r\\n                // and apply logical AND with 0x3F which is the number of\\r\\n                // the previous character in the ASCII table prior to the Base64 Table\\r\\n                // The result is then added to the table to get the character to write,\\r\\n                // and finally write it in the result pointer but with a left shift\\r\\n                // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\r\\n\\r\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\r\\n                resultPtr := add(resultPtr, 1) // Advance\\r\\n\\r\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\r\\n                resultPtr := add(resultPtr, 1) // Advance\\r\\n\\r\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\r\\n                resultPtr := add(resultPtr, 1) // Advance\\r\\n\\r\\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\r\\n                resultPtr := add(resultPtr, 1) // Advance\\r\\n            }\\r\\n\\r\\n            // When data `bytes` is not exactly 3 bytes long\\r\\n            // it is padded with `=` characters at the end\\r\\n            switch mod(mload(data), 3)\\r\\n            case 1 {\\r\\n                mstore8(sub(resultPtr, 1), 0x3d)\\r\\n                mstore8(sub(resultPtr, 2), 0x3d)\\r\\n            }\\r\\n            case 2 {\\r\\n                mstore8(sub(resultPtr, 1), 0x3d)\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return result;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa4334bfed288f5b9edd1adf7bd19238cfd43ecd10bc039669470bad71545d525\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependancies/librairies/Counters.sol":{"Counters":{"abi":[],"devdoc":{"author":"Matt Condon (@shrugs)","details":"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`","kind":"dev","methods":{},"title":"Counters","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c323eeb880ae87d06df3141873206f19f9c9637ffa7698e4a7311ee8bbebf4064736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C ORIGIN RETURNDATACOPY 0xEB DUP9 EXP 0xE8 PUSH30 0x6DF3141873206F19F9C9637FFA7698E4A7311EE8BBEBF4064736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"438:1000:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c323eeb880ae87d06df3141873206f19f9c9637ffa7698e4a7311ee8bbebf4064736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C ORIGIN RETURNDATACOPY 0xEB DUP9 EXP 0xE8 PUSH30 0x6DF3141873206F19F9C9637FFA7698E4A7311EE8BBEBF4064736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"438:1000:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"current(struct Counters.Counter storage pointer)":"infinite","decrement(struct Counters.Counter storage pointer)":"infinite","increment(struct Counters.Counter storage pointer)":"infinite","reset(struct Counters.Counter storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependancies/librairies/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependancies/librairies/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\r\\n\\r\\n/**\\r\\n * @title Counters\\r\\n * @author Matt Condon (@shrugs)\\r\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\r\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\r\\n *\\r\\n * Include with `using Counters for Counters.Counter;`\\r\\n */\\r\\nlibrary Counters {\\r\\n    struct Counter {\\r\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\r\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\r\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\r\\n        uint256 _value; // default: 0\\r\\n    }\\r\\n\\r\\n    function current(Counter storage counter) internal view returns (uint256) {\\r\\n        return counter._value;\\r\\n    }\\r\\n\\r\\n    function increment(Counter storage counter) internal {\\r\\n        unchecked {\\r\\n            counter._value += 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function decrement(Counter storage counter) internal {\\r\\n        uint256 value = counter._value;\\r\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\r\\n        unchecked {\\r\\n            counter._value = value - 1;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function reset(Counter storage counter) internal {\\r\\n        counter._value = 0;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x317787127117c79d1617d600100541ad8d14a29d7474309464c5ce39933c79eb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/dependancies/librairies/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2138bc587fba756338ffa3fd3a27d51941700a07df609bd89b20a12ff4ba4bb64736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SGT DUP12 0xC5 DUP8 0xFB 0xA7 JUMP CALLER DUP16 STATICCALL EXTCODEHASH 0xD3 LOG2 PUSH30 0x51941700A07DF609BD89B20A12FF4BA4BB64736F6C634300080A00330000 ","sourceMap":"155:1968:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2138bc587fba756338ffa3fd3a27d51941700a07df609bd89b20a12ff4ba4bb64736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 SGT DUP12 0xC5 DUP8 0xFB 0xA7 JUMP CALLER DUP16 STATICCALL EXTCODEHASH 0xD3 LOG2 PUSH30 0x51941700A07DF609BD89B20A12FF4BA4BB64736F6C634300080A00330000 ","sourceMap":"155:1968:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dependancies/librairies/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dependancies/librairies/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\r\\n\\r\\n/**\\r\\n * @dev String operations.\\r\\n */\\r\\nlibrary Strings {\\r\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\r\\n     */\\r\\n    function toString(uint256 value) internal pure returns (string memory) {\\r\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\r\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\r\\n\\r\\n        if (value == 0) {\\r\\n            return \\\"0\\\";\\r\\n        }\\r\\n        uint256 temp = value;\\r\\n        uint256 digits;\\r\\n        while (temp != 0) {\\r\\n            digits++;\\r\\n            temp /= 10;\\r\\n        }\\r\\n        bytes memory buffer = new bytes(digits);\\r\\n        while (value != 0) {\\r\\n            digits -= 1;\\r\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\r\\n            value /= 10;\\r\\n        }\\r\\n        return string(buffer);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\r\\n     */\\r\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\r\\n        if (value == 0) {\\r\\n            return \\\"0x00\\\";\\r\\n        }\\r\\n        uint256 temp = value;\\r\\n        uint256 length = 0;\\r\\n        while (temp != 0) {\\r\\n            length++;\\r\\n            temp >>= 8;\\r\\n        }\\r\\n        return toHexString(value, length);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\r\\n     */\\r\\n    function toHexString(\\r\\n        uint256 value,\\r\\n        uint256 length\\r\\n    ) internal pure returns (string memory) {\\r\\n        bytes memory buffer = new bytes(2 * length + 2);\\r\\n        buffer[0] = \\\"0\\\";\\r\\n        buffer[1] = \\\"x\\\";\\r\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\r\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\r\\n            value >>= 4;\\r\\n        }\\r\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\r\\n        return string(buffer);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x86cea98eee2d178706fccf2e034533666d219b3e9db5bd9b9d582fbfaa4f068c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}